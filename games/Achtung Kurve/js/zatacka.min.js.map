{"version":3,"sources":["webpack:///zatacka.min.js","webpack:///webpack/bootstrap 73e35fdfa26bb70f99d6","webpack:///./src/js/lib/utilities.js","webpack:///./src/js/locales/Zatacka.en_US.js","webpack:///./src/js/strings.js","webpack:///./src/js/lib/preferences/Preference.js","webpack:///./src/js/lib/preferences/PreferencesUtilities.js","webpack:///./src/js/Player.js","webpack:///./src/js/lib/ConfirmationDialog.js","webpack:///./src/js/lib/Dialog.js","webpack:///./src/js/lib/Message.js","webpack:///./src/js/lib/preferences/BooleanPreference.js","webpack:///./src/js/lib/preferences/MultichoicePreference.js","webpack:///./src/js/lib/preferences/RangePreference.js","webpack:///./src/js/GUIController.js","webpack:///./src/js/Game.js","webpack:///./src/js/Renderer.js","webpack:///./src/js/lib/InfoMessage.js","webpack:///./src/js/lib/WarningMessage.js","webpack:///./src/js/lib/preferences/PreferenceManager.js","webpack:///./src/js/preferences.js","webpack:///./src/js/Main.js","webpack:///./src/js/Round.js","webpack:///./src/js/lib/Queue.js","webpack:///./src/js/lib/mainloop.min.js","webpack:///./src/js/lib/preferences/IntegerRangePreference.js","webpack:///./src/js/lib/preferences/MultichoicePreferenceOption.js","webpack:///./src/js/lib/preferences/PreferenceWithValue.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","isObject","obj","typeOf","isNumber","isPositiveNumber","isInt","isPositiveInt","isString","isNonEmptyString","length","arePositiveNumbers","numbers","every","round","number","decimals","Math","pow","sameAbs","a","b","abs","randomFloat","min","max","random","normalizeAngle","pi","PI","angle","radToDeg","radians","distanceToDuration","distance","velocity","log","str","console","CONSOLE_PREFIX","logWarning","warn","logError","error","byID","id","document","getElementById","isHTMLElement","elem","HTMLElement","flush","node","TypeError","textContent","forfor","y_start","y_end","x_start","x_end","func","arg","y","x","this","anyKeyBeingPressed","keyCodes","Array","isArray","some","Keyboard","isDown","anyMouseButtonBeingPressed","mouseButtons","map","MOUSE","unpack","Mouse","anyInputBeingPressed","keysOrMouseButtons","isMouseButton","button","keys","buttonName","isKeyList","isFKey","key","F_KEYS","includes","global","toString","match","toLowerCase","undefined","KEY","freeze","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","PAUSE","CAPS_LOCK","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","INSERT","DELETE","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","LEFT_META","RIGHT_META","SELECT","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","MULTIPLY","ADD","SUBTRACT","DECIMAL","DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","SEMICOLON","EQUALS","COMMA","DASH","PERIOD","FORWARD_SLASH","GRAVE_ACCENT","OPEN_BRACKET","BACK_SLASH","CLOSE_BRACKET","SINGLE_QUOTE","offseted","pack","standard","LEFT","offset","RIGHT","MIDDLE","MOUSE4","MOUSE5","MOUSE_BUTTONS","pressed","keyCode","onKeydown","event","onKeyup","reset","mouseButtonNumber","onMousedown","onMouseup","PLATFORM","strings","os_id_windows","os_id_mac","os_id_linux","os_id_unix","os_name_windows","os_name_mac","os_name_linux","os_name_unix","os_name_unknown","getOS","ua","window","navigator","userAgent","appVersion","indexOf","getFullscreenShortcut","default","hint_start","hint_popup","hint_pick","hint_proceed","hint_next","hint_quit","hint_alt","hint_ctrl","hint_mouse","hint_preferences_access_denied","keyboard_fullscreen_mac","keyboard_fullscreen_standard","getFullscreenHint","shortcut","label_button_alert_ok","label_button_confirm_yes","label_button_confirm_no","label_text_confirm_quit","label_text_confirm_reload","pref_label_cursor","pref_label_description_cursor","pref_label_cursor_always_visible","pref_label_cursor_hidden_when_mouse_used_by_player","pref_label_cursor_always_hidden","pref_label_edge_fix","pref_label_description_edge_fix","pref_label_edge_fix_off","pref_label_edge_fix_minimal","pref_label_edge_fix_full","pref_label_hints","pref_label_description_hints","pref_label_hints_all","pref_label_hints_warnings_only","pref_label_hints_none","pref_label_prevent_spawnkill","pref_label_description_prevent_spawnkill","pref_label_confirm_quit","pref_label_description_confirm_quit","pref_label_scaling","pref_label_description_scaling","pref_label_scaling_prefer_quality","pref_label_scaling_prefer_size","game_url","error_name_security","class_hidden","class_active","class_dialog","class_dialog_alert","class_dialog_confirmation","class_description","class_half_width","class_right_hand_side","class_blurry","class_nocursor","class_tempcursor","class_hints_warnings_only","class_hints_none","html_name_preference_prefix","cursor_hidden","cursor_visible","id_start_hint","id_fullscreen_hint","id_button_show_settings","id_button_hide_settings","pref_number_type_integer","pref_number_type_float","pref_key_cursor","pref_value_cursor_always_visible","pref_value_cursor_hidden_when_mouse_used_by_player","pref_value_cursor_always_hidden","pref_key_edge_fix","pref_value_edge_fix_full","pref_value_edge_fix_minimal","pref_value_edge_fix_off","pref_key_hints","pref_value_hints_all","pref_value_hints_warnings_only","pref_value_hints_none","pref_key_confirm_quit","pref_key_confirm_reload","pref_key_prevent_spawnkill","pref_key_scaling","pref_value_scaling_prefer_quality","pref_value_scaling_prefer_size","_classCallCheck","instance","Constructor","Preference","_createClass","defineProperties","target","props","descriptor","writable","protoProps","staticProps","_PreferencesUtilities","data","label","description","stringifiedValue","string","Player","_utilities","_Queue","arguments","color","L_keys","R_keys","holeConfig","alive","holy","direction","maxSpeed","lastPosition","queuedDraws","Queue","holeTimer","constructor","isHoleConfig","left","top","_this","hasMouseButton","minPaddedHoleSize","maxPaddedHoleSize","minPaddedHoleInterval","maxPaddedHoleInterval","randomPaddedHoleInterval","speed","setTimeout","startCreatingHoles","bind","firstHoleDelay","clearTimeout","cause","paddedHoleSize","randomPaddedHoleSize","paddedHoleDuration","endHole","paddedHoleInterval","paddedHoleIntervalDuration","beginHole","enqueue","player","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","ConfirmationDialog","_Dialog2","_Dialog","question","callback","Function","getPrototypeOf","Dialog","text","Message","styleClass","class","createElement","innerHTML","classList","add","BooleanPreference","_get","receiver","desc","getOwnPropertyDescriptor","parent","_Preference2","_Preference","MultichoicePreference","_MultichoicePreferenceOption","options","option","MultichoicePreferenceOption","e","message","isValidValue","RangePreference","parseFloat","_interopRequireDefault","GUIController","cfg","hideLobby","lobby","STRINGS","showLobby","remove","showDialogsOverlay","dialogsOverlay","hideDialogsOverlay","isLobbyEntry","element","children","isButton","BUTTON_NODE_CLASS","showDialogRightAway","dialog","dialogBox","dialogHTMLElement","currentDialogWithBox","DialogWithBox","setTemporaryCursorVisibility","appendChild","querySelector","focus","currentDialogClosed","box","anyQueuedDialogs","queuedDialogs","shift","escapeShouldCloseCurrentDialog","dialogHTMLElementBoilerplate","alertDialogHTMLElement","alertDialogEventHandler","alertDialogBox","buttonOK","LABEL_ALERT_OK","addEventListener","confirmationDialogHTMLElement","confirmationDialog","confirmationDialogEventHandler","response","confirmationDialogBox","buttonYes","LABEL_CONFIRM_YES","buttonNo","LABEL_CONFIRM_NO","resetScoreboardEntry","entry","resetScoreboard","from","scoreboard","forEach","resetResults","results","setCursorBehavior","behavior","body","tempCursorActive","settingsEntryShouldBeHalfWidth","preference","reduce","acc","current","MULTICHOICE_LABEL_MAX_LENGTH_FOR_HALFWIDTH_FIELDSET","settingsEntryHTMLElement","preferenceValue","div","setAttribute","input","type","dataset","checked","fieldset","legend","radioButton","radioButtonLabel","isIntegerRange","IntegerRangePreference","numberType","FLOAT_RANGE_PREFERENCE_STEP","keyPressed","isShowingDialog","currentlyFocusedButton","BUTTON_TAG_NAME","shiftIsDown","previousButton","nextButton","previousSibling","nextSibling","click","preventDefault","showDialog","push","setEdgePadding","padding","style","width","ORIGINAL_LEFT_WIDTH","setBlurryScaling","allowed","playerReady","index","controls","playerUnready","allPlayersUnready","gameStarted","gameQuit","hideKonecHry","clearMessages","konecHry","showKonecHry","KONEC_HRY","showMessage","currentMessages","updateMessages","showSettings","showingSettings","settings","hideSettings","isShowingSettings","updateSettingsForm","preferencesWithData","settingsForm","settingsEntries","preferenceWithData","consecutiveHalfWidthDivs","currentEntry","contains","settingsEntry","parseSettingsForm","newSettings","inputs","querySelectorAll","parseInt","selects","select","selectedIndex","hideMessage","filter","msg","messages","messagesContainer","insertBefore","toHTMLElement","setMessageMode","mode","updateBoard","board","newScore","digitClassFactory","digit","createDigit","newScoreDigitClasses","split","digitClass","digitElement","updateScoreOfPlayer","offsetWidth","HTMLButtonElement","TEXT","_BooleanPreference","_RangePreference","_IntegerRangePreference","_MultichoicePreference","_ConfirmationDialog","_ZatackaEn_US","_ZatackaEn_US2","_strings","_strings2","Game","_mainloopMin","_mainloopMin2","_Player","_Round","config","renderer","guiController","PRACTICE","COMPETITIVE","DEFAULT_MODE","DEFAULT_TARGET_SCORE","MAX_TARGET_SCORE","MAX_PLAYERS","MAX_QUOTA_THAT_SPAWN_CIRCLES_MAY_FILL","DESIRED_MINIMUM_SPAWN_DISTANCE_TURNING_RADIUS_FACTOR","isRenderer","isGUIController","canvas","height","pixels","players","rounds","preventSpawnkill","totalNumberOfTicks","targetScore","initMainLoop","started","ended","proceedHintTimer","quitHintTimer","coordinate","thickness","floor","tickrate","turningRadius","x_min","spawnMargin","y_min","x_max","y_max","edge","dir","t","dir_parallel","dir_perpendicular","hitboxPixels","getLastPosition","dir_horizontal","dir_vertical","frontPixel_left","computeFrontCornerPixel","frontPixel_top","pixelAddress","computeFrontEdgePixel","turningRadiusPart","spawnAreaCoordinates","computeSpawnArea","availableSpawnArea","maximumSafeDistance","sqrt","getNumberOfPlayers","desiredMinimumSpawnDistance","pos","playerPos","pos1","pos2","safeMinimumSpawnDistance","safePos","randomSpawnPosition","isSafeSpawnPosition","spawnArea","minSpawnAngle","maxSpawnAngle","addr","find","hasID","isAlive","getLivePlayers","accumulateScore","sum","getSuccessOfPlayer","getMode","score","ts","mts","setSize","getCurrentRound","getResults","isCompetitive","getNumberOfLivePlayers","isLive","hasReachedTargetScore","getScoreOfPlayer","getID","getTargetScore","computeHitbox","isOccupiedPixelAddress","isPlayer","getPlayerByID","maxPlayers","RangeError","hasPlayer","setMaxSpeed","GUI_playerReady","playerToRemove","GUI_playerUnready","_this2","setTargetScore","calculateTargetScore","GUI_updateScoreOfPlayer","GUI_gameStarted","MainLoop","start","Uint8Array","beginNewRound","stop","isRunning","GUI_konecHry","showQuitHint","hintDelay","fill","Render_clearField","GUI_showMessage","next","GUI_hideMessage","quit","Round","resetPlayers","clearField","sortPlayers","spawnAndStartPlayers","stopPlayers","showProceedHint","sort","startPlayer","stopPlayer","resetPlayer","right","bottom","occupyPixel","Render_drawSquare","getColor","_this3","stopFlickering","clearInterval","flickerTicker","edgeOfSquare","isVisible","setInterval","Render_clearSquare","flickerFrequency","flickerDuration","position","beAt","occupy","flicker","spawnPlayer","spawnPosition","safeSpawnPosition","spawn","randomSpawnAngle","startPlayers","isEmpty","currentDraw","dequeue","justWasAt","isOnField","isCrashing","death","isHoly","Render_drawHead","_this4","updateScore","die","updateGUIScoreboard","isRoundOver","winner","winRound","endRound","hideProceedHint","hideQuitHint","isGameOver","isPostRound","isEnded","drawSquare","drawSquare_overlay","clearSquare","clearRectangle_overlay","clearRectangle","delta","angleChange","computeAngleChange","getDirection","isPressingLeft","isPressingRight","setDirection","theta","getVelocity","cos","sin","_this5","updatePlayer","maxTicksBetweenDraws","enqueueDraw","Render_clearHeads","drawPlayer","drawHead","framerate","panic","discardedTime","resetFrameDelta","setUpdate","update","setDraw","draw","setEnd","end","setSimulationTimestep","setMaxAllowedFPS","maxFramerate","numberOfPlayers","Renderer","mainCanvas","overlayCanvas","_drawRectangle","context","fillStyle","fillRect","_clearRectangle","clearRect","_setSize","size","context_main","context_overlay","clearSquare_overlay","getContext","InfoMessage","_Message2","_Message","WarningMessage","PreferenceManager","preferencesData","parsePreference","pref","preferenceExists","getPreference","PREFERENCES","getCachedPreference","CACHED_PREFERENCES_WITH_VALUES","preferenceWithValue","getAllPreferencesWithValues_saved","PreferenceWithValue","getSaved","getAllPreferencesWithValues_cached","getCached","getAllPreferencesWithDefaultValues","getDefaultValue","getKey","isValidPreferenceValue","setToDefaultValue","set","Error","LS_prefix","LOCALSTORAGE_PREFIX","localStorage","setItem","stringify","invalidValue","savedValue","getItem","parse","setAllToDefault","defaultValue","_PreferenceWithValue","_Game","_Renderer","_GUIController","_preferences","_preferences2","_PreferenceManager","_InfoMessage","_WarningMessage","isProceedKey","proceed","isQuitKey","shouldPreventDefault","ALLOWED_KEYS","game","isStarted","newCanvasWidth","ORIGINAL_WIDTH","newCanvasHeight","ORIGINAL_HEIGHT","setEdgeMode","TOTAL_BORDER_THICKNESS","setScalingMode","getHoleConfig","minHoleSize","maxHoleSize","minHoleInterval","maxHoleInterval","getPaddedHoleConfig","paddedHoleConfig","defaultPlayerData","defaultPlayers","defaultPlayer","playerData","keyL","keyR","applyCursorBehavior","mouseIsBeingUsed","getPlayers","preferenceManager","proceedKeyPressedInLobby","numberOfReadyPlayers","setMode","usesAnyMouseButton","checkForDangerousInput","hasKey","ctrl","alt","mouse","addPlayer","hintPickTimer","pick","hintProceedTimer","removePlayer","defaultPlayerHasLeftKey","pressedKey","defaultPlayerHasRightKey","addOrRemovePlayer","eventConsumer","stopPropagation","keyPressedInLobby","mouseClickedInLobby","keyHandler","gameKeyHandler","settingsKeyHandler","lobbyKeyHandler","mouseHandler","gameMouseHandler","settingsMouseHandler","HTMLAnchorElement","lobbyMouseHandler","unloadHandler","gameUnloadHandler","KEY_RELOAD","reload","removeEventListener","location","quitGame","newGame","applySettings","isPaused","resume","shouldQuitOnProceedKey","proceedKeyPressed","shouldQuitOnQuitKey","dialogs","confirmation_quit","shouldShowReloadConfirmationOnReloadKey","confirmation_reload","returnValue","handleSettingsAccessError","newSetting","preference_value_edge_fix","preference_value_hints","preference_value_prevent_spawnkill","preference_value_scaling","setPreventSpawnkill","preferences_access_denied","blurHandler","pause","addShowSettingsButtonEventListener","showSettingsButton","addHideSettingsButtonEventListener","hideSettingsButton","canvas_main","canvas_overlay","KEY_FULLSCREEN","KEY_DEVTOOLS","popup","history","getLength","hasItem","slice","peek","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","Symbol","iterator","j","u","q","g","f","h","r","k","requestAnimationFrame","Date","now","cancelAnimationFrame","getSimulationTimestep","getFPS","getMaxAllowedFPS","setBegin","define","_RangePreference2"],"mappings":"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","file":"zatacka.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/js\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 19);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.isObject = isObject;\nexports.isNumber = isNumber;\nexports.isPositiveNumber = isPositiveNumber;\nexports.isInt = isInt;\nexports.isPositiveInt = isPositiveInt;\nexports.isString = isString;\nexports.isNonEmptyString = isNonEmptyString;\nexports.arePositiveNumbers = arePositiveNumbers;\nexports.round = round;\nexports.sameAbs = sameAbs;\nexports.randomFloat = randomFloat;\nexports.normalizeAngle = normalizeAngle;\nexports.radToDeg = radToDeg;\nexports.distanceToDuration = distanceToDuration;\nexports.log = log;\nexports.logWarning = logWarning;\nexports.logError = logError;\nexports.byID = byID;\nexports.isHTMLElement = isHTMLElement;\nexports.flush = flush;\nexports.forfor = forfor;\nexports.anyKeyBeingPressed = anyKeyBeingPressed;\nexports.anyMouseButtonBeingPressed = anyMouseButtonBeingPressed;\nexports.anyInputBeingPressed = anyInputBeingPressed;\nexports.isMouseButton = isMouseButton;\nexports.isKeyList = isKeyList;\nexports.isFKey = isFKey;\nvar typeOf = function (global) {\n    return function (obj) {\n        if (obj === global) {\n            return \"global\";\n        }\n        return {}.toString.call(obj).match(/\\s([a-z|A-Z]+)/)[1].toLowerCase();\n    };\n}(undefined);\n\nvar CONSOLE_PREFIX = \"[Zatacka] \";\n\nvar KEY = exports.KEY = Object.freeze({ BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, PAUSE: 19, CAPS_LOCK: 20, ESCAPE: 27, SPACE: 32, PAGE_UP: 33, PAGE_DOWN: 34, END: 35, HOME: 36, LEFT_ARROW: 37, UP_ARROW: 38, RIGHT_ARROW: 39, DOWN_ARROW: 40, INSERT: 45, DELETE: 46, \"0\": 48, \"1\": 49, \"2\": 50, \"3\": 51, \"4\": 52, \"5\": 53, \"6\": 54, \"7\": 55, \"8\": 56, \"9\": 57, A: 65, B: 66, C: 67, D: 68, E: 69, F: 70, G: 71, H: 72, I: 73, J: 74, K: 75, L: 76, M: 77, N: 78, O: 79, P: 80, Q: 81, R: 82, S: 83, T: 84, U: 85, V: 86, W: 87, X: 88, Y: 89, Z: 90, LEFT_META: 91, RIGHT_META: 92, SELECT: 93, NUMPAD_0: 96, NUMPAD_1: 97, NUMPAD_2: 98, NUMPAD_3: 99, NUMPAD_4: 100, NUMPAD_5: 101, NUMPAD_6: 102, NUMPAD_7: 103, NUMPAD_8: 104, NUMPAD_9: 105, MULTIPLY: 106, ADD: 107, SUBTRACT: 109, DECIMAL: 110, DIVIDE: 111, F1: 112, F2: 113, F3: 114, F4: 115, F5: 116, F6: 117, F7: 118, F8: 119, F9: 120, F10: 121, F11: 122, F12: 123, NUM_LOCK: 144, SCROLL_LOCK: 145, SEMICOLON: 186, EQUALS: 187, COMMA: 188, DASH: 189, PERIOD: 190, FORWARD_SLASH: 191, GRAVE_ACCENT: 192, OPEN_BRACKET: 219, BACK_SLASH: 220, CLOSE_BRACKET: 221, SINGLE_QUOTE: 222 });\n\nvar MOUSE = exports.MOUSE = Object.freeze(function () {\n    var offset = 1000;\n    return Object.freeze({\n        unpack: function unpack(offseted) {\n            return offseted - offset;\n        },\n        pack: function pack(standard) {\n            return standard + offset;\n        },\n        LEFT: offset + 0,\n        RIGHT: offset + 2,\n        MIDDLE: offset + 1,\n        MOUSE4: offset + 3,\n        MOUSE5: offset + 4\n    });\n}());\n\nvar F_KEYS = exports.F_KEYS = Object.freeze([KEY.F1, KEY.F2, KEY.F3, KEY.F4, KEY.F5, KEY.F6, KEY.F7, KEY.F8, KEY.F9, KEY.F10, KEY.F11, KEY.F12]);\n\nvar MOUSE_BUTTONS = exports.MOUSE_BUTTONS = Object.freeze([MOUSE.LEFT, MOUSE.RIGHT, MOUSE.MIDDLE, MOUSE.MOUSE4, MOUSE.MOUSE5]);\n\nfunction isObject(obj) {\n    return typeOf(obj) === \"object\";\n}\n\nfunction isNumber(n) {\n    return typeOf(n) === \"number\";\n}\n\nfunction isPositiveNumber(n) {\n    return isNumber(n) && n > 0;\n}\n\nfunction isInt(n) {\n    return isNumber(n) && n % 1 === 0;\n}\n\nfunction isPositiveInt(n) {\n    return isInt(n) && n > 0;\n}\n\nfunction isString(s) {\n    return typeOf(s) === \"string\";\n}\n\nfunction isNonEmptyString(s) {\n    return isString(s) && s.length > 0;\n}\n\nfunction arePositiveNumbers(numbers) {\n    return numbers.every(isPositiveNumber);\n}\n\nfunction round(number, decimals) {\n    return Math.round(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n\nfunction sameAbs(a, b) {\n    return Math.abs(a) === Math.abs(b);\n}\n\n/**\n * Generates a random float between min (inclusive) and max (exclusive).\n *\n * @param {Number} min\n *   Minimum value (inclusive).\n * @param {Number} max\n *   Maximum value (exclusive).\n */\nfunction randomFloat(min, max) {\n    return Math.random() * (max - min) + min;\n}\n\nfunction normalizeAngle(a) {\n    var pi = Math.PI;\n    var angle = a % (2 * pi);\n    angle = (angle + 2 * pi) % (2 * pi);\n    if (angle > pi) {\n        angle = angle - 2 * pi;\n    }\n    return angle;\n}\n\nfunction radToDeg(radians) {\n    return 180 / Math.PI * radians;\n}\n\nfunction distanceToDuration(distance, velocity) {\n    return distance / velocity * 1000; // milliseconds\n}\n\nfunction log(str) {\n    console.log(CONSOLE_PREFIX + str);\n}\n\nfunction logWarning(str) {\n    console.warn(CONSOLE_PREFIX + str);\n}\n\nfunction logError(str) {\n    console.error(CONSOLE_PREFIX + str);\n}\n\nfunction byID(id) {\n    return document.getElementById(id);\n}\n\nfunction isHTMLElement(elem) {\n    return elem instanceof HTMLElement;\n}\n\nfunction flush(node) {\n    if (isHTMLElement(node)) {\n        node.textContent = \"\";\n    } else {\n        throw new TypeError(node + \" is not a DOM node.\");\n    }\n}\n\nfunction forfor(y_start, y_end, x_start, x_end, func, arg) {\n    for (var y = y_start; y < y_end; y++) {\n        for (var x = x_start; x < x_end; x++) {\n            func.call(this, x, y, arg);\n        }\n    }\n}\n\nvar Keyboard = exports.Keyboard = {\n    pressed: {},\n    isDown: function isDown(keyCode) {\n        return !!this.pressed[keyCode];\n    },\n    onKeydown: function onKeydown(event) {\n        this.pressed[event.keyCode] = true;\n    },\n    onKeyup: function onKeyup(event) {\n        delete this.pressed[event.keyCode];\n    },\n    reset: function reset() {\n        this.pressed = {};\n    }\n};\n\nvar Mouse = exports.Mouse = {\n    pressed: {},\n    isDown: function isDown(mouseButtonNumber) {\n        return this.pressed[mouseButtonNumber];\n    },\n    onMousedown: function onMousedown(event) {\n        this.pressed[event.button] = true;\n    },\n    onMouseup: function onMouseup(event) {\n        delete this.pressed[event.button];\n    },\n    reset: function reset() {\n        this.pressed = {};\n    }\n};\n\nfunction anyKeyBeingPressed(keyCodes) {\n    return Array.isArray(keyCodes) && keyCodes.some(Keyboard.isDown, Keyboard);\n}\n\nfunction anyMouseButtonBeingPressed(mouseButtons) {\n    return Array.isArray(mouseButtons) && mouseButtons.map(MOUSE.unpack).some(Mouse.isDown, Mouse);\n}\n\nfunction anyInputBeingPressed(keysOrMouseButtons) {\n    return anyKeyBeingPressed(keysOrMouseButtons) || anyMouseButtonBeingPressed(keysOrMouseButtons);\n}\n\nfunction isMouseButton(button) {\n    return isPositiveInt(button) && Object.keys(MOUSE).some(function (buttonName) {\n        return MOUSE.hasOwnProperty(buttonName);\n    });\n}\n\nfunction isKeyList(keys) {\n    return Array.isArray(keys) && keys.length > 0 && keys.every(isPositiveInt);\n}\n\nfunction isFKey(key) {\n    return F_KEYS.includes(key);\n}\n\nvar PLATFORM = exports.PLATFORM = function () {\n    var strings = {\n        os_id_windows: \"Win\",\n        os_id_mac: \"Mac\",\n        os_id_linux: \"Linux\",\n        os_id_unix: \"X11\",\n\n        os_name_windows: \"Windows\",\n        os_name_mac: \"Mac\",\n        os_name_linux: \"Linux\",\n        os_name_unix: \"UNIX\",\n        os_name_unknown: \"Unknown\"\n    };\n\n    return {\n        getOS: function getOS() {\n            var ua = window.navigator.userAgent || window.navigator.appVersion;\n            if (isNonEmptyString(ua)) {\n                if (ua.indexOf(strings.os_id_windows) > -1) {\n                    return strings.os_name_windows;\n                }\n                if (ua.indexOf(strings.os_id_mac) > -1) {\n                    return strings.os_name_mac;\n                }\n                if (ua.indexOf(strings.os_id_linux) > -1) {\n                    return strings.os_name_linux;\n                }\n                if (ua.indexOf(strings.os_id_unix) > -1) {\n                    return strings.os_name_unix;\n                }\n            }\n            return strings.os_name_unknown;\n        },\n        getFullscreenShortcut: function getFullscreenShortcut() {\n            switch (PLATFORM.getOS()) {\n                case strings.os_name_mac:\n                    return \"mac\";\n                    break;\n                default:\n                    return \"default\";\n            }\n        }\n    };\n}();\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function () {\n    var KEY_SHIFT = \"⇧\";\n    var KEY_CMD = \"⌘\";\n    var KEY_PROCEED = \"Space or Enter\";\n    var KEY_QUIT = \"Esc\";\n\n    return Object.freeze({\n        hint_start: \"Press <kbd>Space</kbd> to start\",\n        hint_popup: \"It is recommended to run Kurve in its own window without history (to avoid switching tabs or navigating back in history mid-game). Click here to do so.\",\n        hint_pick: \"Pick your desired color by pressing the corresponding LEFT key (e.g. M for Orange).\",\n        hint_proceed: \"Press \" + KEY_PROCEED + \" to start!\",\n        hint_next: \"Press \" + KEY_PROCEED + \" to proceed, or \" + KEY_QUIT + \" to quit.\",\n        hint_quit: \"Press \" + KEY_PROCEED + \" to start over.\",\n        hint_alt: \"Alt plus some other keys may cause undesired behavior (e.g. switching windows).\",\n        hint_ctrl: \"Ctrl plus some other keys may cause undesired behavior (e.g. closing the tab).\",\n        hint_mouse: \"Make sure to keep the mouse cursor inside the browser window.\",\n        hint_preferences_access_denied: \"Could not save/load settings because access to localStorage was denied by the browser. This might be caused by \\\"third-party site data\\\" being blocked or similar.\",\n\n        keyboard_fullscreen_mac: \"<kbd>\" + KEY_CMD + \" + Ctrl + F</kbd> and/or <kbd>\" + KEY_CMD + \" + \" + KEY_SHIFT + \" + F</kbd>\",\n        keyboard_fullscreen_standard: \"<kbd>F11</kbd>\",\n\n        getFullscreenHint: function getFullscreenHint(shortcut) {\n            return \"Press \" + shortcut + \" to toggle fullscreen\";\n        },\n\n        label_button_alert_ok: \"OK\",\n        label_button_confirm_yes: \"Yes\",\n        label_button_confirm_no: \"No\",\n\n        label_text_confirm_quit: \"Are you sure you want to quit?\",\n        label_text_confirm_reload: \"Are you sure you want to reload the application?\",\n\n        pref_label_cursor: \"Mouse pointer\",\n        pref_label_description_cursor: \"Control how the pointer behaves when the game is live. (It is always visible in the menu.) \\\"Used by player\\\" means that a player is using the mouse to control their Kurve.\",\n        pref_label_cursor_always_visible: \"Always visible\",\n        pref_label_cursor_hidden_when_mouse_used_by_player: \"Hidden when mouse used by player\",\n        pref_label_cursor_always_hidden: \"Always hidden\",\n\n        pref_label_edge_fix: \"Invisible border fix\",\n        pref_label_description_edge_fix: \"Shrink the playing field slightly to make the gray border visible if the monitor is exactly the same height and/or width as the game (in pixels).\",\n        pref_label_edge_fix_off: \"Off\",\n        pref_label_edge_fix_minimal: \"Minimal\",\n        pref_label_edge_fix_full: \"Full\",\n\n        pref_label_hints: \"Messages\",\n        pref_label_description_hints: \"Hints (white text) are unnecessary for experienced Kurve players. Warnings (yellow) can be useful for players new to playing Kurve in the browser.\",\n        pref_label_hints_all: \"Hints and warnings\",\n        pref_label_hints_warnings_only: \"Warnings only\",\n        pref_label_hints_none: \"None\",\n\n        pref_label_prevent_spawnkill: \"Prevent spawnkills\",\n        pref_label_description_prevent_spawnkill: \"Enforce a minimum distance between players at round start.\",\n\n        pref_label_confirm_quit: \"Confirm quit\",\n        pref_label_description_confirm_quit: \"Ask for confirmation before quitting to the main menu (Esc) or reloading the application (F5).\",\n\n        pref_label_scaling: \"Scaling\",\n        pref_label_description_scaling: \"Visual quality ensures a crisp, pixelmapped image. On-screen size may result in blurry graphics and other visual errors, but can be useful if the game is very small on your screen.\",\n        pref_label_scaling_prefer_quality: \"Prefer visual quality\",\n        pref_label_scaling_prefer_size: \"Prefer on-screen size\"\n    });\n}();\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = Object.freeze({\n    game_url: \"ZATACKA.html\",\n\n    error_name_security: \"SecurityError\",\n\n    class_hidden: \"hidden\",\n    class_active: \"active\",\n    class_dialog: \"dialog\",\n    class_dialog_alert: \"alert\",\n    class_dialog_confirmation: \"confirmation\",\n    class_description: \"description\",\n    class_half_width: \"half-width\",\n    class_right_hand_side: \"right-hand-side\",\n    class_blurry: \"blurry\",\n    class_nocursor: \"nocursor\",\n    class_tempcursor: \"tempcursor\",\n    class_hints_warnings_only: \"hints-warnings-only\",\n    class_hints_none: \"hints-none\",\n    html_name_preference_prefix: \"preference-\",\n\n    cursor_hidden: \"hidden\",\n    cursor_visible: \"visible\",\n\n    id_start_hint: \"start-hint\",\n    id_fullscreen_hint: \"fullscreen-hint\",\n    id_button_show_settings: \"button-show-settings\",\n    id_button_hide_settings: \"button-hide-settings\",\n\n    pref_number_type_integer: \"integer\",\n    pref_number_type_float: \"float\",\n\n    pref_key_cursor: \"cursor\",\n    pref_value_cursor_always_visible: \"always_visible\",\n    pref_value_cursor_hidden_when_mouse_used_by_player: \"hidden_when_mouse_used_by_player\",\n    pref_value_cursor_always_hidden: \"always_hidden\",\n\n    pref_key_edge_fix: \"edge_fix\",\n    pref_value_edge_fix_full: \"full\",\n    pref_value_edge_fix_minimal: \"minimal\",\n    pref_value_edge_fix_off: \"off\",\n\n    pref_key_hints: \"hints\",\n    pref_value_hints_all: \"all\",\n    pref_value_hints_warnings_only: \"warnings\",\n    pref_value_hints_none: \"none\",\n\n    pref_key_confirm_quit: \"confirm_quit\",\n    pref_key_confirm_reload: \"confirm_reload\",\n    pref_key_prevent_spawnkill: \"prevent_spawnkill\",\n\n    pref_key_scaling: \"scaling\",\n    pref_value_scaling_prefer_quality: \"prefer_quality\",\n    pref_value_scaling_prefer_size: \"prefer_size\"\n});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Preference = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _PreferencesUtilities = __webpack_require__(4);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Preference = exports.Preference = function () {\n    function Preference(data) {\n        _classCallCheck(this, Preference);\n\n        if (!(0, _PreferencesUtilities.isString)(data.key)) {\n            throw new TypeError(\"key must be a string (found \" + data.key + \"). More info: \" + data);\n        } else if (data.default === undefined) {\n            throw new TypeError(\"Preference '\" + data.key + \"' must have a default value.\");\n        } else if (data.label === undefined) {\n            throw new TypeError(\"Preference '\" + data.key + \"' must have a label.\");\n        } else if (data.description === undefined) {\n            throw new TypeError(\"Preference '\" + data.key + \"' must have a description.\");\n        }\n        this.key = data.key;\n        this.label = data.label;\n        this.default = data.default;\n        this.description = data.description;\n    }\n\n    _createClass(Preference, [{\n        key: \"isValidValue\",\n        value: function isValidValue(value) {\n            return (0, _PreferencesUtilities.isString)(value);\n        }\n    }, {\n        key: \"invalidValue\",\n        value: function invalidValue(value) {\n            throw new TypeError(value + \" is not a valid value for preference '\" + this.key + \"'.\");\n        }\n    }, {\n        key: \"getDefaultValue\",\n        value: function getDefaultValue() {\n            return this.default;\n        }\n    }], [{\n        key: \"stringify\",\n        value: function stringify(value) {\n            return value.toString();\n        }\n    }, {\n        key: \"parse\",\n        value: function parse(stringifiedValue) {\n            return stringifiedValue;\n        }\n    }]);\n\n    return Preference;\n}();\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.log = log;\nexports.logWarning = logWarning;\nexports.logError = logError;\nexports.isObject = isObject;\nexports.isNumber = isNumber;\nexports.isPositiveNumber = isPositiveNumber;\nexports.isInt = isInt;\nexports.isPositiveInt = isPositiveInt;\nexports.isString = isString;\nexports.isNonEmptyString = isNonEmptyString;\nexports.arePositiveNumbers = arePositiveNumbers;\nexports.round = round;\nvar typeOf = function (global) {\n    return function (obj) {\n        if (obj === global) {\n            return \"global\";\n        }\n        return {}.toString.call(obj).match(/\\s([a-z|A-Z]+)/)[1].toLowerCase();\n    };\n}(undefined);\n\nvar CONSOLE_PREFIX = \"[Preferences] \";\n\nfunction log(string) {\n    console.log(CONSOLE_PREFIX + string);\n}\n\nfunction logWarning(string) {\n    console.warn(CONSOLE_PREFIX + string);\n}\n\nfunction logError(string) {\n    console.error(CONSOLE_PREFIX + string);\n}\n\nfunction isObject(obj) {\n    return typeOf(obj) === \"object\";\n}\n\nfunction isNumber(n) {\n    return typeOf(n) === \"number\";\n}\n\nfunction isPositiveNumber(n) {\n    return isNumber(n) && n > 0;\n}\n\nfunction isInt(n) {\n    return isNumber(n) && n % 1 === 0;\n}\n\nfunction isPositiveInt(n) {\n    return isInt(n) && n > 0;\n}\n\nfunction isString(s) {\n    return typeOf(s) === \"string\";\n}\n\nfunction isNonEmptyString(s) {\n    return isString(s) && s.length > 0;\n}\n\nfunction arePositiveNumbers(numbers) {\n    return numbers.every(isPositiveNumber);\n}\n\nfunction round(number, decimals) {\n    return Math.round(number * Math.pow(10, decimals)) / Math.pow(10, decimals);\n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Player = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _utilities = __webpack_require__(0);\n\nvar _Queue = __webpack_require__(22);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Player = exports.Player = function () {\n    function Player(id) {\n        var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Player \" + id;\n        var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"white\";\n        var L_keys = arguments[3];\n        var R_keys = arguments[4];\n        var holeConfig = arguments[5];\n\n        _classCallCheck(this, Player);\n\n        if (!(0, _utilities.isPositiveInt)(id)) {\n            throw new TypeError(\"Cannot create a player with ID \" + id + \". Only positive integers are accepted.\");\n        }\n        this.id = id;\n        this.name = name;\n        this.color = color;\n        this.alive = false;\n        this.holy = false;\n        this.x = null;\n        this.y = null;\n        this.direction = 0;\n        this.velocity = 0;\n        this.maxSpeed = undefined;\n        this.lastPosition = null;\n        this.queuedDraws = new _Queue.Queue();\n        this.holeTimer = null;\n        this.holeConfig = null;\n\n        if (!this.constructor.isHoleConfig(holeConfig)) {\n            (0, _utilities.logWarning)(\"Creating player \" + this.name + \" with no hole configuration because \" + holeConfig + \" is not a valid hole configuration.\");\n        } else {\n            this.holeConfig = holeConfig;\n        }\n\n        if ((0, _utilities.isPositiveInt)(L_keys)) {\n            this.L_keys = [L_keys];\n        } else if ((0, _utilities.isKeyList)(L_keys)) {\n            this.L_keys = L_keys;\n        } else {\n            (0, _utilities.logWarning)(\"Creating player \\\"\" + this.name + \"\\\" without any LEFT key(s).\");\n            this.L_keys = [];\n        }\n\n        if ((0, _utilities.isPositiveInt)(R_keys)) {\n            this.R_keys = [R_keys];\n        } else if ((0, _utilities.isKeyList)(R_keys)) {\n            this.R_keys = R_keys;\n        } else {\n            (0, _utilities.logWarning)(\"Creating player \\\"\" + this.name + \"\\\" without any RIGHT key(s).\");\n            this.R_keys = [];\n        }\n    }\n\n    _createClass(Player, [{\n        key: \"isAlive\",\n\n\n        // CHECKERS\n\n        value: function isAlive() {\n            return this.alive;\n        }\n    }, {\n        key: \"justWasAt\",\n        value: function justWasAt(left, top) {\n            return this.lastPosition.left === left && this.lastPosition.top === top;\n        }\n    }, {\n        key: \"isHoly\",\n        value: function isHoly() {\n            return this.holy;\n        }\n    }, {\n        key: \"isPressingLeft\",\n        value: function isPressingLeft() {\n            return (0, _utilities.anyInputBeingPressed)(this.L_keys);\n        }\n    }, {\n        key: \"isPressingRight\",\n        value: function isPressingRight() {\n            return (0, _utilities.anyInputBeingPressed)(this.R_keys);\n        }\n    }, {\n        key: \"hasID\",\n        value: function hasID(id) {\n            return this.id === id;\n        }\n    }, {\n        key: \"hasMouseButton\",\n        value: function hasMouseButton(button) {\n            return (0, _utilities.isMouseButton)(button) && (this.L_keys.includes(button) || this.R_keys.includes(button));\n        }\n    }, {\n        key: \"usesAnyMouseButton\",\n        value: function usesAnyMouseButton() {\n            var _this = this;\n\n            return _utilities.MOUSE_BUTTONS.some(function (button) {\n                return _this.hasMouseButton(button);\n            });\n        }\n    }, {\n        key: \"hasKey\",\n        value: function hasKey(key) {\n            return this.L_keys.includes(key) || this.R_keys.includes(key);\n        }\n\n        // GETTERS\n\n    }, {\n        key: \"getID\",\n        value: function getID() {\n            return this.id;\n        }\n    }, {\n        key: \"getName\",\n        value: function getName() {\n            return this.name;\n        }\n    }, {\n        key: \"getColor\",\n        value: function getColor() {\n            return this.color;\n        }\n    }, {\n        key: \"toString\",\n        value: function toString() {\n            return this.name;\n        }\n    }, {\n        key: \"getLastPosition\",\n        value: function getLastPosition() {\n            return this.lastPosition;\n        }\n    }, {\n        key: \"getVelocity\",\n        value: function getVelocity() {\n            return this.velocity;\n        }\n    }, {\n        key: \"getDirection\",\n        value: function getDirection() {\n            return this.direction;\n        }\n    }, {\n        key: \"randomPaddedHoleSize\",\n        value: function randomPaddedHoleSize() {\n            return (0, _utilities.randomFloat)(this.holeConfig.minPaddedHoleSize, this.holeConfig.maxPaddedHoleSize);\n        }\n    }, {\n        key: \"randomPaddedHoleInterval\",\n        value: function randomPaddedHoleInterval() {\n            return (0, _utilities.randomFloat)(this.holeConfig.minPaddedHoleInterval, this.holeConfig.maxPaddedHoleInterval);\n        }\n    }, {\n        key: \"firstHoleDelay\",\n        value: function firstHoleDelay() {\n            return (0, _utilities.distanceToDuration)(this.randomPaddedHoleInterval() - this.holeConfig.minPaddedHoleInterval, this.velocity);\n        }\n\n        // SETTERS\n\n    }, {\n        key: \"setMaxSpeed\",\n        value: function setMaxSpeed(speed) {\n            this.maxSpeed = speed;\n        }\n    }, {\n        key: \"setDirection\",\n        value: function setDirection(direction) {\n            this.direction = direction;\n        }\n\n        // DOERS\n\n    }, {\n        key: \"start\",\n        value: function start() {\n            (0, _utilities.log)(this + \" starting.\");\n            this.alive = true;\n            this.velocity = this.maxSpeed;\n            if (this.constructor.isHoleConfig(this.holeConfig)) {\n                this.holeTimer = setTimeout(this.startCreatingHoles.bind(this), this.firstHoleDelay());\n            }\n        }\n    }, {\n        key: \"stop\",\n        value: function stop() {\n            this.alive = false;\n            this.velocity = 0;\n            clearTimeout(this.holeTimer);\n        }\n    }, {\n        key: \"reset\",\n        value: function reset() {\n            this.holy = false;\n            this.lastPosition = null;\n            this.queuedDraws = new _Queue.Queue();\n        }\n\n        /**\n         * Called when the player does something that causes it do die.\n         * @param {String} cause The cause of death.\n         */\n\n    }, {\n        key: \"die\",\n        value: function die(cause) {\n            this.alive = false;\n            clearTimeout(this.holeTimer);\n            (0, _utilities.log)(this + \" \" + (cause || \"died\") + \" at (\" + (0, _utilities.round)(this.x, 2) + \", \" + (0, _utilities.round)(this.y, 2) + \").\");\n        }\n    }, {\n        key: \"beAt\",\n        value: function beAt(left, top) {\n            this.lastPosition = {\n                \"left\": left,\n                \"top\": top\n            };\n        }\n    }, {\n        key: \"beginHole\",\n        value: function beginHole() {\n            this.holy = true;\n            var paddedHoleSize = this.randomPaddedHoleSize();\n            var paddedHoleDuration = (0, _utilities.distanceToDuration)(paddedHoleSize, this.velocity);\n            this.holeTimer = setTimeout(this.endHole.bind(this), paddedHoleDuration);\n        }\n    }, {\n        key: \"endHole\",\n        value: function endHole() {\n            this.holy = false;\n            var paddedHoleInterval = this.randomPaddedHoleInterval();\n            var paddedHoleIntervalDuration = (0, _utilities.distanceToDuration)(paddedHoleInterval, this.velocity);\n            this.holeTimer = setTimeout(this.beginHole.bind(this), paddedHoleIntervalDuration);\n        }\n    }, {\n        key: \"startCreatingHoles\",\n        value: function startCreatingHoles() {\n            this.beginHole();\n        }\n    }, {\n        key: \"enqueueDraw\",\n        value: function enqueueDraw() {\n            this.queuedDraws.enqueue({ \"x\": this.x, \"y\": this.y });\n        }\n    }], [{\n        key: \"isPlayer\",\n        value: function isPlayer(player) {\n            return player instanceof Player;\n        }\n    }, {\n        key: \"isHoleConfig\",\n        value: function isHoleConfig(holeConfig) {\n            return (0, _utilities.isObject)(holeConfig) && (0, _utilities.arePositiveNumbers)([holeConfig.minPaddedHoleSize, holeConfig.maxPaddedHoleSize, holeConfig.minPaddedHoleInterval, holeConfig.maxPaddedHoleInterval]);\n        }\n    }]);\n\n    return Player;\n}();\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ConfirmationDialog = undefined;\n\nvar _Dialog2 = __webpack_require__(7);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ConfirmationDialog = exports.ConfirmationDialog = function (_Dialog) {\n    _inherits(ConfirmationDialog, _Dialog);\n\n    function ConfirmationDialog(question, callback) {\n        _classCallCheck(this, ConfirmationDialog);\n\n        if (!(callback instanceof Function)) {\n            throw new TypeError(\"callback must be a function (found \" + callback + \").\");\n        }\n\n        var _this = _possibleConstructorReturn(this, (ConfirmationDialog.__proto__ || Object.getPrototypeOf(ConfirmationDialog)).call(this, question));\n\n        _this.callback = callback;\n        return _this;\n    }\n\n    return ConfirmationDialog;\n}(_Dialog2.Dialog);\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Dialog = undefined;\n\nvar _utilities = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Dialog = exports.Dialog = function Dialog(text) {\n    _classCallCheck(this, Dialog);\n\n    if (!(0, _utilities.isString)(text)) {\n        throw new TypeError(\"text must be a string (found \" + text + \").\");\n    }\n    this.text = text;\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Message = exports.Message = function () {\n    function Message(text, styleClass) {\n        _classCallCheck(this, Message);\n\n        this.text = text;\n        this.class = styleClass;\n    }\n\n    _createClass(Message, [{\n        key: \"toHTMLElement\",\n        value: function toHTMLElement() {\n            var p = document.createElement(\"p\");\n            p.innerHTML = this.text;\n            p.classList.add(this.class);\n            p.classList.add(\"message\");\n            return p;\n        }\n    }]);\n\n    return Message;\n}();\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.BooleanPreference = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Preference2 = __webpack_require__(3);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BooleanPreference = exports.BooleanPreference = function (_Preference) {\n    _inherits(BooleanPreference, _Preference);\n\n    function BooleanPreference(data) {\n        _classCallCheck(this, BooleanPreference);\n\n        var _this = _possibleConstructorReturn(this, (BooleanPreference.__proto__ || Object.getPrototypeOf(BooleanPreference)).call(this, data));\n\n        if (!(data.default === true || data.default === false)) {\n            _get(BooleanPreference.prototype.__proto__ || Object.getPrototypeOf(BooleanPreference.prototype), \"invalidValue\", _this).call(_this, data.default);\n        }\n        return _this;\n    }\n\n    _createClass(BooleanPreference, [{\n        key: \"isValidValue\",\n        value: function isValidValue(value) {\n            return value === true || value === false;\n        }\n    }], [{\n        key: \"stringify\",\n        value: function stringify(value) {\n            return value.toString();\n        }\n    }, {\n        key: \"parse\",\n        value: function parse(stringifiedValue) {\n            return stringifiedValue === \"true\";\n        }\n    }]);\n\n    return BooleanPreference;\n}(_Preference2.Preference);\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MultichoicePreference = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Preference2 = __webpack_require__(3);\n\nvar _MultichoicePreferenceOption = __webpack_require__(25);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MultichoicePreference = exports.MultichoicePreference = function (_Preference) {\n    _inherits(MultichoicePreference, _Preference);\n\n    function MultichoicePreference(data) {\n        _classCallCheck(this, MultichoicePreference);\n\n        if (!isArray(data.options)) {\n            throw new TypeError(\"options must be an array (found \" + data.options + \" for preference '\" + data.key + \"').\");\n        }\n        if (!hasMultipleEntries(data.options)) {\n            throw new TypeError(\"options must have a length greater than 1 (was \" + data.options.length + \" for preference '\" + data.key + \"').\");\n        }\n\n        var _this = _possibleConstructorReturn(this, (MultichoicePreference.__proto__ || Object.getPrototypeOf(MultichoicePreference)).call(this, data));\n\n        try {\n            _this.options = data.options.map(function (option) {\n                return new _MultichoicePreferenceOption.MultichoicePreferenceOption(option.key, option.label);\n            });\n        } catch (e) {\n            throw new TypeError(\"The list of options for preference '\" + data.key + \"' was malformed: \" + e.message);\n        }\n\n        if (!_this.isValidValue(data.default)) {\n            _get(MultichoicePreference.prototype.__proto__ || Object.getPrototypeOf(MultichoicePreference.prototype), \"invalidValue\", _this).call(_this, data.default);\n        }\n\n        function isArray(options) {\n            return options instanceof Array;\n        }\n\n        function hasMultipleEntries(options) {\n            return options.length > 1;\n        }\n        return _this;\n    }\n\n    _createClass(MultichoicePreference, [{\n        key: \"isValidValue\",\n        value: function isValidValue(value) {\n            return this.options.some(function (option) {\n                return option.key === value;\n            });\n        }\n    }], [{\n        key: \"stringify\",\n        value: function stringify(value) {\n            return value;\n        }\n    }, {\n        key: \"parse\",\n        value: function parse(stringifiedValue) {\n            return stringifiedValue;\n        }\n    }]);\n\n    return MultichoicePreference;\n}(_Preference2.Preference);\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.RangePreference = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Preference2 = __webpack_require__(3);\n\nvar _PreferencesUtilities = __webpack_require__(4);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RangePreference = exports.RangePreference = function (_Preference) {\n    _inherits(RangePreference, _Preference);\n\n    function RangePreference(data) {\n        _classCallCheck(this, RangePreference);\n\n        if (!(0, _PreferencesUtilities.isNumber)(data.min) || !(0, _PreferencesUtilities.isNumber)(data.max)) {\n            throw new TypeError(\"min and max must be numbers (found \" + data.min + \" and \" + data.max + \" for preference '\" + data.key + \"').\");\n        } else if (data.min > data.max) {\n            throw new TypeError(\"min cannot be greater than max (found \" + data.min + \" and \" + data.max + \" for preference '\" + data.key + \"', respectively).\");\n        }\n\n        var _this = _possibleConstructorReturn(this, (RangePreference.__proto__ || Object.getPrototypeOf(RangePreference)).call(this, data));\n\n        _this.min = data.min;\n        _this.max = data.max;\n        if (!_this.isValidValue(data.default)) {\n            _get(RangePreference.prototype.__proto__ || Object.getPrototypeOf(RangePreference.prototype), \"invalidValue\", _this).call(_this, data.default);\n        }\n        return _this;\n    }\n\n    _createClass(RangePreference, [{\n        key: \"isValidValue\",\n        value: function isValidValue(value) {\n            return (0, _PreferencesUtilities.isNumber)(value) && value >= this.min && value <= this.max;\n        }\n    }], [{\n        key: \"stringify\",\n        value: function stringify(value) {\n            return value.toString();\n        }\n    }, {\n        key: \"parse\",\n        value: function parse(stringifiedValue) {\n            return parseFloat(stringifiedValue);\n        }\n    }]);\n\n    return RangePreference;\n}(_Preference2.Preference);\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.GUIController = GUIController;\n\nvar _Preference = __webpack_require__(3);\n\nvar _BooleanPreference = __webpack_require__(9);\n\nvar _RangePreference = __webpack_require__(11);\n\nvar _IntegerRangePreference = __webpack_require__(24);\n\nvar _MultichoicePreference = __webpack_require__(10);\n\nvar _Dialog = __webpack_require__(7);\n\nvar _ConfirmationDialog = __webpack_require__(6);\n\nvar _utilities = __webpack_require__(0);\n\nvar _ZatackaEn_US = __webpack_require__(1);\n\nvar _ZatackaEn_US2 = _interopRequireDefault(_ZatackaEn_US);\n\nvar _strings = __webpack_require__(2);\n\nvar _strings2 = _interopRequireDefault(_strings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction GUIController(cfg) {\n\n    var config = cfg;\n    var lobby = (0, _utilities.byID)(\"lobby\");\n    var controls = (0, _utilities.byID)(\"controls\");\n    var canvas_main = (0, _utilities.byID)(\"canvas_main\");\n    var canvas_overlay = (0, _utilities.byID)(\"canvas_overlay\");\n    var left = (0, _utilities.byID)(\"left\");\n    var scoreboard = (0, _utilities.byID)(\"scoreboard\");\n    var results = (0, _utilities.byID)(\"results\");\n    var KONEC_HRY = (0, _utilities.byID)(\"KONEC_HRY\");\n    var messagesContainer = (0, _utilities.byID)(\"messages\");\n    // const settingsContainer = byID(\"settings\");\n    var dialogsOverlay = (0, _utilities.byID)(\"dialogs\");\n    var settingsForm = (0, _utilities.byID)(\"settings-form\");\n\n    var ORIGINAL_LEFT_WIDTH = left.offsetWidth;\n    var MULTICHOICE_LABEL_MAX_LENGTH_FOR_HALFWIDTH_FIELDSET = 20; // More characters than this will result in a full-width div/fieldset.\n    var FLOAT_RANGE_PREFERENCE_STEP = 0.01;\n\n    var BUTTON_TAG_NAME = \"button\";\n    var BUTTON_NODE_CLASS = HTMLButtonElement;\n\n    var LABEL_ALERT_OK = _ZatackaEn_US2.default.label_button_alert_ok;\n    var LABEL_CONFIRM_YES = _ZatackaEn_US2.default.label_button_confirm_yes;\n    var LABEL_CONFIRM_NO = _ZatackaEn_US2.default.label_button_confirm_no;\n\n    var showingSettings = false;\n    var currentMessages = [];\n    var queuedDialogs = [];\n    var currentDialogWithBox = null;\n\n    var DialogWithBox = function DialogWithBox(dialog, box) {\n        _classCallCheck(this, DialogWithBox);\n\n        this.dialog = dialog;\n        this.box = box;\n    };\n\n    // PRIVATE FUNCTIONS\n\n    function hideLobby() {\n        (0, _utilities.log)(\"Hiding lobby.\");\n        lobby.classList.add(_strings2.default.class_hidden);\n    }\n\n    function showLobby() {\n        (0, _utilities.log)(\"Showing lobby.\");\n        lobby.classList.remove(_strings2.default.class_hidden);\n    }\n\n    function showDialogsOverlay() {\n        dialogsOverlay.classList.remove(_strings2.default.class_hidden);\n    }\n\n    function hideDialogsOverlay() {\n        dialogsOverlay.classList.add(_strings2.default.class_hidden);\n    }\n\n    function isLobbyEntry(element) {\n        return (0, _utilities.isHTMLElement)(element) && element.children.length >= 2;\n    }\n\n    function isButton(element) {\n        return element instanceof BUTTON_NODE_CLASS;\n    }\n\n    function showDialogRightAway(dialog) {\n        var dialogBox = dialogHTMLElement(dialog);\n        currentDialogWithBox = new DialogWithBox(dialog, dialogBox);\n        setTemporaryCursorVisibility(true);\n        showDialogsOverlay();\n        dialogsOverlay.appendChild(dialogBox);\n        // A dialog should have its last button focused:\n        dialogBox.querySelector(\"button:last-of-type\").focus();\n    }\n\n    function currentDialogClosed() {\n        currentDialogWithBox.box.remove();\n        currentDialogWithBox = null;\n        if (anyQueuedDialogs()) {\n            // There is at least one dialog waiting. Show it:\n            showDialogRightAway(queuedDialogs.shift());\n        } else {\n            // No more dialogs. Restore:\n            setTemporaryCursorVisibility(false);\n            hideDialogsOverlay();\n        }\n    }\n\n    function anyQueuedDialogs() {\n        return queuedDialogs.length > 0;\n    }\n\n    function escapeShouldCloseCurrentDialog() {\n        return currentDialogWithBox.dialog instanceof _ConfirmationDialog.ConfirmationDialog;\n    }\n\n    function dialogHTMLElementBoilerplate(text) {\n        var dialogBox = document.createElement(\"div\");\n        dialogBox.classList.add(_strings2.default.class_dialog);\n        var label = document.createElement(\"p\");\n        label.textContent = text;\n        dialogBox.appendChild(label);\n        return dialogBox;\n    }\n\n    function alertDialogHTMLElement(dialog) {\n        var alertDialogBox = dialogHTMLElementBoilerplate(dialog.text);\n        alertDialogBox.classList.add(_strings2.default.class_dialog_alert);\n        var buttonOK = document.createElement(\"button\");\n        buttonOK.textContent = LABEL_ALERT_OK;\n        alertDialogBox.appendChild(buttonOK);\n\n        function alertDialogEventHandler() {\n            currentDialogClosed();\n        }\n        // Event listener:\n        buttonOK.addEventListener(\"click\", alertDialogEventHandler);\n\n        return alertDialogBox;\n    }\n\n    function confirmationDialogHTMLElement(confirmationDialog) {\n        var confirmationDialogBox = dialogHTMLElementBoilerplate(confirmationDialog.text);\n        confirmationDialogBox.classList.add(_strings2.default.class_dialog_confirmation);\n        var buttonYes = document.createElement(\"button\");\n        buttonYes.textContent = LABEL_CONFIRM_YES;\n        var buttonNo = document.createElement(\"button\");\n        buttonNo.textContent = LABEL_CONFIRM_NO;\n        confirmationDialogBox.appendChild(buttonYes);\n        confirmationDialogBox.appendChild(buttonNo);\n\n        function confirmationDialogEventHandler(response) {\n            return function () {\n                currentDialogClosed();\n                if (response === true) {\n                    confirmationDialog.callback();\n                }\n            };\n        }\n        // Event listeners:\n        buttonYes.addEventListener(\"click\", confirmationDialogEventHandler(true));\n        buttonNo.addEventListener(\"click\", confirmationDialogEventHandler(false));\n\n        return confirmationDialogBox;\n    }\n\n    function dialogHTMLElement(dialog) {\n        if (dialog instanceof _ConfirmationDialog.ConfirmationDialog) {\n            return confirmationDialogHTMLElement(dialog);\n        } else if (dialog instanceof _Dialog.Dialog) {\n            return alertDialogHTMLElement(dialog);\n        }\n        throw new TypeError(dialog + \" is not a valid dialog.\");\n    }\n\n    function resetScoreboardEntry(entry) {\n        entry.classList.remove(\"active\");\n    }\n\n    function resetScoreboard() {\n        Array.from(scoreboard.children).forEach(resetScoreboardEntry);\n    }\n\n    function resetResults() {\n        Array.from(results.children).forEach(resetScoreboardEntry);\n    }\n\n    function setCursorBehavior(behavior) {\n        switch (behavior) {\n            case _strings2.default.cursor_visible:\n                document.body.classList.remove(_strings2.default.class_nocursor);\n                break;\n            case _strings2.default.cursor_hidden:\n                document.body.classList.add(_strings2.default.class_nocursor);\n                break;\n            default:\n                (0, _utilities.logError)(\"Cannot set cursor behavior to '\" + behavior + \"'.\");\n        }\n    }\n\n    function setTemporaryCursorVisibility(tempCursorActive) {\n        if (tempCursorActive) {\n            document.body.classList.add(_strings2.default.class_tempcursor);\n        } else {\n            document.body.classList.remove(_strings2.default.class_tempcursor);\n        }\n    }\n\n    function settingsEntryShouldBeHalfWidth(preference) {\n        if (preference instanceof _MultichoicePreference.MultichoicePreference) {\n            var labels = preference.options.map(function (option) {\n                return option.label;\n            });\n            var longestValueLabel = labels.reduce(function (acc, current) {\n                return current.length > acc.length ? current : acc;\n            });\n            return longestValueLabel.length <= MULTICHOICE_LABEL_MAX_LENGTH_FOR_HALFWIDTH_FIELDSET;\n        } else {\n            return false;\n        }\n    }\n\n    function settingsEntryHTMLElement(preference, preferenceValue) {\n        if (!(preference instanceof _Preference.Preference)) {\n            throw new TypeError(preference + \" is not a preference.\");\n        }\n\n        // Common\n        var div = document.createElement(\"div\");\n        var label = document.createElement(\"label\");\n        label.textContent = preference.label;\n        label.setAttribute(\"for\", \"\" + _strings2.default.html_name_preference_prefix + preference.key);\n        var description = document.createElement(\"aside\");\n        description.textContent = preference.description;\n        description.classList.add(_strings2.default.class_description);\n\n        // Boolean\n        if (preference instanceof _BooleanPreference.BooleanPreference) {\n            var input = document.createElement(\"input\");\n            input.type = \"checkbox\";\n            input.dataset.key = preference.key;\n            input.id = _strings2.default.html_name_preference_prefix + preference.key;\n            input.checked = preferenceValue === true;\n            div.appendChild(input);\n            div.appendChild(label);\n        }\n\n        // Multichoice\n        else if (preference instanceof _MultichoicePreference.MultichoicePreference) {\n                var fieldset = document.createElement(\"fieldset\");\n                var legend = document.createElement(\"legend\");\n                legend.textContent = preference.label;\n                fieldset.appendChild(legend);\n                preference.options.forEach(function (option) {\n                    var id = _strings2.default.html_name_preference_prefix + preference.key + \"-\" + option.key;\n                    var radioButton = document.createElement(\"input\");\n                    radioButton.type = \"radio\";\n                    radioButton.id = id;\n                    radioButton.name = _strings2.default.html_name_preference_prefix + preference.key;\n                    radioButton.value = option.key;\n                    radioButton.dataset.key = preference.key;\n                    radioButton.checked = preferenceValue === option.key;\n                    var radioButtonLabel = document.createElement(\"label\");\n                    radioButtonLabel.textContent = option.label;\n                    radioButtonLabel.setAttribute(\"for\", id);\n                    fieldset.appendChild(radioButton);\n                    fieldset.appendChild(radioButtonLabel);\n                });\n                div.appendChild(fieldset);\n                if (settingsEntryShouldBeHalfWidth(preference)) {\n                    div.classList.add(_strings2.default.class_half_width);\n                }\n            }\n\n            // Range\n            else if (preference instanceof _RangePreference.RangePreference) {\n                    var isIntegerRange = preference instanceof _IntegerRangePreference.IntegerRangePreference;\n                    div.appendChild(label);\n                    var _input = document.createElement(\"input\");\n                    _input.type = \"number\";\n                    _input.dataset.key = preference.key;\n                    _input.dataset.numberType = isIntegerRange ? _strings2.default.pref_number_type_integer : _strings2.default.pref_number_type_float;\n                    _input.name = _strings2.default.html_name_preference_prefix + preference.key;\n                    _input.setAttribute(\"step\", isIntegerRange ? 1 : FLOAT_RANGE_PREFERENCE_STEP);\n                    _input.setAttribute(\"min\", preference.min);\n                    _input.setAttribute(\"max\", preference.max);\n                    _input.value = preferenceValue;\n                    div.appendChild(_input);\n                }\n\n        div.appendChild(description);\n        return div;\n    }\n\n    // PUBLIC API\n\n    function keyPressed(event, callback) {\n        if (isShowingDialog()) {\n            var currentlyFocusedButton = currentDialogWithBox.box.querySelector(BUTTON_TAG_NAME + \":focus\");\n            var shiftIsDown = _utilities.Keyboard.isDown(_utilities.KEY.SHIFT);\n            var previousButton = void 0,\n                nextButton = void 0;\n            if (isButton(currentlyFocusedButton)) {\n                previousButton = isButton(currentlyFocusedButton.previousSibling) ? currentlyFocusedButton.previousSibling : null;\n                nextButton = isButton(currentlyFocusedButton.nextSibling) ? currentlyFocusedButton.nextSibling : null;\n            }\n            switch (event.keyCode) {\n                case _utilities.KEY.SPACE:\n                case _utilities.KEY.ENTER:\n                    // Necessary because buttons do not automatically react to Space until keyup, making them feel sluggish compared to when Enter is used.\n                    if (isButton(currentlyFocusedButton)) {\n                        currentlyFocusedButton.click();\n                    }\n                    break;\n                case _utilities.KEY.ESCAPE:\n                    if (escapeShouldCloseCurrentDialog()) {\n                        currentDialogClosed();\n                    }\n                    break;\n                case _utilities.KEY.TAB:\n                    event.preventDefault();\n                    if (shiftIsDown) {\n                        if (isButton(previousButton)) {\n                            previousButton.focus();\n                        }\n                    } else if (isButton(nextButton)) {\n                        nextButton.focus();\n                    }\n                    break;\n                case _utilities.KEY.LEFT_ARROW:\n                    if (isButton(previousButton)) {\n                        previousButton.focus();\n                    }\n                    break;\n                case _utilities.KEY.RIGHT_ARROW:\n                    if (isButton(nextButton)) {\n                        nextButton.focus();\n                    }\n                    break;\n                default:\n                    callback(event);\n            }\n        } else {\n            callback(event);\n        }\n    }\n\n    function showDialog(dialog) {\n        if (isShowingDialog()) {\n            queuedDialogs.push(dialog);\n        } else {\n            showDialogRightAway(dialog);\n        }\n    }\n\n    function isShowingDialog() {\n        return currentDialogWithBox !== null;\n    }\n\n    function setEdgePadding(padding) {\n        left.style.width = ORIGINAL_LEFT_WIDTH + padding + \"px\";\n    }\n\n    function setBlurryScaling(allowed) {\n        document.body.classList[allowed === true ? \"add\" : \"remove\"](_strings2.default.class_blurry);\n    }\n\n    function playerReady(id) {\n        var index = id - 1;\n        var entry = controls.children[index];\n        if (!isLobbyEntry(entry)) {\n            (0, _utilities.logWarning)(\"Cannot mark player \" + id + \" as ready because controls.children[\" + index + \"] (\" + controls.children[index] + \") is not a valid lobby entry.\");\n        } else {\n            entry.children[1].classList.add(_strings2.default.class_active);\n        }\n    }\n\n    function playerUnready(id) {\n        var index = id - 1;\n        var entry = controls.children[index];\n        if (!isLobbyEntry(entry)) {\n            (0, _utilities.logWarning)(\"Cannot mark player \" + id + \" as unready because controls.children[\" + index + \"] (\" + controls.children[index] + \") is not a valid lobby entry.\");\n        } else {\n            entry.children[1].classList.remove(_strings2.default.class_active);\n        }\n    }\n\n    function allPlayersUnready() {\n        for (var id = 1; id <= controls.children.length; id++) {\n            playerUnready(id);\n        }\n    }\n\n    function gameStarted() {\n        hideLobby();\n    }\n\n    function gameQuit() {\n        hideKonecHry();\n        showLobby();\n        clearMessages();\n        resetScoreboard();\n        resetResults();\n        allPlayersUnready();\n        setCursorBehavior(_strings2.default.cursor_visible);\n    }\n\n    function konecHry() {\n        showKonecHry();\n        resetScoreboard();\n    }\n\n    function showKonecHry() {\n        KONEC_HRY.classList.remove(_strings2.default.class_hidden);\n    }\n\n    function hideKonecHry() {\n        KONEC_HRY.classList.add(_strings2.default.class_hidden);\n    }\n\n    function showMessage(message) {\n        if (!currentMessages.includes(message)) {\n            currentMessages.push(message);\n        }\n        updateMessages(currentMessages);\n    }\n\n    function showSettings() {\n        showingSettings = true;\n        settings.classList.remove(_strings2.default.class_hidden);\n    }\n\n    function hideSettings() {\n        showingSettings = false;\n        settings.classList.add(_strings2.default.class_hidden);\n    }\n\n    function isShowingSettings() {\n        return showingSettings;\n    }\n\n    function updateSettingsForm(preferencesWithData) {\n        (0, _utilities.flush)(settingsForm);\n        var settingsEntries = preferencesWithData.map(function (preferenceWithData) {\n            return settingsEntryHTMLElement(preferenceWithData.preference, preferenceWithData.value);\n        });\n        // Add special class to half-width divs on the right hand side:\n        var consecutiveHalfWidthDivs = 0;\n        for (var i = 0; i < settingsEntries.length; i++) {\n            var currentEntry = settingsEntries[i];\n            if (currentEntry.classList.contains(_strings2.default.class_half_width)) {\n                consecutiveHalfWidthDivs++;\n                if (consecutiveHalfWidthDivs % 2 === 0) {\n                    // Even number of consecutive half-width divs, so this one will be on the right hand side.\n                    currentEntry.classList.add(_strings2.default.class_right_hand_side);\n                }\n            } else {\n                consecutiveHalfWidthDivs = 0;\n            }\n        }\n        settingsEntries.forEach(function (settingsEntry) {\n            settingsForm.appendChild(settingsEntry);\n        });\n    }\n\n    function parseSettingsForm() {\n        var newSettings = [];\n        // <input> elements:\n        var inputs = settingsForm.querySelectorAll(\"input\");\n        Array.from(inputs).forEach(function (input) {\n            if (input.type === \"checkbox\") {\n                // checkbox\n                newSettings.push({ key: input.dataset.key, value: input.checked });\n            } else if (input.type === \"radio\") {\n                // radio\n                if (input.checked === true) {\n                    newSettings.push({ key: input.dataset.key, value: input.value });\n                }\n            } else if (input.type === \"number\") {\n                // number\n                newSettings.push({ key: input.dataset.key, value: (input.dataset.numberType === _strings2.default.pref_number_type_integer ? parseInt : parseFloat)(input.value) });\n            } else {\n                // text\n                newSettings.push({ key: input.dataset.key, value: input.value.toString() });\n            }\n        });\n        // <select> elements:\n        var selects = settingsForm.querySelectorAll(\"select\");\n        Array.from(selects).forEach(function (select) {\n            newSettings.push({ key: select.dataset.key, value: select.options[select.selectedIndex].value });\n        });\n        return newSettings;\n    }\n\n    function hideMessage(message) {\n        currentMessages = currentMessages.filter(function (msg) {\n            return msg !== message;\n        });\n        updateMessages(currentMessages);\n    }\n\n    function updateMessages(messages) {\n        if (!(0, _utilities.isHTMLElement)(messagesContainer)) {\n            (0, _utilities.logWarning)(\"Cannot update messages because \" + messagesContainer + \" is not an HTML element.\");\n        } else {\n            (0, _utilities.flush)(messagesContainer);\n            messages.forEach(function (message) {\n                messagesContainer.insertBefore(message.toHTMLElement(), null);\n            });\n        }\n    }\n\n    function clearMessages() {\n        currentMessages = [];\n        updateMessages(currentMessages);\n    }\n\n    function setMessageMode(mode) {\n        (0, _utilities.log)(\"Setting message mode to \" + mode + \".\");\n        switch (mode) {\n            case _strings2.default.pref_value_hints_warnings_only:\n                messagesContainer.classList.remove(_strings2.default.class_hints_none);\n                messagesContainer.classList.add(_strings2.default.class_hints_warnings_only);\n                break;\n            case _strings2.default.pref_value_hints_none:\n                messagesContainer.classList.remove(_strings2.default.class_hints_warnings_only);\n                messagesContainer.classList.add(_strings2.default.class_hints_none);\n                break;\n            default:\n                messagesContainer.classList.remove(_strings2.default.class_hints_warnings_only);\n                messagesContainer.classList.remove(_strings2.default.class_hints_none);\n        }\n    }\n\n    function updateBoard(board, id, newScore) {\n        if (!(0, _utilities.isHTMLElement)(board)) {\n            (0, _utilities.logWarning)(\"Cannot update any entry in \" + board + \" because it is not an HTML element.\");\n        } else {\n            var entry = board.children[id - 1];\n            if (!(0, _utilities.isHTMLElement)(entry)) {\n                (0, _utilities.logWarning)(\"Cannot update score of player \" + id + \" because \" + entry + \" is not an HTML element.\");\n            } else {\n                // The entry is an HTML element; let's update it!\n                var digitClassFactory = function digitClassFactory(digit) {\n                    return \"d\" + digit;\n                };\n                var createDigit = function createDigit() {\n                    return document.createElement(\"div\");\n                };\n                // Turn 528 into [\"d5\", \"d2\", \"d8\"]:\n                var newScoreDigitClasses = newScore.toString().split(\"\").map(digitClassFactory);\n                // Remove everything from the entry element before we insert new digits:\n                (0, _utilities.flush)(entry);\n                entry.classList.add(\"active\");\n                newScoreDigitClasses.forEach(function (digitClass, index) {\n                    var digitElement = createDigit(); // A completely clean element ...\n                    digitElement.classList.add(newScoreDigitClasses[index]); // ... that now has a digit class.\n                    entry.appendChild(digitElement);\n                });\n            }\n        }\n    }\n\n    function updateScoreOfPlayer(id, newScore) {\n        updateBoard(scoreboard, id, newScore);\n        updateBoard(results, id, newScore);\n    }\n\n    return {\n        keyPressed: keyPressed,\n        playerReady: playerReady,\n        playerUnready: playerUnready,\n        gameStarted: gameStarted,\n        gameQuit: gameQuit,\n        konecHry: konecHry,\n        showDialog: showDialog,\n        isShowingDialog: isShowingDialog,\n        showSettings: showSettings,\n        hideSettings: hideSettings,\n        isShowingSettings: isShowingSettings,\n        updateSettingsForm: updateSettingsForm,\n        parseSettingsForm: parseSettingsForm,\n        updateScoreOfPlayer: updateScoreOfPlayer,\n        updateMessages: updateMessages,\n        showMessage: showMessage,\n        hideMessage: hideMessage,\n        clearMessages: clearMessages,\n        setMessageMode: setMessageMode,\n        setCursorBehavior: setCursorBehavior,\n        setBlurryScaling: setBlurryScaling,\n        setEdgePadding: setEdgePadding\n    };\n}\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Game = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _mainloopMin = __webpack_require__(23);\n\nvar _mainloopMin2 = _interopRequireDefault(_mainloopMin);\n\nvar _Player = __webpack_require__(5);\n\nvar _Round = __webpack_require__(20);\n\nvar _utilities = __webpack_require__(0);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Game = exports.Game = function () {\n    function Game(config, renderer, guiController) {\n        _classCallCheck(this, Game);\n\n        // Class variables:\n        this.constructor.PRACTICE = \"practice\";\n        this.constructor.COMPETITIVE = \"competitive\";\n        this.constructor.DEFAULT_MODE = this.constructor.PRACTICE;\n        this.constructor.DEFAULT_TARGET_SCORE = 10;\n        this.constructor.MAX_TARGET_SCORE = 1000;\n        this.constructor.MAX_PLAYERS = 255; // since we use a Uint8Array\n        this.constructor.MAX_QUOTA_THAT_SPAWN_CIRCLES_MAY_FILL = 0.5; // out of available spawn area\n        this.constructor.DESIRED_MINIMUM_SPAWN_DISTANCE_TURNING_RADIUS_FACTOR = 1;\n        this.constructor.KONEC_HRY = \"KONEC HRY!\";\n\n        if (renderer === undefined) {\n            throw new TypeError(\"Cannot create a Game with no renderer.\");\n        } else if (!this.constructor.isRenderer(renderer)) {\n            throw new TypeError(renderer + \" is not a valid renderer.\");\n        }\n\n        if (guiController === undefined) {\n            throw new TypeError(\"Cannot create a Game with no GUI controller.\");\n        } else if (!this.constructor.isGUIController(guiController)) {\n            throw new TypeError(guiController + \" is not a valid GUI controller.\");\n        }\n\n        // Instance variables:\n        this.config = config;\n        this.width = config.canvas.width;\n        this.height = config.canvas.height;\n        this.pixels = null; // The actual array is created in start(), because the canvas width and height may have changed by then.\n        this.players = [];\n        this.rounds = [];\n        this.renderer = renderer;\n        this.guiController = guiController;\n        this.mode = this.constructor.DEFAULT_MODE;\n        this.preventSpawnkill = config.preventSpawnkill;\n        this.totalNumberOfTicks = 0;\n        this.targetScore = null;\n        this.initMainLoop();\n        this.started = false;\n        this.ended = false;\n        this.proceedHintTimer = null;\n        this.quitHintTimer = null;\n    }\n\n    _createClass(Game, [{\n        key: \"edgeOfSquare\",\n        value: function edgeOfSquare(coordinate) {\n            return Math.round(coordinate - this.config.thickness / 2);\n        }\n    }, {\n        key: \"maxPlayers\",\n        value: function maxPlayers() {\n            return this.constructor.MAX_PLAYERS;\n        }\n    }, {\n        key: \"maxTicksBetweenDraws\",\n        value: function maxTicksBetweenDraws() {\n            return Math.max(Math.floor(this.config.tickrate / this.config.speed), 1);\n        }\n\n        // Computes the angle change for one tick when turning, in radians:\n\n    }, {\n        key: \"computeAngleChange\",\n        value: function computeAngleChange() {\n            return this.config.speed / (this.config.tickrate * this.config.turningRadius);\n        }\n    }, {\n        key: \"computeSpawnArea\",\n        value: function computeSpawnArea() {\n            return {\n                x_min: this.config.spawnMargin,\n                y_min: this.config.spawnMargin,\n                x_max: this.width - this.config.spawnMargin,\n                y_max: this.height - this.config.spawnMargin\n            };\n        }\n    }, {\n        key: \"computeFrontCornerPixel\",\n        value: function computeFrontCornerPixel(edge, dir) {\n            var t = this.config.thickness;\n            var cf = 100;\n            return (cf * edge + cf * (t - 1) / 2 + cf * dir * (t - 1) / 2) / cf;\n        }\n    }, {\n        key: \"computeFrontEdgePixel\",\n        value: function computeFrontEdgePixel(edge, dir_parallel, dir_perpendicular, i) {\n            var t = this.config.thickness;\n            return edge + Math.abs(dir_parallel) * (t - 1) / 2 + dir_parallel * (t - 1) / 2 + Math.abs(dir_perpendicular) * i;\n        }\n    }, {\n        key: \"computeHitbox\",\n        value: function computeHitbox(player, left, top) {\n            var hitboxPixels = [];\n            var lastPosition = player.getLastPosition();\n            var dir_horizontal = left - lastPosition.left; // positive => going right; negative => going left\n            var dir_vertical = top - lastPosition.top; // positive => going down;  negative => going up\n            if ((0, _utilities.sameAbs)(dir_horizontal, dir_vertical)) {\n                // \"45 degree\" draw\n                var frontPixel_left = this.computeFrontCornerPixel(left, dir_horizontal);\n                var frontPixel_top = this.computeFrontCornerPixel(top, dir_vertical);\n                hitboxPixels.push(this.pixelAddress(frontPixel_left, frontPixel_top));\n            } else {\n                // \"90 degree\" draw\n                for (var i = 0; i < this.config.thickness; i++) {\n                    var _frontPixel_left = this.computeFrontEdgePixel(left, dir_horizontal, dir_vertical, i);\n                    var _frontPixel_top = this.computeFrontEdgePixel(top, dir_vertical, dir_horizontal, i);\n                    hitboxPixels.push(this.pixelAddress(_frontPixel_left, _frontPixel_top));\n                }\n            }\n            return hitboxPixels;\n        }\n    }, {\n        key: \"desiredMinimumSpawnDistance\",\n        value: function desiredMinimumSpawnDistance() {\n            // to closest opponent\n            // This is calculated by multiplying the turning radius with a constant factor and then adding the Kurve thickness.\n            var turningRadiusPart = this.config.turningRadius * this.constructor.DESIRED_MINIMUM_SPAWN_DISTANCE_TURNING_RADIUS_FACTOR;\n            return (0, _utilities.round)(this.config.thickness + turningRadiusPart, 2);\n        }\n    }, {\n        key: \"safeMinimumSpawnDistance\",\n        value: function safeMinimumSpawnDistance() {\n            // to closest opponent, without risking infinite or too much sampling\n            var spawnAreaCoordinates = this.computeSpawnArea();\n            var availableSpawnArea = (spawnAreaCoordinates.x_max - spawnAreaCoordinates.x_min) * (spawnAreaCoordinates.y_max - spawnAreaCoordinates.y_min);\n            var maximumSafeDistance = Math.sqrt(this.constructor.MAX_QUOTA_THAT_SPAWN_CIRCLES_MAY_FILL * availableSpawnArea / (this.getNumberOfPlayers() * Math.PI));\n            return Math.min(this.desiredMinimumSpawnDistance(), (0, _utilities.round)(maximumSafeDistance, 2));\n        }\n    }, {\n        key: \"isSafeSpawnPosition\",\n        value: function isSafeSpawnPosition(pos) {\n            function distanceBetween(pos1, pos2) {\n                return Math.sqrt(Math.pow(pos2.x - pos1.x, 2) + Math.pow(pos2.y - pos1.y, 2));\n            }\n            for (var i = 0; i < this.players.length; i++) {\n                var playerPos = { x: this.players[i].x, y: this.players[i].y };\n                if (distanceBetween(playerPos, pos) < this.safeMinimumSpawnDistance()) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }, {\n        key: \"safeSpawnPosition\",\n        value: function safeSpawnPosition() {\n            var safePos = void 0;\n            do {\n                safePos = this.randomSpawnPosition();\n            } while (!this.isSafeSpawnPosition(safePos));\n            return safePos;\n        }\n    }, {\n        key: \"randomSpawnPosition\",\n        value: function randomSpawnPosition() {\n            var spawnArea = this.computeSpawnArea();\n            return {\n                x: (0, _utilities.randomFloat)(spawnArea.x_min, spawnArea.x_max),\n                y: (0, _utilities.randomFloat)(spawnArea.y_min, spawnArea.y_max)\n            };\n        }\n    }, {\n        key: \"randomSpawnAngle\",\n        value: function randomSpawnAngle() {\n            return (0, _utilities.randomFloat)(this.config.minSpawnAngle, this.config.maxSpawnAngle);\n        }\n    }, {\n        key: \"pixelAddress\",\n        value: function pixelAddress(x, y) {\n            return y * this.width + x;\n        }\n    }, {\n        key: \"pixelAddressToCoordinates\",\n        value: function pixelAddressToCoordinates(addr) {\n            var x = addr % this.width;\n            var y = (addr - x) / this.width;\n            return \"(\" + x + \", \" + y + \")\";\n        }\n\n        // GETTERS\n\n    }, {\n        key: \"getMode\",\n        value: function getMode() {\n            return this.mode;\n        }\n    }, {\n        key: \"getTargetScore\",\n        value: function getTargetScore() {\n            return this.targetScore;\n        }\n    }, {\n        key: \"getPlayers\",\n        value: function getPlayers() {\n            return this.players;\n        }\n\n        // Returns the player with the specified ID, or undefined if no such player exists:\n\n    }, {\n        key: \"getPlayerByID\",\n        value: function getPlayerByID(id) {\n            return this.players.find(function (player) {\n                return player.hasID(id);\n            });\n        }\n    }, {\n        key: \"getLivePlayers\",\n        value: function getLivePlayers() {\n            var isAlive = this.constructor.isAlive;\n            return this.players.filter(isAlive);\n        }\n    }, {\n        key: \"getNumberOfPlayers\",\n        value: function getNumberOfPlayers() {\n            return this.players.length;\n        }\n    }, {\n        key: \"getNumberOfLivePlayers\",\n        value: function getNumberOfLivePlayers() {\n            return this.getLivePlayers().length;\n        }\n    }, {\n        key: \"getScoreOfPlayer\",\n        value: function getScoreOfPlayer(id) {\n            var accumulateScore = function accumulateScore(sum, round) {\n                return sum + round.getSuccessOfPlayer(id);\n            };\n            return this.rounds.reduce(accumulateScore, 0);\n        }\n    }, {\n        key: \"getCurrentRound\",\n        value: function getCurrentRound() {\n            return this.rounds[this.rounds.length - 1];\n        }\n\n        // SETTERS\n\n    }, {\n        key: \"setMode\",\n        value: function setMode(mode) {\n            if (mode === this.constructor.COMPETITIVE || mode === this.constructor.PRACTICE) {\n                (0, _utilities.log)(\"Setting game mode to \" + mode + \".\");\n                this.mode = mode;\n            } else {\n                (0, _utilities.logError)(mode + \" is not a valid game mode. Keeping \" + this.getMode() + \".\");\n            }\n        }\n    }, {\n        key: \"setTargetScore\",\n        value: function setTargetScore(score) {\n            var ts = this.constructor.DEFAULT_TARGET_SCORE;\n            var mts = this.constructor.MAX_TARGET_SCORE;\n            // Neither floats nor negative numbers are allowed:\n            if ((0, _utilities.isInt)(score) && score > 0) {\n                // Check if the desired target score is allowed:\n                if (score > mts) {\n                    // It is too high. Fall back to max value:\n                    (0, _utilities.logWarning)(score + \" is larger than the maximum allowed target score of \" + mts + \". Falling back to \" + mts + \".\");\n                    ts = mts;\n                } else {\n                    // The desired target score is OK!\n                    (0, _utilities.log)(\"Setting target score to \" + score + \".\");\n                    ts = score;\n                }\n            } else {\n                (0, _utilities.logWarning)(score + \" is not a valid target score. Defaulting to \" + ts + \".\");\n            }\n            this.targetScore = ts;\n        }\n    }, {\n        key: \"setSize\",\n        value: function setSize(width, height) {\n            this.width = width;\n            this.height = height;\n            this.renderer.setSize(width, height);\n        }\n    }, {\n        key: \"setPreventSpawnkill\",\n        value: function setPreventSpawnkill(mode) {\n            this.preventSpawnkill = mode;\n        }\n\n        // CHECKERS\n\n    }, {\n        key: \"isStarted\",\n        value: function isStarted() {\n            return this.started;\n        }\n    }, {\n        key: \"isEnded\",\n        value: function isEnded() {\n            return this.ended;\n        }\n\n        /** Returns true if a round is over (including when KONEC HRY is being shown). */\n\n    }, {\n        key: \"isPostRound\",\n        value: function isPostRound() {\n            return this.getCurrentRound().getResults().length === this.getNumberOfPlayers();\n        }\n    }, {\n        key: \"isLive\",\n        value: function isLive() {\n            if (this.isCompetitive()) {\n                return this.getNumberOfLivePlayers() > 1;\n            } else {\n                return this.getNumberOfLivePlayers() > 0;\n            }\n        }\n\n        // Caution: Returns true if called during the spawn procedure, since it only checks whether the game is live or not.\n\n    }, {\n        key: \"isRoundOver\",\n        value: function isRoundOver() {\n            return !this.isLive();\n        }\n    }, {\n        key: \"isGameOver\",\n        value: function isGameOver() {\n            var _this = this;\n\n            var hasReachedTargetScore = function hasReachedTargetScore(player) {\n                return _this.getScoreOfPlayer(player.getID()) >= _this.getTargetScore();\n            };\n            return !this.isLive() && this.isCompetitive() && this.players.some(hasReachedTargetScore);\n        }\n    }, {\n        key: \"isCompetitive\",\n        value: function isCompetitive() {\n            return this.getMode() === this.constructor.COMPETITIVE;\n        }\n    }, {\n        key: \"isOccupiedPixelAddress\",\n        value: function isOccupiedPixelAddress(addr) {\n            return this.pixels[addr] > 0;\n        }\n    }, {\n        key: \"isCrashing\",\n        value: function isCrashing(player, left, top) {\n            var hitboxPixels = this.computeHitbox(player, left, top);\n            return hitboxPixels.some(this.isOccupiedPixelAddress, this);\n        }\n\n        /**\n         * Checks whether a draw at the specified coordinates is inside the field.\n         * @param {Number} left The x coordinate of the left edge of the draw.\n         * @param {Number} top  The y coordinate of the top edge of the draw.\n         */\n\n    }, {\n        key: \"isOnField\",\n        value: function isOnField(left, top) {\n            return left >= 0 && top >= 0 && left + this.config.thickness <= this.width && top + this.config.thickness <= this.height;\n        }\n\n        /** \n         * Checks whether there is a player with a specific ID in the game.\n         * @param {Number} id The ID to check for.\n         */\n\n    }, {\n        key: \"hasPlayer\",\n        value: function hasPlayer(id) {\n            return _Player.Player.isPlayer(this.getPlayerByID(id));\n        }\n\n        // DOERS\n\n        /** \n         * Adds a player to the game.\n         * @param {Player} player The player to add.\n         */\n\n    }, {\n        key: \"addPlayer\",\n        value: function addPlayer(player) {\n            var maxPlayers = this.maxPlayers();\n            if (!_Player.Player.isPlayer(player)) {\n                throw new TypeError(\"Cannot add \" + player + \" to the game because it is not a player.\");\n            } else if (player.getID() > maxPlayers) {\n                throw new RangeError(\"Cannot add \" + player + \" to the game because player IDs larger than \" + maxPlayers + \" are not supported.\");\n            } else if (this.hasPlayer(player.getID())) {\n                (0, _utilities.logWarning)(\"Not adding \" + player + \" to the game because there is already a player with ID \" + player.getID() + \".\");\n            } else {\n                (0, _utilities.log)(player + \" ready!\");\n                this.players.push(player);\n                player.setMaxSpeed(this.config.speed);\n                this.GUI_playerReady(player.getID());\n            }\n        }\n\n        /** \n         * Removes a player from the game.\n         * @param {Number} id The ID of the player to remove.\n         */\n\n    }, {\n        key: \"removePlayer\",\n        value: function removePlayer(id) {\n            var playerToRemove = this.getPlayerByID(id);\n            // Notify GUI iff the player exists:\n            if (_Player.Player.isPlayer(playerToRemove)) {\n                (0, _utilities.log)(playerToRemove + \" unready!\");\n                this.GUI_playerUnready(id);\n            }\n            // Update this.players:\n            this.players = this.players.filter(function (player) {\n                return player !== playerToRemove;\n            });\n        }\n\n        /** Starts the game. */\n\n    }, {\n        key: \"start\",\n        value: function start() {\n            var _this2 = this;\n\n            if (this.isCompetitive()) {\n                this.setTargetScore(this.constructor.calculateTargetScore(this.getNumberOfPlayers()));\n                this.players.forEach(function (player) {\n                    _this2.GUI_updateScoreOfPlayer(player.getID(), 0);\n                });\n            }\n            (0, _utilities.log)(\"Starting game!\");\n            this.GUI_gameStarted();\n            _mainloopMin2.default.start();\n            this.started = true;\n            this.pixels = new Uint8Array(this.width * this.height);\n            this.beginNewRound();\n        }\n    }, {\n        key: \"pause\",\n        value: function pause() {\n            _mainloopMin2.default.stop();\n        }\n    }, {\n        key: \"isPaused\",\n        value: function isPaused() {\n            return !_mainloopMin2.default.isRunning();\n        }\n    }, {\n        key: \"resume\",\n        value: function resume() {\n            _mainloopMin2.default.start();\n        }\n\n        /** Announce KONEC HRY, show results etc. */\n\n    }, {\n        key: \"konecHry\",\n        value: function konecHry() {\n            (0, _utilities.log)(this.constructor.KONEC_HRY);\n            this.ended = true;\n            this.GUI_konecHry();\n            this.quitHintTimer = setTimeout(this.showQuitHint.bind(this), this.config.hintDelay);\n        }\n    }, {\n        key: \"quit\",\n        value: function quit() {\n            clearTimeout(this.quitHintTimer);\n            clearTimeout(this.proceedHintTimer);\n        }\n    }, {\n        key: \"clearField\",\n        value: function clearField() {\n            this.pixels.fill(0);\n            this.Render_clearField();\n        }\n    }, {\n        key: \"showProceedHint\",\n        value: function showProceedHint() {\n            this.GUI_showMessage(this.config.messages.next);\n        }\n    }, {\n        key: \"hideProceedHint\",\n        value: function hideProceedHint() {\n            clearTimeout(this.proceedHintTimer);\n            this.GUI_hideMessage(this.config.messages.next);\n        }\n    }, {\n        key: \"showQuitHint\",\n        value: function showQuitHint() {\n            this.GUI_showMessage(this.config.messages.quit);\n        }\n    }, {\n        key: \"hideQuitHint\",\n        value: function hideQuitHint() {\n            clearTimeout(this.quitHintTimer);\n            this.GUI_hideMessage(this.config.messages.quit);\n        }\n    }, {\n        key: \"beginNewRound\",\n        value: function beginNewRound() {\n            this.rounds.push(new _Round.Round());\n            (0, _utilities.log)(\"======== ROUND \" + this.rounds.length + \" ========\");\n            this.resetPlayers();\n            this.clearField();\n            // Sort the players by their IDs so they spawn in the correct order:\n            this.sortPlayers();\n            this.spawnAndStartPlayers();\n        }\n    }, {\n        key: \"endRound\",\n        value: function endRound() {\n            this.stopPlayers();\n            this.proceedHintTimer = setTimeout(this.showProceedHint.bind(this), this.config.hintDelay);\n        }\n    }, {\n        key: \"sortPlayers\",\n        value: function sortPlayers() {\n            this.players.sort(function (a, b) {\n                return a.getID() - b.getID();\n            });\n        }\n    }, {\n        key: \"startPlayer\",\n        value: function startPlayer(player) {\n            player.start();\n        }\n    }, {\n        key: \"stopPlayer\",\n        value: function stopPlayer(player) {\n            player.stop();\n        }\n    }, {\n        key: \"resetPlayer\",\n        value: function resetPlayer(player) {\n            player.reset();\n        }\n\n        /** Starts all players. */\n\n    }, {\n        key: \"startPlayers\",\n        value: function startPlayers() {\n            this.players.forEach(this.startPlayer);\n        }\n    }, {\n        key: \"stopPlayers\",\n        value: function stopPlayers() {\n            this.players.forEach(this.stopPlayer);\n        }\n    }, {\n        key: \"resetPlayers\",\n        value: function resetPlayers() {\n            this.players.forEach(this.resetPlayer);\n        }\n    }, {\n        key: \"occupyPixel\",\n        value: function occupyPixel(x, y, id) {\n            this.pixels[this.pixelAddress(x, y)] = id;\n        }\n    }, {\n        key: \"occupy\",\n        value: function occupy(player, left, top) {\n            var right = left + this.config.thickness;\n            var bottom = top + this.config.thickness;\n            var id = player.getID();\n            (0, _utilities.forfor)(top, bottom, left, right, this.occupyPixel.bind(this), id);\n            this.Render_drawSquare(left, top, player.getColor());\n        }\n    }, {\n        key: \"flicker\",\n        value: function flicker(player) {\n            var _this3 = this;\n\n            var stopFlickering = function stopFlickering() {\n                clearInterval(flickerTicker);\n                var left = _this3.edgeOfSquare(player.x);\n                var top = _this3.edgeOfSquare(player.y);\n                _this3.Render_drawSquare(left, top, player.getColor());\n            };\n            var self = this;\n            var left = this.edgeOfSquare(player.x);\n            var top = this.edgeOfSquare(player.y);\n            var color = player.getColor();\n            var isVisible = false;\n            var flickerTicker = setInterval(function () {\n                if (isVisible) {\n                    _this3.Render_clearSquare(left, top);\n                } else {\n                    _this3.Render_drawSquare(left, top, color);\n                }\n                isVisible = !isVisible;\n            }, 1000 / this.config.flickerFrequency);\n            setTimeout(stopFlickering, self.config.flickerDuration);\n        }\n    }, {\n        key: \"spawn\",\n        value: function spawn(player, position, direction) {\n            (0, _utilities.log)(player + \" spawning at (\" + (0, _utilities.round)(position.x, 2) + \", \" + (0, _utilities.round)(position.y, 2) + \").\");\n            player.x = position.x;\n            player.y = position.y;\n            player.direction = direction;\n            var left = this.edgeOfSquare(player.x);\n            var top = this.edgeOfSquare(player.y);\n            player.beAt(left, top);\n            this.occupy(player, left, top);\n            this.flicker(player);\n        }\n\n        /** Spawns and then starts all players. */\n\n    }, {\n        key: \"spawnAndStartPlayers\",\n        value: function spawnAndStartPlayers() {\n            var self = this;\n            (0, _utilities.log)(\"Spawnkill prevention is \" + (this.preventSpawnkill ? \"enabled. No two players will spawn within \" + self.safeMinimumSpawnDistance() + \" Kuxels of each other.\" : \"disabled. Players may spawn arbitrarily close to each other.\"));\n            // Spawn each player, then wait for it to finish flickering before spawning the next one:\n            (function spawnPlayer(i) {\n                if (i < self.players.length) {\n                    var spawnPosition = self.preventSpawnkill ? self.safeSpawnPosition() : self.randomSpawnPosition();\n                    self.spawn(self.players[i], spawnPosition, self.randomSpawnAngle());\n                    setTimeout(function () {\n                        return spawnPlayer(++i);\n                    }, self.config.flickerDuration);\n                } else {\n                    // All players have spawned. Start them!\n                    self.startPlayers();\n                }\n            })(0);\n        }\n\n        /**\n         * Draws a specific player.\n         */\n\n    }, {\n        key: \"drawPlayer\",\n        value: function drawPlayer(player) {\n            var thickness = this.config.thickness;\n            while (player.isAlive() && !player.queuedDraws.isEmpty()) {\n                var color = player.getColor();\n                var lastPosition = player.getLastPosition();\n                var currentDraw = player.queuedDraws.dequeue();\n                var left = this.edgeOfSquare(currentDraw.x);\n                var top = this.edgeOfSquare(currentDraw.y);\n                if (!player.justWasAt(left, top)) {\n                    // The new position is not identical to the last one.\n                    var diff_left = left - player.getLastPosition().left;\n                    var diff_top = top - player.getLastPosition().top;\n                    if (!this.isOnField(left, top)) {\n                        // The player wants to draw outside the playing field => DIE.\n                        this.death(player, \"crashed into the wall\");\n                        this.occupy(player, lastPosition.left, lastPosition.top);\n                    } else if (this.isCrashing(player, left, top)) {\n                        // The player wants to draw on a spot occupied by a Kurve => DIE.\n                        this.death(player, \"crashed\");\n                        this.occupy(player, lastPosition.left, lastPosition.top);\n                    } else {\n                        // The player is not dying.\n                        player.beAt(left, top);\n                        if (!player.isHoly()) {\n                            // The player is not holy, so it should draw.\n                            this.occupy(player, left, top);\n                        }\n                    }\n                }\n            }\n        }\n    }, {\n        key: \"drawHead\",\n        value: function drawHead(player) {\n            if (player.isAlive()) {\n                var lastPosition = player.getLastPosition();\n                var left = lastPosition.left;\n                var top = lastPosition.top;\n                var color = player.getColor();\n                this.Render_drawHead(left, top, color);\n            }\n        }\n    }, {\n        key: \"updateGUIScoreboard\",\n        value: function updateGUIScoreboard() {\n            var _this4 = this;\n\n            var updateScore = function updateScore(player) {\n                var id = player.getID();\n                _this4.GUI_updateScoreOfPlayer(id, _this4.getScoreOfPlayer(id));\n            };\n            this.getLivePlayers().forEach(updateScore);\n        }\n    }, {\n        key: \"death\",\n        value: function death(player, cause) {\n            player.die(cause);\n            this.getCurrentRound().add(player);\n            this.updateGUIScoreboard();\n            if (this.isRoundOver()) {\n                if (this.isCompetitive()) {\n                    var isAlive = this.constructor.isAlive;\n                    var winner = this.players.find(isAlive);\n                    this.winRound(winner);\n                }\n                this.endRound();\n            }\n        }\n    }, {\n        key: \"winRound\",\n        value: function winRound(player) {\n            (0, _utilities.log)(player + \" won the round.\");\n            // Ugly fix for the bug where the winner's head disappears when the round ends:\n            this.occupy(player, this.edgeOfSquare(player.x), this.edgeOfSquare(player.y));\n            this.getCurrentRound().add(player);\n        }\n    }, {\n        key: \"proceedKeyPressed\",\n        value: function proceedKeyPressed() {\n            this.hideProceedHint();\n            this.hideQuitHint();\n            if (this.isGameOver()) {\n                // The game is over, so we should show KONEC HRY:\n                this.konecHry();\n            } else if (this.isPostRound()) {\n                // We are post round and the game is not over, so we should proceed to the next round:\n                this.beginNewRound();\n            }\n        }\n    }, {\n        key: \"shouldShowReloadConfirmationOnReloadKey\",\n        value: function shouldShowReloadConfirmationOnReloadKey() {\n            return this.isPostRound();\n        }\n    }, {\n        key: \"shouldQuitOnQuitKey\",\n        value: function shouldQuitOnQuitKey() {\n            return this.isPostRound() && !this.isGameOver();\n        }\n    }, {\n        key: \"shouldQuitOnProceedKey\",\n        value: function shouldQuitOnProceedKey() {\n            return this.isEnded();\n        }\n\n        // RENDERER AND GUI CONTROLLER COMMUNICATION\n\n    }, {\n        key: \"GUI_playerReady\",\n        value: function GUI_playerReady(id) {\n            this.guiController.playerReady(id);\n        }\n    }, {\n        key: \"GUI_playerUnready\",\n        value: function GUI_playerUnready(id) {\n            this.guiController.playerUnready(id);\n        }\n    }, {\n        key: \"GUI_updateScoreOfPlayer\",\n        value: function GUI_updateScoreOfPlayer(id, newScore) {\n            this.guiController.updateScoreOfPlayer(id, newScore);\n        }\n    }, {\n        key: \"GUI_gameStarted\",\n        value: function GUI_gameStarted() {\n            this.guiController.gameStarted();\n        }\n    }, {\n        key: \"GUI_konecHry\",\n        value: function GUI_konecHry() {\n            this.guiController.konecHry();\n        }\n    }, {\n        key: \"GUI_showMessage\",\n        value: function GUI_showMessage(message) {\n            this.guiController.showMessage(message);\n        }\n    }, {\n        key: \"GUI_hideMessage\",\n        value: function GUI_hideMessage(message) {\n            this.guiController.hideMessage(message);\n        }\n    }, {\n        key: \"Render_drawSquare\",\n        value: function Render_drawSquare(left, top, color) {\n            this.renderer.drawSquare(left, top, this.config.thickness, color);\n        }\n    }, {\n        key: \"Render_drawHead\",\n        value: function Render_drawHead(left, top, color) {\n            this.renderer.drawSquare_overlay(left, top, this.config.thickness, color);\n        }\n    }, {\n        key: \"Render_clearSquare\",\n        value: function Render_clearSquare(left, top) {\n            this.renderer.clearSquare(left, top, this.config.thickness);\n        }\n    }, {\n        key: \"Render_clearHeads\",\n        value: function Render_clearHeads() {\n            this.renderer.clearRectangle_overlay(0, 0, this.width, this.height);\n        }\n    }, {\n        key: \"Render_clearField\",\n        value: function Render_clearField() {\n            this.renderer.clearRectangle(0, 0, this.width, this.height);\n            this.renderer.clearRectangle_overlay(0, 0, this.width, this.height);\n        }\n\n        // MAIN LOOP\n\n\n    }, {\n        key: \"updatePlayer\",\n        value: function updatePlayer(player, delta) {\n            if (player.isAlive()) {\n                var angleChange = this.computeAngleChange();\n                var direction = player.getDirection();\n                if (player.isPressingLeft()) {\n                    direction = direction + angleChange; // let compound assignment not optimizable in V8\n                }\n                if (player.isPressingRight()) {\n                    direction = direction - angleChange; // let compound assignment not optimizable in V8\n                }\n                // We use normalizeAngle so the angle stays in the interval -pi < dir <= pi:\n                player.setDirection((0, _utilities.normalizeAngle)(direction));\n                var theta = player.getVelocity() * delta / 1000;\n                player.x += theta * Math.cos(player.direction);\n                player.y -= theta * Math.sin(player.direction);\n            }\n        }\n\n        /**\n         * Updates everything on each tick.\n         * @param {Number} delta\n         *   The amount of time since the last update, in seconds.\n         */\n\n    }, {\n        key: \"update\",\n        value: function update(delta) {\n            var _this5 = this;\n\n            this.players.forEach(function (player) {\n                _this5.updatePlayer(player, delta);\n            });\n            if (this.totalNumberOfTicks % this.maxTicksBetweenDraws() === 0) {\n                this.getLivePlayers().forEach(function (player) {\n                    player.enqueueDraw();\n                });\n            }\n            this.totalNumberOfTicks++;\n        }\n\n        /**\n         * Draws all players.\n         */\n\n    }, {\n        key: \"draw\",\n        value: function draw() {\n            this.Render_clearHeads();\n            this.players.forEach(this.drawPlayer, this);\n            this.players.forEach(this.drawHead, this);\n        }\n\n        /**\n         * Updates the FPS counter etc.\n         * @param {Number} framerate\n         *   The smoothed frames per second.\n         * @param {Boolean} panic\n         *   Whether the main loop panicked because the simulation fell too far behind real time.\n         */\n\n    }, {\n        key: \"end\",\n        value: function end(framerate, panic) {\n            if (panic) {\n                var discardedTime = Math.round(_mainloopMin2.default.resetFrameDelta());\n                console.warn(\"Main loop panicked. Discarding \" + discardedTime + \"ms.\");\n            }\n        }\n\n        /**\n         * Initiates the main loop.\n         */\n\n    }, {\n        key: \"initMainLoop\",\n        value: function initMainLoop() {\n            this.MainLoop = _mainloopMin2.default;\n            this.MainLoop.setUpdate(this.update.bind(this)).setDraw(this.draw.bind(this)).setEnd(this.end.bind(this)).setSimulationTimestep(1000 / this.config.tickrate).setMaxAllowedFPS(this.config.maxFramerate);\n        }\n    }], [{\n        key: \"isRenderer\",\n        value: function isRenderer(obj) {\n            // TODO\n            return obj !== undefined;\n        }\n    }, {\n        key: \"isGUIController\",\n        value: function isGUIController(obj) {\n            // TODO\n            return obj !== undefined;\n        }\n    }, {\n        key: \"isAlive\",\n        value: function isAlive(player) {\n            return player.isAlive();\n        }\n    }, {\n        key: \"calculateTargetScore\",\n        value: function calculateTargetScore(numberOfPlayers) {\n            // Default target score is (n-1) * 10 for n players:\n            return (numberOfPlayers - 1) * 10;\n        }\n    }]);\n\n    return Game;\n}();\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Renderer = Renderer;\nfunction Renderer(mainCanvas, overlayCanvas) {\n\n    var context_main = mainCanvas.getContext(\"2d\");\n    var context_overlay = overlayCanvas.getContext(\"2d\");\n\n    // PRIVATE FUNCTIONS:\n\n    function _drawRectangle(context, left, top, width, height, color) {\n        context.fillStyle = color;\n        context.fillRect(left, top, width, height);\n    }\n\n    function _clearRectangle(context, left, top, width, height) {\n        context.clearRect(left, top, width, height);\n    }\n\n    function _setSize(canvas, width, height) {\n        canvas.width = width;\n        canvas.height = height;\n    }\n\n    // PUBLIC API:\n\n    function setSize(width, height) {\n        _setSize(mainCanvas, width, height);\n        _setSize(overlayCanvas, width, height);\n    }\n\n    // Main canvas:\n\n    function drawSquare(left, top, size, color) {\n        _drawRectangle(context_main, left, top, size, size, color);\n    }\n\n    function clearSquare(left, top, size) {\n        _clearRectangle(context_main, left, top, size, size);\n    }\n\n    function clearRectangle(left, top, width, height) {\n        _clearRectangle(context_main, left, top, width, height);\n    }\n\n    // Overlay canvas:\n\n    function drawSquare_overlay(left, top, size, color) {\n        _drawRectangle(context_overlay, left, top, size, size, color);\n    }\n\n    function clearSquare_overlay(left, top, size) {\n        _clearRectangle(context_overlay, left, top, size, size);\n    }\n\n    function clearRectangle_overlay(left, top, width, height) {\n        _clearRectangle(context_overlay, left, top, width, height);\n    }\n\n    return {\n        drawSquare: drawSquare,\n        clearSquare: clearSquare,\n        clearRectangle: clearRectangle,\n        drawSquare_overlay: drawSquare_overlay,\n        clearSquare_overlay: clearSquare_overlay,\n        clearRectangle_overlay: clearRectangle_overlay,\n        setSize: setSize\n    };\n}\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InfoMessage = undefined;\n\nvar _Message2 = __webpack_require__(8);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar InfoMessage = exports.InfoMessage = function (_Message) {\n    _inherits(InfoMessage, _Message);\n\n    function InfoMessage(text) {\n        _classCallCheck(this, InfoMessage);\n\n        return _possibleConstructorReturn(this, (InfoMessage.__proto__ || Object.getPrototypeOf(InfoMessage)).call(this, text, \"info\"));\n    }\n\n    return InfoMessage;\n}(_Message2.Message);\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.WarningMessage = undefined;\n\nvar _Message2 = __webpack_require__(8);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WarningMessage = exports.WarningMessage = function (_Message) {\n    _inherits(WarningMessage, _Message);\n\n    function WarningMessage(text) {\n        _classCallCheck(this, WarningMessage);\n\n        return _possibleConstructorReturn(this, (WarningMessage.__proto__ || Object.getPrototypeOf(WarningMessage)).call(this, text, \"warning\"));\n    }\n\n    return WarningMessage;\n}(_Message2.Message);\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.PreferenceManager = PreferenceManager;\n\nvar _PreferencesUtilities = __webpack_require__(4);\n\nvar _Preference = __webpack_require__(3);\n\nvar _PreferenceWithValue = __webpack_require__(26);\n\nfunction PreferenceManager(preferencesData) {\n    var LOCALSTORAGE_PREFIX = \"pref_key_\";\n\n    // Parse and validate preferences:\n    (0, _PreferencesUtilities.log)(\"Validating preferences ...\");\n    var PREFERENCES = parsePreferences(preferencesData);\n    (0, _PreferencesUtilities.log)(\"Done.\");\n\n    // Initialize cached preference database:\n    var CACHED_PREFERENCES_WITH_VALUES = getAllPreferencesWithDefaultValues();\n    CACHED_PREFERENCES_WITH_VALUES.forEach(function (preferenceWithValue) {\n        var key = preferenceWithValue.preference.key;\n        var defaultValue = preferenceWithValue.preference.getDefaultValue();\n        try {\n            var savedValue = getSaved(key);\n            if (savedValue === null) {\n                (0, _PreferencesUtilities.log)(\"Using default value '\" + defaultValue + \"' for preference '\" + key + \"' since there was no saved value.\");\n            }\n            preferenceWithValue.value = savedValue !== null ? savedValue : defaultValue;\n        } catch (e) {\n            if (e instanceof TypeError) {\n                (0, _PreferencesUtilities.logWarning)(\"Using default value '\" + defaultValue + \"' for preference '\" + key + \"' since the saved value in localStorage was not a valid one.\");\n            } else {\n                (0, _PreferencesUtilities.logWarning)(\"Using default value '\" + defaultValue + \"' for preference '\" + key + \"' since no saved value could be loaded from localStorage.\");\n            }\n        }\n    });\n\n    function parsePreferences(preferencesData) {\n        return preferencesData.map(parsePreference);\n    }\n\n    function parsePreference(pref, index) {\n        if (!(0, _PreferencesUtilities.isString)(pref.key)) {\n            throw new TypeError(\"'The preference at index \" + index + \" does not have a valid key (found \" + pref.key + \").\");\n        } else if (pref.type === undefined || !(pref.type.prototype instanceof _Preference.Preference)) {\n            throw new TypeError(\"Preference '\" + pref.key + \"' does not use a valid preference type (found \" + pref.type + \").\");\n        } else if (pref.default === undefined) {\n            throw new TypeError(\"Preference '\" + pref.key + \"' has no default value.\");\n        }\n        return new pref.type(pref);\n    }\n\n    function preferenceExists(key) {\n        return getPreference(key) !== undefined;\n    }\n\n    function getPreference(key) {\n        return PREFERENCES.find(function (pref) {\n            return pref.key === key;\n        });\n    }\n\n    function getCachedPreference(key) {\n        return CACHED_PREFERENCES_WITH_VALUES.find(function (preferenceWithValue) {\n            return preferenceWithValue.preference.key === key;\n        });\n    }\n\n    function getAllPreferencesWithValues_saved() {\n        // throws SecurityError etc\n        return PREFERENCES.map(function (preference) {\n            return new _PreferenceWithValue.PreferenceWithValue(preference, getSaved(preference.key));\n        });\n    }\n\n    function getAllPreferencesWithValues_cached() {\n        return PREFERENCES.map(function (preference) {\n            return new _PreferenceWithValue.PreferenceWithValue(preference, getCached(preference.key));\n        });\n    }\n\n    function getAllPreferencesWithDefaultValues() {\n        return PREFERENCES.map(function (preference) {\n            return new _PreferenceWithValue.PreferenceWithValue(preference, preference.getDefaultValue());\n        });\n    }\n\n    function getKey(pref) {\n        return pref.key;\n    }\n\n    function isValidPreferenceValue(key, value) {\n        return getPreference(key).isValidValue(value);\n    }\n\n    function setToDefaultValue(key) {\n        // throws SecurityError etc\n        set(key, getDefaultValue(key));\n    }\n\n    function getDefaultValue(key) {\n        if (!preferenceExists(key)) {\n            throw new Error(\"Preference '\" + key + \"' does not exist.\");\n        }\n        return getPreference(key).getDefaultValue();\n    }\n\n    function LS_prefix(key) {\n        return LOCALSTORAGE_PREFIX + key;\n    }\n\n    function set(key, value) {\n        // throws SecurityError etc\n        if (!preferenceExists(key)) {\n            throw new Error(\"There is no preference with key '\" + key + \"'.\");\n        }\n        var pref = getPreference(key);\n        if (!isValidPreferenceValue(key, value)) {\n            pref.invalidValue(value);\n        } else {\n            (0, _PreferencesUtilities.log)(\"Setting preference '\" + key + \"' to '\" + value + \"'.\");\n            getCachedPreference(key).value = value;\n            try {\n                localStorage.setItem(LS_prefix(key), pref.constructor.stringify(value));\n            } catch (e) {\n                (0, _PreferencesUtilities.logError)(\"Failed to save value for preference '\" + key + \"' to localStorage. The following error was thrown:\\n\" + e);\n                throw e; // likely a SecurityError, but could be others as well\n            }\n        }\n    }\n\n    function getSaved(key) {\n        // throws SecurityError, TypeError etc\n        if (!preferenceExists(key)) {\n            throw new Error(\"There is no preference with key '\" + key + \"'.\");\n        }\n        var pref = getPreference(key);\n        var savedValue = void 0;\n        try {\n            savedValue = localStorage.getItem(LS_prefix(key));\n        } catch (e) {\n            (0, _PreferencesUtilities.logError)(\"Failed to load saved value for preference '\" + key + \"' from localStorage. The following error was thrown:\\n\" + e);\n            throw e; // likely a SecurityError, but could be others as well\n        }\n        if (savedValue === null) {\n            // There was no saved value.\n            return null;\n        } else if (isValidPreferenceValue(key, pref.constructor.parse(savedValue))) {\n            return pref.constructor.parse(savedValue);\n        } else {\n            throw new TypeError(\"'\" + savedValue + \"' could not be parsed to a valid value for preference '\" + pref + \"'.\");\n        }\n    }\n\n    function getCached(key) {\n        if (!preferenceExists(key)) {\n            throw new Error(\"There is no preference with key '\" + key + \"'.\");\n        }\n        return getCachedPreference(key).value;\n    }\n\n    function setAllToDefault() {\n        (0, _PreferencesUtilities.log)(\"Resetting all preferences ...\");\n        PREFERENCES.map(getKey).forEach(setToDefaultValue);\n        (0, _PreferencesUtilities.log)(\"Done.\");\n    }\n\n    return {\n        isValidPreferenceValue: isValidPreferenceValue,\n        set: set,\n        getSaved: getSaved,\n        getCached: getCached,\n        setToDefaultValue: setToDefaultValue,\n        getDefaultValue: getDefaultValue,\n        getAllPreferencesWithValues_saved: getAllPreferencesWithValues_saved,\n        getAllPreferencesWithValues_cached: getAllPreferencesWithValues_cached,\n        getAllPreferencesWithDefaultValues: getAllPreferencesWithDefaultValues,\n        setAllToDefault: setAllToDefault\n    };\n}\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _BooleanPreference = __webpack_require__(9);\n\nvar _MultichoicePreference = __webpack_require__(10);\n\nvar _ZatackaEn_US = __webpack_require__(1);\n\nvar _ZatackaEn_US2 = _interopRequireDefault(_ZatackaEn_US);\n\nvar _strings = __webpack_require__(2);\n\nvar _strings2 = _interopRequireDefault(_strings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = Object.freeze([{\n    type: _BooleanPreference.BooleanPreference,\n    key: _strings2.default.pref_key_prevent_spawnkill,\n    label: _ZatackaEn_US2.default.pref_label_prevent_spawnkill,\n    description: _ZatackaEn_US2.default.pref_label_description_prevent_spawnkill,\n    default: false\n}, {\n    type: _BooleanPreference.BooleanPreference,\n    key: _strings2.default.pref_key_confirm_quit,\n    label: _ZatackaEn_US2.default.pref_label_confirm_quit,\n    description: _ZatackaEn_US2.default.pref_label_description_confirm_quit,\n    default: true\n}, {\n    type: _MultichoicePreference.MultichoicePreference,\n    key: _strings2.default.pref_key_scaling,\n    label: _ZatackaEn_US2.default.pref_label_scaling,\n    description: _ZatackaEn_US2.default.pref_label_description_scaling,\n    options: [{\n        key: _strings2.default.pref_value_scaling_prefer_quality,\n        label: _ZatackaEn_US2.default.pref_label_scaling_prefer_quality\n    }, {\n        key: _strings2.default.pref_value_scaling_prefer_size,\n        label: _ZatackaEn_US2.default.pref_label_scaling_prefer_size\n    }],\n    default: _strings2.default.pref_value_scaling_prefer_quality\n}, {\n    type: _MultichoicePreference.MultichoicePreference,\n    key: _strings2.default.pref_key_cursor,\n    label: _ZatackaEn_US2.default.pref_label_cursor,\n    description: _ZatackaEn_US2.default.pref_label_description_cursor,\n    options: [{\n        key: _strings2.default.pref_value_cursor_always_visible,\n        label: _ZatackaEn_US2.default.pref_label_cursor_always_visible\n    }, {\n        key: _strings2.default.pref_value_cursor_hidden_when_mouse_used_by_player,\n        label: _ZatackaEn_US2.default.pref_label_cursor_hidden_when_mouse_used_by_player\n    }, {\n        key: _strings2.default.pref_value_cursor_always_hidden,\n        label: _ZatackaEn_US2.default.pref_label_cursor_always_hidden\n    }],\n    default: _strings2.default.pref_value_cursor_hidden_when_mouse_used_by_player\n}, {\n    type: _MultichoicePreference.MultichoicePreference,\n    key: _strings2.default.pref_key_edge_fix,\n    label: _ZatackaEn_US2.default.pref_label_edge_fix,\n    description: _ZatackaEn_US2.default.pref_label_description_edge_fix,\n    options: [{\n        key: _strings2.default.pref_value_edge_fix_off,\n        label: _ZatackaEn_US2.default.pref_label_edge_fix_off\n    }, {\n        key: _strings2.default.pref_value_edge_fix_minimal,\n        label: _ZatackaEn_US2.default.pref_label_edge_fix_minimal\n    }, {\n        key: _strings2.default.pref_value_edge_fix_full,\n        label: _ZatackaEn_US2.default.pref_label_edge_fix_full\n    }],\n    default: _strings2.default.pref_value_edge_fix_off\n}, {\n    type: _MultichoicePreference.MultichoicePreference,\n    key: _strings2.default.pref_key_hints,\n    label: _ZatackaEn_US2.default.pref_label_hints,\n    description: _ZatackaEn_US2.default.pref_label_description_hints,\n    options: [{\n        key: _strings2.default.pref_value_hints_all,\n        label: _ZatackaEn_US2.default.pref_label_hints_all\n    }, {\n        key: _strings2.default.pref_value_hints_warnings_only,\n        label: _ZatackaEn_US2.default.pref_label_hints_warnings_only\n    }, {\n        key: _strings2.default.pref_value_hints_none,\n        label: _ZatackaEn_US2.default.pref_label_hints_none\n    }],\n    default: _strings2.default.pref_value_hints_all\n}]);\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _utilities = __webpack_require__(0);\n\nvar _Game = __webpack_require__(13);\n\nvar _Player = __webpack_require__(5);\n\nvar _Renderer = __webpack_require__(14);\n\nvar _GUIController = __webpack_require__(12);\n\nvar _preferences = __webpack_require__(18);\n\nvar _preferences2 = _interopRequireDefault(_preferences);\n\nvar _PreferenceManager = __webpack_require__(17);\n\nvar _InfoMessage = __webpack_require__(15);\n\nvar _WarningMessage = __webpack_require__(16);\n\nvar _ConfirmationDialog = __webpack_require__(6);\n\nvar _ZatackaEn_US = __webpack_require__(1);\n\nvar _ZatackaEn_US2 = _interopRequireDefault(_ZatackaEn_US);\n\nvar _strings = __webpack_require__(2);\n\nvar _strings2 = _interopRequireDefault(_strings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Zatacka = function () {\n\n    var canvas_main = (0, _utilities.byID)(\"canvas_main\");\n    var canvas_overlay = (0, _utilities.byID)(\"canvas_overlay\");\n    var ORIGINAL_WIDTH = canvas_main.width;\n    var ORIGINAL_HEIGHT = canvas_main.height;\n    var TOTAL_BORDER_THICKNESS = 4;\n    var KEY_RELOAD = _utilities.KEY.F5;\n    var KEY_FULLSCREEN = _utilities.KEY.F11;\n    var KEY_DEVTOOLS = _utilities.KEY.F12;\n    var ALLOWED_KEYS = [KEY_FULLSCREEN, KEY_DEVTOOLS]; // not to be intercepted by our event handler\n\n    var config = Object.freeze({\n        tickrate: 600, // Hz\n        maxFramerate: 300, // Hz\n        canvas: canvas_main,\n        thickness: 3, // Kuxels\n        speed: 60, // Kuxels per second\n        turningRadius: 28.5, // Kuxels (NB: _radius_)\n        minSpawnAngle: -Math.PI / 2, // radians\n        maxSpawnAngle: Math.PI / 2, // radians\n        spawnMargin: 100, // Kuxels\n        preventSpawnkill: false,\n        flickerFrequency: 20, // Hz, when spawning\n        flickerDuration: 830, // ms, when spawning\n        minHoleInterval: 90, // Kuxels\n        maxHoleInterval: 300, // Kuxels\n        minHoleSize: 5, // Kuxels\n        maxHoleSize: 9, // Kuxels\n        hintDelay: 3000, // ms\n        keys: {\n            \"proceed\": [_utilities.KEY.SPACE, _utilities.KEY.ENTER],\n            \"quit\": [_utilities.KEY.ESCAPE]\n        },\n        messages: Object.freeze({\n            pick: new _InfoMessage.InfoMessage(_ZatackaEn_US2.default.hint_pick),\n            proceed: new _InfoMessage.InfoMessage(_ZatackaEn_US2.default.hint_proceed),\n            next: new _InfoMessage.InfoMessage(_ZatackaEn_US2.default.hint_next),\n            quit: new _InfoMessage.InfoMessage(_ZatackaEn_US2.default.hint_quit),\n            popup: new _WarningMessage.WarningMessage(\"<a href=\\\"\" + _strings2.default.game_url + \"\\\" target=\\\"_blank\\\">\" + _ZatackaEn_US2.default.hint_popup + \"</a>\"),\n            alt: new _WarningMessage.WarningMessage(_ZatackaEn_US2.default.hint_alt),\n            ctrl: new _WarningMessage.WarningMessage(_ZatackaEn_US2.default.hint_ctrl),\n            mouse: new _WarningMessage.WarningMessage(_ZatackaEn_US2.default.hint_mouse),\n            preferences_access_denied: new _WarningMessage.WarningMessage(_ZatackaEn_US2.default.hint_preferences_access_denied)\n        }),\n        dialogs: Object.freeze({\n            confirmation_quit: new _ConfirmationDialog.ConfirmationDialog(_ZatackaEn_US2.default.label_text_confirm_quit, quitGame),\n            confirmation_reload: new _ConfirmationDialog.ConfirmationDialog(_ZatackaEn_US2.default.label_text_confirm_reload, reload)\n        }),\n        defaultPlayers: Object.freeze([{ id: 1, name: \"Red\", color: \"#FF2800\", keyL: _utilities.KEY[\"1\"], keyR: _utilities.KEY.Q }, { id: 2, name: \"Yellow\", color: \"#C3C300\", keyL: [_utilities.KEY.CTRL, _utilities.KEY.Z], keyR: [_utilities.KEY.ALT, _utilities.KEY.X] }, { id: 3, name: \"Orange\", color: \"#FF7900\", keyL: _utilities.KEY.M, keyR: _utilities.KEY.COMMA }, { id: 4, name: \"Green\", color: \"#00CB00\", keyL: _utilities.KEY.LEFT_ARROW, keyR: _utilities.KEY.DOWN_ARROW }, { id: 5, name: \"Pink\", color: \"#DF51B6\", keyL: [_utilities.KEY.DIVIDE, _utilities.KEY.END, _utilities.KEY.PAGE_DOWN], keyR: [_utilities.KEY.MULTIPLY, _utilities.KEY.PAGE_UP] }, { id: 6, name: \"Blue\", color: \"#00A2CB\", keyL: _utilities.MOUSE.LEFT, keyR: _utilities.MOUSE.RIGHT }])\n    });\n\n    var preferenceManager = new _PreferenceManager.PreferenceManager(_preferences2.default);\n\n    function isProceedKey(key) {\n        return config.keys.proceed.includes(key);\n    }\n\n    function isQuitKey(key) {\n        return config.keys.quit.includes(key);\n    }\n\n    function shouldPreventDefault(key) {\n        return !ALLOWED_KEYS.includes(key);\n    }\n\n    function setEdgePadding(padding) {\n        if (game.isStarted()) {\n            throw new Error(\"Cannot change edge padding when the game is running.\");\n        } else {\n            var newCanvasWidth = ORIGINAL_WIDTH - padding;\n            var newCanvasHeight = ORIGINAL_HEIGHT - 2 * padding;\n            game.setSize(newCanvasWidth, newCanvasHeight);\n            guiController.setEdgePadding(padding);\n        }\n    }\n\n    function setEdgeMode(mode) {\n        var padding = 0;\n        if (mode === \"minimal\") {\n            padding = 1;\n        } else if (mode === \"full\") {\n            padding = TOTAL_BORDER_THICKNESS;\n        }\n        try {\n            setEdgePadding(padding);\n        } catch (e) {\n            (0, _utilities.logError)(e);\n        }\n    }\n\n    function setScalingMode(mode) {\n        guiController.setBlurryScaling(mode === _strings2.default.pref_value_scaling_prefer_size);\n    }\n\n    function setPreventSpawnkill(mode) {\n        if (game.isStarted()) {\n            throw new Error(\"Cannot change edge padding when the game is running.\");\n        } else {\n            game.setPreventSpawnkill(mode);\n        }\n    }\n\n    function getHoleConfig() {\n        return {\n            minHoleSize: config.minHoleSize,\n            maxHoleSize: config.maxHoleSize,\n            minHoleInterval: config.minHoleInterval,\n            maxHoleInterval: config.maxHoleInterval\n        };\n    }\n\n    function getPaddedHoleConfig() {\n        var thickness = config.thickness;\n        var holeConfig = getHoleConfig();\n        var paddedHoleConfig = {};\n        paddedHoleConfig.minPaddedHoleSize = holeConfig.minHoleSize + thickness;\n        paddedHoleConfig.maxPaddedHoleSize = holeConfig.maxHoleSize + thickness;\n        paddedHoleConfig.minPaddedHoleInterval = Math.max(0, holeConfig.minHoleInterval - thickness);\n        paddedHoleConfig.maxPaddedHoleInterval = Math.max(0, holeConfig.maxHoleInterval - thickness);\n        return paddedHoleConfig;\n    }\n\n    function defaultPlayerData(id) {\n        return config.defaultPlayers.find(function (defaultPlayer) {\n            return defaultPlayer.id === id;\n        });\n    }\n\n    function defaultPlayer(id) {\n        var playerData = defaultPlayerData(id);\n        if (playerData === undefined) {\n            throw new TypeError(\"There is no default player with ID \" + id + \".\");\n        }\n        return new _Player.Player(playerData.id, playerData.name, playerData.color, playerData.keyL, playerData.keyR, getPaddedHoleConfig());\n    }\n\n    function applyCursorBehavior() {\n        var mouseIsBeingUsed = game.getPlayers().some(hasMouseButton);\n        var behavior = void 0;\n        switch (preferenceManager.getCached(_strings2.default.pref_key_cursor)) {\n            case _strings2.default.pref_value_cursor_hidden_when_mouse_used_by_player:\n                behavior = mouseIsBeingUsed ? _strings2.default.cursor_hidden : _strings2.default.cursor_visible;\n                break;\n            case _strings2.default.pref_value_cursor_always_hidden:\n                behavior = _strings2.default.cursor_hidden;\n                break;\n            default:\n                behavior = _strings2.default.cursor_visible;\n        }\n        (0, _utilities.log)(\"Setting cursor behavior to \" + behavior + \".\");\n        guiController.setCursorBehavior(behavior);\n    }\n\n    function proceedKeyPressedInLobby() {\n        var numberOfReadyPlayers = game.getNumberOfPlayers();\n        if (numberOfReadyPlayers > 0) {\n            clearMessages();\n            applyCursorBehavior();\n            game.setMode(numberOfReadyPlayers === 1 ? _Game.Game.PRACTICE : _Game.Game.COMPETITIVE);\n            game.start();\n        }\n    }\n\n    function hasMouseButton(player) {\n        return player.usesAnyMouseButton();\n    }\n\n    function checkForDangerousInput() {\n        if (game.getPlayers().some(function (player) {\n            return player.hasKey(_utilities.KEY.CTRL);\n        })) {\n            guiController.showMessage(config.messages.ctrl);\n        } else {\n            guiController.hideMessage(config.messages.ctrl);\n        }\n\n        if (game.getPlayers().some(function (player) {\n            return player.hasKey(_utilities.KEY.ALT);\n        })) {\n            guiController.showMessage(config.messages.alt);\n        } else {\n            guiController.hideMessage(config.messages.alt);\n        }\n\n        if (game.getPlayers().some(hasMouseButton)) {\n            guiController.showMessage(config.messages.mouse);\n        } else {\n            guiController.hideMessage(config.messages.mouse);\n        }\n    }\n\n    function addPlayer(id) {\n        game.addPlayer(defaultPlayer(id));\n        checkForDangerousInput();\n        clearTimeout(hintPickTimer);\n        guiController.hideMessage(config.messages.pick);\n        clearTimeout(hintProceedTimer);\n        hintProceedTimer = setTimeout(function () {\n            guiController.showMessage(config.messages.proceed);\n        }, config.hintDelay);\n    }\n\n    function removePlayer(id) {\n        game.removePlayer(id);\n        checkForDangerousInput();\n        clearTimeout(hintProceedTimer);\n        if (game.getNumberOfPlayers() === 0) {\n            guiController.hideMessage(config.messages.proceed);\n        } else {\n            hintProceedTimer = setTimeout(function () {\n                guiController.showMessage(config.messages.proceed);\n            }, config.hintDelay);\n        }\n    }\n\n    function defaultPlayerHasLeftKey(playerData, pressedKey) {\n        return pressedKey === playerData.keyL || playerData.keyL instanceof Array && playerData.keyL.includes(pressedKey);\n    }\n\n    function defaultPlayerHasRightKey(playerData, pressedKey) {\n        return pressedKey === playerData.keyR || playerData.keyR instanceof Array && playerData.keyR.includes(pressedKey);\n    }\n\n    function addOrRemovePlayer(playerData, pressedKey) {\n        if (defaultPlayerHasLeftKey(playerData, pressedKey)) {\n            addPlayer(playerData.id);\n        } else if (defaultPlayerHasRightKey(playerData, pressedKey)) {\n            removePlayer(playerData.id);\n        }\n    }\n\n    function eventConsumer(event) {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n\n    function keyPressedInLobby(pressedKey) {\n        config.defaultPlayers.forEach(function (playerData) {\n            addOrRemovePlayer(playerData, pressedKey);\n        });\n    }\n\n    function mouseClickedInLobby(button) {\n        config.defaultPlayers.forEach(function (playerData) {\n            addOrRemovePlayer(playerData, _utilities.MOUSE.pack(button));\n        });\n    }\n\n    function keyHandler(event) {\n        var callback = game.isStarted() ? gameKeyHandler : guiController.isShowingSettings() ? settingsKeyHandler : lobbyKeyHandler;\n        guiController.keyPressed(event, callback);\n    }\n\n    function mouseHandler(event) {\n        var handle = game.isStarted() ? gameMouseHandler : guiController.isShowingSettings() ? settingsMouseHandler : guiController.isShowingDialog() ? eventConsumer : event.target instanceof HTMLAnchorElement ? function () {} : lobbyMouseHandler;\n        handle(event);\n    }\n\n    function unloadHandler(event) {\n        if (game.isStarted()) {\n            gameUnloadHandler(event);\n        }\n    }\n\n    function lobbyKeyHandler(event) {\n        if (shouldPreventDefault(event.keyCode)) {\n            event.preventDefault();\n        }\n        var pressedKey = event.keyCode;\n        if (pressedKey === KEY_RELOAD) {\n            reload();\n        } else if (isProceedKey(pressedKey)) {\n            proceedKeyPressedInLobby();\n        } else {\n            keyPressedInLobby(pressedKey);\n        }\n    }\n\n    function lobbyMouseHandler(event) {\n        mouseClickedInLobby(event.button);\n    }\n\n    function reload() {\n        window.removeEventListener(\"beforeunload\", unloadHandler);\n        window.location.reload();\n    }\n\n    function quitGame() {\n        game.quit();\n        guiController.gameQuit();\n        game = newGame();\n        applySettings();\n    }\n\n    function gameKeyHandler(event) {\n        if (shouldPreventDefault(event.keyCode)) {\n            event.preventDefault();\n        }\n        var pressedKey = event.keyCode;\n        if (isProceedKey(pressedKey)) {\n            if (game.isPaused()) {\n                game.resume();\n            } else if (game.shouldQuitOnProceedKey()) {\n                quitGame();\n            } else {\n                game.proceedKeyPressed();\n            }\n        } else if (isQuitKey(pressedKey) && game.shouldQuitOnQuitKey()) {\n            if (preferenceManager.getCached(_strings2.default.pref_key_confirm_quit) === true && !guiController.isShowingDialog()) {\n                guiController.showDialog(config.dialogs.confirmation_quit);\n            } else {\n                quitGame();\n            }\n        } else if (pressedKey === KEY_RELOAD) {\n            if (preferenceManager.getCached(_strings2.default.pref_key_confirm_quit) === true) {\n                if (game.shouldShowReloadConfirmationOnReloadKey() && !guiController.isShowingDialog()) {\n                    guiController.showDialog(config.dialogs.confirmation_reload, reload);\n                }\n            } else {\n                reload();\n            }\n        }\n    }\n\n    function gameMouseHandler(event) {\n        event.preventDefault();\n    }\n\n    function gameUnloadHandler(event) {\n        // A simple trick to prevent accidental unloading of the entire game.\n        return event.returnValue = true;\n    }\n\n    function settingsKeyHandler(event) {\n        var pressedKey = event.keyCode;\n        if (isQuitKey(pressedKey)) {\n            hideSettings();\n        } else if (pressedKey === KEY_RELOAD) {\n            reload();\n        }\n    }\n\n    function settingsMouseHandler(event) {\n        // Intentionally empty.\n    }\n\n    function showSettings() {\n        clearTimeout(hintPickTimer);\n        clearTimeout(hintProceedTimer);\n        try {\n            guiController.updateSettingsForm(preferenceManager.getAllPreferencesWithValues_saved());\n        } catch (e) {\n            (0, _utilities.logWarning)(\"Could not load settings from localStorage. Using cached settings instead.\");\n            guiController.updateSettingsForm(preferenceManager.getAllPreferencesWithValues_cached());\n            handleSettingsAccessError(e);\n        }\n        guiController.showSettings();\n    }\n\n    function hideSettings() {\n        guiController.parseSettingsForm().forEach(function (newSetting) {\n            try {\n                preferenceManager.set(newSetting.key, newSetting.value);\n            } catch (e) {\n                (0, _utilities.logWarning)(\"Could not save setting '\" + newSetting.key + \"' to localStorage.\");\n                handleSettingsAccessError(e);\n            }\n        });\n        applySettings();\n        guiController.hideSettings();\n    }\n\n    function applySettings() {\n        var preference_value_edge_fix = void 0;\n        var preference_value_hints = void 0;\n        var preference_value_prevent_spawnkill = void 0;\n        var preference_value_scaling = void 0;\n        try {\n            preference_value_edge_fix = preferenceManager.getSaved(_strings2.default.pref_key_edge_fix);\n            preference_value_hints = preferenceManager.getSaved(_strings2.default.pref_key_hints);\n            preference_value_prevent_spawnkill = preferenceManager.getSaved(_strings2.default.pref_key_prevent_spawnkill);\n            preference_value_scaling = preferenceManager.getSaved(_strings2.default.pref_key_scaling);\n        } catch (e) {\n            (0, _utilities.logWarning)(\"Could not load settings from localStorage. Using cached settings instead.\");\n            preference_value_edge_fix = preferenceManager.getCached(_strings2.default.pref_key_edge_fix);\n            preference_value_hints = preferenceManager.getCached(_strings2.default.pref_key_hints);\n            preference_value_prevent_spawnkill = preferenceManager.getCached(_strings2.default.pref_key_prevent_spawnkill);\n            preference_value_scaling = preferenceManager.getCached(_strings2.default.pref_key_scaling);\n            handleSettingsAccessError(e);\n        }\n\n        // Edge fix:\n        setEdgeMode(preference_value_edge_fix);\n        // Hints:\n        guiController.setMessageMode(preference_value_hints);\n        // Prevent spawnkill:\n        game.setPreventSpawnkill(preference_value_prevent_spawnkill);\n        // Blurry scaling:\n        setScalingMode(preference_value_scaling);\n    }\n\n    function handleSettingsAccessError(error) {\n        if (error.name === _strings2.default.error_name_security) {\n            guiController.showMessage(config.messages.preferences_access_denied);\n        }\n    }\n\n    function clearMessages() {\n        clearTimeout(hintPickTimer);\n        clearTimeout(hintProceedTimer);\n        guiController.clearMessages();\n    }\n\n    function blurHandler() {\n        (0, _utilities.logWarning)(\"Application lost focus.\");\n        if (game.isLive()) {\n            game.pause();\n        }\n        _utilities.Keyboard.reset();\n        _utilities.Mouse.reset();\n    }\n\n    function addShowSettingsButtonEventListener() {\n        var showSettingsButton = (0, _utilities.byID)(_strings2.default.id_button_show_settings);\n        if (showSettingsButton instanceof HTMLElement) {\n            showSettingsButton.addEventListener(\"mousedown\", eventConsumer);\n            showSettingsButton.addEventListener(\"click\", showSettings);\n        }\n    }\n\n    function addHideSettingsButtonEventListener() {\n        var hideSettingsButton = (0, _utilities.byID)(_strings2.default.id_button_hide_settings);\n        if (hideSettingsButton instanceof HTMLElement) {\n            hideSettingsButton.addEventListener(\"mousedown\", eventConsumer);\n            hideSettingsButton.addEventListener(\"click\", hideSettings);\n        }\n    }\n\n    function handleHistoryHazards() {\n        if (history && history.length > 1) {\n            guiController.showMessage(config.messages.popup);\n        }\n    }\n\n    function addEventListeners() {\n        (0, _utilities.log)(\"Adding event listeners ...\");\n\n        // Hide/show settings:\n        addShowSettingsButtonEventListener();\n        addHideSettingsButtonEventListener();\n\n        // General event handlers:\n        document.addEventListener(\"keydown\", keyHandler);\n        document.addEventListener(\"mousedown\", mouseHandler);\n        document.addEventListener(\"contextmenu\", eventConsumer);\n        window.addEventListener(\"beforeunload\", unloadHandler);\n        window.addEventListener(\"blur\", blurHandler);\n\n        // Player input:\n        document.addEventListener(\"keydown\", _utilities.Keyboard.onKeydown.bind(_utilities.Keyboard));\n        document.addEventListener(\"keyup\", _utilities.Keyboard.onKeyup.bind(_utilities.Keyboard));\n        document.addEventListener(\"mousedown\", _utilities.Mouse.onMousedown.bind(_utilities.Mouse));\n        document.addEventListener(\"mouseup\", _utilities.Mouse.onMouseup.bind(_utilities.Mouse));\n\n        (0, _utilities.log)(\"Done.\");\n    }\n\n    addEventListeners();\n\n    function newGame() {\n        return new _Game.Game(config, (0, _Renderer.Renderer)(canvas_main, canvas_overlay), guiController);\n    }\n\n    var guiController = (0, _GUIController.GUIController)(config);\n    var game = newGame();\n\n    var hintProceedTimer = void 0;\n    var hintPickTimer = setTimeout(function () {\n        guiController.showMessage(config.messages.pick);\n    }, config.hintDelay);\n\n    applySettings();\n    handleHistoryHazards();\n\n    return {\n        getConfig: function getConfig() {\n            return config;\n        },\n        getGame: function getGame() {\n            return game;\n        },\n        addPlayer: function addPlayer(playerOrID) {\n            var player = _Player.Player.isPlayer(playerOrID) ? playerOrID : new _Player.Player(playerOrID);\n            game.addPlayer(player);\n        }\n    };\n}();\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Round = exports.Round = function () {\n    function Round(players) {\n        _classCallCheck(this, Round);\n\n        // A list of the players in the order they died (winner also included):\n        this.results = [];\n    }\n\n    _createClass(Round, [{\n        key: \"add\",\n        value: function add(player) {\n            this.results.push(player);\n        }\n    }, {\n        key: \"getSuccessOfPlayer\",\n        value: function getSuccessOfPlayer(id) {\n            for (var i = 0; i < this.results.length; i++) {\n                if (this.results[i].hasID(id)) {\n                    return i;\n                }\n            }\n            return this.results.length;\n        }\n    }, {\n        key: \"getResults\",\n        value: function getResults() {\n            return this.results;\n        }\n    }]);\n\n    return Round;\n}();\n\n/***/ }),\n/* 21 */,\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Queue = Queue;\n//code.stephenmorley.org\nfunction Queue() {\n  var a = [],\n      b = 0;this.getLength = function () {\n    return a.length - b;\n  };this.hasItem = function (i) {\n    return a.indexOf(i) !== -1;\n  };this.isEmpty = function () {\n    return 0 === a.length;\n  };this.enqueue = function (b) {\n    a.push(b);\n  };this.dequeue = function () {\n    if (0 !== a.length) {\n      var c = a[b];2 * ++b >= a.length && (a = a.slice(b), b = 0);return c;\n    }\n  };this.peek = function () {\n    return 0 < a.length ? a[b] : void 0;\n  };\n};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * mainloop.js 1.0.1-20150816\n *\n * @author Isaac Sukin (http://www.isaacsukin.com/)\n * @license MIT\n */\n\nexports.default = !function (a) {\n  function b(a) {\n    if (e + j > a) return u = n(b), void 0;for (d += a - e, e = a, q(a, d), a > g + 1e3 && (f = .25 * h + .75 * f, g = a, h = 0), h++, i = 0; d >= c;) {\n      if (r(c), d -= c, ++i >= 240) {\n        m = !0;break;\n      }\n    }s(d / c), t(f, m), m = !1, u = n(b);\n  }var c = 1e3 / 60,\n      d = 0,\n      e = 0,\n      f = 60,\n      g = 0,\n      h = 0,\n      i = 0,\n      j = 0,\n      k = !1,\n      l = !1,\n      m = !1,\n      n = a.requestAnimationFrame || function () {\n    var a = Date.now(),\n        b,\n        d;return function (e) {\n      return b = Date.now(), d = Math.max(0, c - (b - a)), a = b + d, setTimeout(function () {\n        e(b + d);\n      }, d);\n    };\n  }(),\n      o = a.cancelAnimationFrame || clearTimeout,\n      p = function p() {},\n      q = p,\n      r = p,\n      s = p,\n      t = p,\n      u;a.MainLoop = { getSimulationTimestep: function getSimulationTimestep() {\n      return c;\n    }, setSimulationTimestep: function setSimulationTimestep(a) {\n      return c = a, this;\n    }, getFPS: function getFPS() {\n      return f;\n    }, getMaxAllowedFPS: function getMaxAllowedFPS() {\n      return 1e3 / j;\n    }, setMaxAllowedFPS: function setMaxAllowedFPS(a) {\n      return \"undefined\" == typeof a && (a = 1 / 0), 0 === a ? this.stop() : j = 1e3 / a, this;\n    }, resetFrameDelta: function resetFrameDelta() {\n      var a = d;return d = 0, a;\n    }, setBegin: function setBegin(a) {\n      return q = a || q, this;\n    }, setUpdate: function setUpdate(a) {\n      return r = a || r, this;\n    }, setDraw: function setDraw(a) {\n      return s = a || s, this;\n    }, setEnd: function setEnd(a) {\n      return t = a || t, this;\n    }, start: function start() {\n      return l || (l = !0, u = n(function (a) {\n        s(1), k = !0, e = a, g = a, h = 0, u = n(b);\n      })), this;\n    }, stop: function stop() {\n      return k = !1, l = !1, o(u), this;\n    }, isRunning: function isRunning() {\n      return k;\n    } },  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (a.MainLoop),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) && (module.exports = a.MainLoop);\n}(window);\n//# sourceMappingURL=mainloop.min.js.map\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.IntegerRangePreference = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _Preference = __webpack_require__(3);\n\nvar _RangePreference2 = __webpack_require__(11);\n\nvar _PreferencesUtilities = __webpack_require__(4);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar IntegerRangePreference = exports.IntegerRangePreference = function (_RangePreference) {\n    _inherits(IntegerRangePreference, _RangePreference);\n\n    function IntegerRangePreference(data) {\n        _classCallCheck(this, IntegerRangePreference);\n\n        if (!(0, _PreferencesUtilities.isInt)(data.min) || !(0, _PreferencesUtilities.isInt)(data.max)) {\n            throw new TypeError(\"min and max must be integers (found \" + data.min + \" and \" + data.max + \" for preference '\" + data.key + \"').\");\n        }\n\n        var _this = _possibleConstructorReturn(this, (IntegerRangePreference.__proto__ || Object.getPrototypeOf(IntegerRangePreference)).call(this, data));\n\n        _this.min = data.min;\n        _this.max = data.max;\n        if (!_this.isValidValue(data.default)) {\n            _get(IntegerRangePreference.prototype.__proto__ || Object.getPrototypeOf(IntegerRangePreference.prototype), \"invalidValue\", _this).call(_this, data.default);\n        }\n        return _this;\n    }\n\n    _createClass(IntegerRangePreference, [{\n        key: \"isValidValue\",\n        value: function isValidValue(value) {\n            return (0, _PreferencesUtilities.isInt)(value) && value >= this.min && value <= this.max;\n        }\n    }], [{\n        key: \"stringify\",\n        value: function stringify(value) {\n            return value.toString();\n        }\n    }, {\n        key: \"parse\",\n        value: function parse(stringifiedValue) {\n            return parseInt(stringifiedValue);\n        }\n    }]);\n\n    return IntegerRangePreference;\n}(_RangePreference2.RangePreference);\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.MultichoicePreferenceOption = undefined;\n\nvar _PreferencesUtilities = __webpack_require__(4);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MultichoicePreferenceOption = exports.MultichoicePreferenceOption = function MultichoicePreferenceOption(key, label) {\n    _classCallCheck(this, MultichoicePreferenceOption);\n\n    var CLASS_MULTICHOICE_PREFERENCE = \"MultichoicePreference\";\n    if (!isValidKey(key)) {\n        throw new TypeError(\"The key of a \" + CLASS_MULTICHOICE_PREFERENCE + \" option must be a non-empty string (found \" + key + \").\");\n    }\n    if (!isValidLabel(label)) {\n        throw new TypeError(\"The label of a \" + CLASS_MULTICHOICE_PREFERENCE + \" option must be a string (found \" + label + \" for option '\" + key + \"').\");\n    }\n\n    this.key = key;\n    this.label = label;\n\n    function isValidKey(key) {\n        return (0, _PreferencesUtilities.isNonEmptyString)(key);\n    }\n\n    function isValidLabel(label) {\n        return (0, _PreferencesUtilities.isString)(label);\n    }\n};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PreferenceWithValue = exports.PreferenceWithValue = function PreferenceWithValue(preference, value) {\n    _classCallCheck(this, PreferenceWithValue);\n\n    if (!preference.isValidValue(value)) {\n        throw new TypeError(value + \" is not a valid value for preference \" + preference.key + \".\");\n    }\n    this.preference = preference;\n    this.value = value;\n};\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// zatacka.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/js\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 73e35fdfa26bb70f99d6","const typeOf = ((global) => {\n    return function(obj) {\n        if (obj === global) {\n            return \"global\";\n        }\n        return ({}).toString.call(obj).match(/\\s([a-z|A-Z]+)/)[1].toLowerCase();\n    };\n})(this);\n\nconst CONSOLE_PREFIX = \"[Zatacka] \";\n\nexport const KEY = Object.freeze({ BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, PAUSE: 19, CAPS_LOCK: 20, ESCAPE: 27, SPACE: 32, PAGE_UP: 33, PAGE_DOWN: 34, END: 35, HOME: 36, LEFT_ARROW: 37, UP_ARROW: 38, RIGHT_ARROW: 39, DOWN_ARROW: 40, INSERT: 45, DELETE: 46, \"0\": 48, \"1\": 49, \"2\": 50, \"3\": 51, \"4\": 52, \"5\": 53, \"6\": 54, \"7\": 55, \"8\": 56, \"9\": 57, A: 65, B: 66, C: 67, D: 68, E: 69, F: 70, G: 71, H: 72, I: 73, J: 74, K: 75, L: 76, M: 77, N: 78, O: 79, P: 80, Q: 81, R: 82, S: 83, T: 84, U: 85, V: 86, W: 87, X: 88, Y: 89, Z: 90, LEFT_META: 91, RIGHT_META: 92, SELECT: 93, NUMPAD_0: 96, NUMPAD_1: 97, NUMPAD_2: 98, NUMPAD_3: 99, NUMPAD_4: 100, NUMPAD_5: 101, NUMPAD_6: 102, NUMPAD_7: 103, NUMPAD_8: 104, NUMPAD_9: 105, MULTIPLY: 106, ADD: 107, SUBTRACT: 109, DECIMAL: 110, DIVIDE: 111, F1: 112, F2: 113, F3: 114, F4: 115, F5: 116, F6: 117, F7: 118, F8: 119, F9: 120, F10: 121, F11: 122, F12: 123, NUM_LOCK: 144, SCROLL_LOCK: 145, SEMICOLON: 186, EQUALS: 187, COMMA: 188, DASH: 189, PERIOD: 190, FORWARD_SLASH: 191, GRAVE_ACCENT: 192, OPEN_BRACKET: 219, BACK_SLASH: 220, CLOSE_BRACKET: 221, SINGLE_QUOTE: 222 });\n\nexport const MOUSE = Object.freeze((() => {\n    const offset = 1000;\n    return Object.freeze({\n        unpack: (offseted) => offseted - offset,\n        pack:   (standard) => standard + offset,\n        LEFT:   offset+0,\n        RIGHT:  offset+2,\n        MIDDLE: offset+1,\n        MOUSE4: offset+3,\n        MOUSE5: offset+4\n    });\n})());\n\nexport const F_KEYS = Object.freeze([\n    KEY.F1, KEY.F2, KEY.F3, KEY.F4, KEY.F5, KEY.F6, KEY.F7, KEY.F8, KEY.F9, KEY.F10, KEY.F11, KEY.F12\n]);\n\nexport const MOUSE_BUTTONS = Object.freeze([\n    MOUSE.LEFT, MOUSE.RIGHT, MOUSE.MIDDLE, MOUSE.MOUSE4, MOUSE.MOUSE5\n]);\n\nexport function isObject(obj) {\n    return typeOf(obj) === \"object\";\n}\n\nexport function isNumber(n) {\n    return typeOf(n) === \"number\";\n}\n\nexport function isPositiveNumber(n) {\n    return isNumber(n) && n > 0;\n}\n\nexport function isInt(n) {\n    return isNumber(n) && n % 1 === 0;\n}\n\nexport function isPositiveInt(n) {\n    return isInt(n) && n > 0;\n}\n\nexport function isString(s) {\n    return typeOf(s) === \"string\";\n}\n\nexport function isNonEmptyString(s) {\n    return isString(s) && s.length > 0;\n}\n\nexport function arePositiveNumbers(numbers) {\n    return numbers.every(isPositiveNumber);\n}\n\nexport function round(number, decimals) {\n    return Math.round(number * (Math.pow(10, decimals))) / (Math.pow(10, decimals));\n}\n\nexport function sameAbs(a, b) {\n    return Math.abs(a) === Math.abs(b);\n}\n\n/**\n * Generates a random float between min (inclusive) and max (exclusive).\n *\n * @param {Number} min\n *   Minimum value (inclusive).\n * @param {Number} max\n *   Maximum value (exclusive).\n */\nexport function randomFloat(min, max) {\n    return Math.random() * (max - min) + min;\n}\n\nexport function normalizeAngle(a) {\n    const pi = Math.PI;\n    let angle = a % (2*pi);\n    angle = (angle + 2*pi) % (2*pi);\n    if (angle > pi) {\n        angle = angle - 2*pi;\n    }\n    return angle;\n}\n\nexport function radToDeg(radians) {\n    return (180/Math.PI) * radians;\n}\n\nexport function distanceToDuration(distance, velocity) {\n    return (distance / velocity) * 1000; // milliseconds\n}\n\nexport function log(str) {\n    console.log(CONSOLE_PREFIX + str);\n}\n\nexport function logWarning(str) {\n    console.warn(CONSOLE_PREFIX + str);\n}\n\nexport function logError(str) {\n    console.error(CONSOLE_PREFIX + str);\n}\n\nexport function byID(id) {\n    return document.getElementById(id);\n}\n\nexport function isHTMLElement(elem) {\n    return elem instanceof HTMLElement;\n}\n\nexport function flush(node) {\n    if (isHTMLElement(node)) {\n        node.textContent = \"\";\n    } else {\n        throw new TypeError(`${node} is not a DOM node.`);\n    }\n}\n\nexport function forfor(y_start, y_end, x_start, x_end, func, arg) {\n    for (let y = y_start; y < y_end; y++) {\n        for (let x = x_start; x < x_end; x++) {\n            func.call(this, x, y, arg);\n        }\n    }\n}\n\nexport const Keyboard = {\n    pressed: {},\n    isDown: function(keyCode) {\n        return !!this.pressed[keyCode];\n    },\n    onKeydown: function(event) {\n        this.pressed[event.keyCode] = true;\n    },\n    onKeyup: function(event) {\n        delete this.pressed[event.keyCode];\n    },\n    reset: function() {\n        this.pressed = {};\n    },\n};\n\nexport const Mouse = {\n    pressed: {},\n    isDown: function(mouseButtonNumber) {\n        return this.pressed[mouseButtonNumber];\n    },\n    onMousedown: function(event) {\n        this.pressed[event.button] = true;\n    },\n    onMouseup: function(event) {\n        delete this.pressed[event.button];\n    },\n    reset: function() {\n        this.pressed = {};\n    },\n};\n\nexport function anyKeyBeingPressed(keyCodes) {\n    return Array.isArray(keyCodes) && keyCodes.some(Keyboard.isDown, Keyboard);\n}\n\nexport function anyMouseButtonBeingPressed(mouseButtons) {\n    return Array.isArray(mouseButtons) && mouseButtons.map(MOUSE.unpack).some(Mouse.isDown, Mouse);\n}\n\nexport function anyInputBeingPressed(keysOrMouseButtons) {\n    return anyKeyBeingPressed(keysOrMouseButtons) || anyMouseButtonBeingPressed(keysOrMouseButtons);\n}\n\nexport function isMouseButton(button) {\n    return isPositiveInt(button) && Object.keys(MOUSE).some((buttonName) => MOUSE.hasOwnProperty(buttonName));\n}\n\nexport function isKeyList(keys) {\n    return Array.isArray(keys)\n        && keys.length > 0\n        && keys.every(isPositiveInt);\n}\n\nexport function isFKey(key) {\n    return F_KEYS.includes(key);\n}\n\nexport const PLATFORM = (() => {\n    const strings = {\n        os_id_windows: \"Win\",\n        os_id_mac: \"Mac\",\n        os_id_linux: \"Linux\",\n        os_id_unix: \"X11\",\n\n        os_name_windows: \"Windows\",\n        os_name_mac: \"Mac\",\n        os_name_linux: \"Linux\",\n        os_name_unix: \"UNIX\",\n        os_name_unknown: \"Unknown\",\n    };\n\n    return {\n        getOS: () => {\n            const ua = window.navigator.userAgent || window.navigator.appVersion;\n            if (isNonEmptyString(ua)) {\n                if (ua.indexOf(strings.os_id_windows) > -1) { return strings.os_name_windows; }\n                if (ua.indexOf(strings.os_id_mac)     > -1) { return strings.os_name_mac;     }\n                if (ua.indexOf(strings.os_id_linux)   > -1) { return strings.os_name_linux;   }\n                if (ua.indexOf(strings.os_id_unix)    > -1) { return strings.os_name_unix;    }\n            }\n            return strings.os_name_unknown;\n        },\n        getFullscreenShortcut: () => {\n            switch (PLATFORM.getOS()) {\n                case strings.os_name_mac:\n                    return \"mac\";\n                    break;\n                default:\n                    return \"default\";\n            }\n        },\n    };\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/utilities.js","export default (() => {\n    const KEY_SHIFT = \"⇧\";\n    const KEY_CMD   = \"⌘\";\n    const KEY_PROCEED = \"Space or Enter\";\n    const KEY_QUIT = \"Esc\";\n\n    return Object.freeze({\n        hint_start: `Press <kbd>Space</kbd> to start`,\n        hint_popup: `It is recommended to run Kurve in its own window without history (to avoid switching tabs or navigating back in history mid-game). Click here to do so.`,\n        hint_pick: `Pick your desired color by pressing the corresponding LEFT key (e.g. M for Orange).`,\n        hint_proceed: `Press ${KEY_PROCEED} to start!`,\n        hint_next: `Press ${KEY_PROCEED} to proceed, or ${KEY_QUIT} to quit.`,\n        hint_quit: `Press ${KEY_PROCEED} to start over.`,\n        hint_alt: `Alt plus some other keys may cause undesired behavior (e.g. switching windows).`,\n        hint_ctrl: `Ctrl plus some other keys may cause undesired behavior (e.g. closing the tab).`,\n        hint_mouse: `Make sure to keep the mouse cursor inside the browser window.`,\n        hint_preferences_access_denied: `Could not save/load settings because access to localStorage was denied by the browser. This might be caused by \"third-party site data\" being blocked or similar.`,\n\n        keyboard_fullscreen_mac: `<kbd>${KEY_CMD} + Ctrl + F</kbd> and/or <kbd>${KEY_CMD} + ${KEY_SHIFT} + F</kbd>`,\n        keyboard_fullscreen_standard: \"<kbd>F11</kbd>\",\n\n        getFullscreenHint: (shortcut) => `Press ${shortcut} to toggle fullscreen`,\n\n        label_button_alert_ok: `OK`,\n        label_button_confirm_yes: `Yes`,\n        label_button_confirm_no: `No`,\n\n        label_text_confirm_quit: `Are you sure you want to quit?`,\n        label_text_confirm_reload: `Are you sure you want to reload the application?`,\n\n        pref_label_cursor: `Mouse pointer`,\n        pref_label_description_cursor: `Control how the pointer behaves when the game is live. (It is always visible in the menu.) \"Used by player\" means that a player is using the mouse to control their Kurve.`,\n        pref_label_cursor_always_visible: `Always visible`,\n        pref_label_cursor_hidden_when_mouse_used_by_player: `Hidden when mouse used by player`,\n        pref_label_cursor_always_hidden: `Always hidden`,\n\n        pref_label_edge_fix: `Invisible border fix`,\n        pref_label_description_edge_fix: `Shrink the playing field slightly to make the gray border visible if the monitor is exactly the same height and/or width as the game (in pixels).`,\n        pref_label_edge_fix_off: `Off`,\n        pref_label_edge_fix_minimal: `Minimal`,\n        pref_label_edge_fix_full: `Full`,\n\n        pref_label_hints: `Messages`,\n        pref_label_description_hints: `Hints (white text) are unnecessary for experienced Kurve players. Warnings (yellow) can be useful for players new to playing Kurve in the browser.`,\n        pref_label_hints_all: `Hints and warnings`,\n        pref_label_hints_warnings_only: `Warnings only`,\n        pref_label_hints_none: `None`,\n\n        pref_label_prevent_spawnkill: `Prevent spawnkills`,\n        pref_label_description_prevent_spawnkill: `Enforce a minimum distance between players at round start.`,\n\n        pref_label_confirm_quit: `Confirm quit`,\n        pref_label_description_confirm_quit: `Ask for confirmation before quitting to the main menu (Esc) or reloading the application (F5).`,\n\n        pref_label_scaling: `Scaling`,\n        pref_label_description_scaling: `Visual quality ensures a crisp, pixelmapped image. On-screen size may result in blurry graphics and other visual errors, but can be useful if the game is very small on your screen.`,\n        pref_label_scaling_prefer_quality: `Prefer visual quality`,\n        pref_label_scaling_prefer_size: `Prefer on-screen size`,\n    });\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/locales/Zatacka.en_US.js","export default Object.freeze({\n    game_url: \"ZATACKA.html\",\n\n    error_name_security: \"SecurityError\",\n\n    class_hidden: \"hidden\",\n    class_active: \"active\",\n    class_dialog: \"dialog\",\n    class_dialog_alert: \"alert\",\n    class_dialog_confirmation: \"confirmation\",\n    class_description: \"description\",\n    class_half_width: \"half-width\",\n    class_right_hand_side: \"right-hand-side\",\n    class_blurry: \"blurry\",\n    class_nocursor: \"nocursor\",\n    class_tempcursor: \"tempcursor\",\n    class_hints_warnings_only: \"hints-warnings-only\",\n    class_hints_none: \"hints-none\",\n    html_name_preference_prefix: \"preference-\",\n\n    cursor_hidden: \"hidden\",\n    cursor_visible: \"visible\",\n\n    id_start_hint: \"start-hint\",\n    id_fullscreen_hint: \"fullscreen-hint\",\n    id_button_show_settings: \"button-show-settings\",\n    id_button_hide_settings: \"button-hide-settings\",\n\n    pref_number_type_integer: \"integer\",\n    pref_number_type_float: \"float\",\n\n    pref_key_cursor: \"cursor\",\n    pref_value_cursor_always_visible: \"always_visible\",\n    pref_value_cursor_hidden_when_mouse_used_by_player: \"hidden_when_mouse_used_by_player\",\n    pref_value_cursor_always_hidden: \"always_hidden\",\n\n    pref_key_edge_fix: \"edge_fix\",\n    pref_value_edge_fix_full: \"full\",\n    pref_value_edge_fix_minimal: \"minimal\",\n    pref_value_edge_fix_off: \"off\",\n\n    pref_key_hints: \"hints\",\n    pref_value_hints_all: \"all\",\n    pref_value_hints_warnings_only: \"warnings\",\n    pref_value_hints_none: \"none\",\n\n    pref_key_confirm_quit: \"confirm_quit\",\n    pref_key_confirm_reload: \"confirm_reload\",\n    pref_key_prevent_spawnkill: \"prevent_spawnkill\",\n\n    pref_key_scaling: \"scaling\",\n    pref_value_scaling_prefer_quality: \"prefer_quality\",\n    pref_value_scaling_prefer_size: \"prefer_size\",\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/strings.js","import { isString } from \"./PreferencesUtilities.js\";\n\nexport class Preference {\n    constructor(data) {\n        if (!isString(data.key)) {\n            throw new TypeError(`key must be a string (found ${data.key}). More info: ${data}`);\n        } else if (data.default === undefined) {\n            throw new TypeError(`Preference '${data.key}' must have a default value.`);\n        } else if (data.label === undefined) {\n            throw new TypeError(`Preference '${data.key}' must have a label.`);\n        } else if (data.description === undefined) {\n            throw new TypeError(`Preference '${data.key}' must have a description.`);\n        }\n        this.key = data.key;\n        this.label = data.label;\n        this.default = data.default;\n        this.description = data.description;\n    }\n\n    isValidValue(value) {\n        return isString(value);\n    }\n\n    invalidValue(value) {\n        throw new TypeError(`${value} is not a valid value for preference '${this.key}'.`);\n    }\n\n    static stringify(value) {\n        return value.toString();\n    }\n\n    static parse(stringifiedValue) {\n        return stringifiedValue;\n    }\n\n    getDefaultValue() {\n        return this.default;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/preferences/Preference.js","const typeOf = ((global) => {\n    return function(obj) {\n        if (obj === global) {\n            return \"global\";\n        }\n        return ({}).toString.call(obj).match(/\\s([a-z|A-Z]+)/)[1].toLowerCase();\n    };\n})(this);\n\nconst CONSOLE_PREFIX = \"[Preferences] \";\n\nexport function log(string) {\n    console.log(CONSOLE_PREFIX + string);\n}\n\nexport function logWarning(string) {\n    console.warn(CONSOLE_PREFIX + string);\n}\n\nexport function logError(string) {\n    console.error(CONSOLE_PREFIX + string);\n}\n\nexport function isObject(obj) {\n    return typeOf(obj) === \"object\";\n}\n\nexport function isNumber(n) {\n    return typeOf(n) === \"number\";\n}\n\nexport function isPositiveNumber(n) {\n    return isNumber(n) && n > 0;\n}\n\nexport function isInt(n) {\n    return isNumber(n) && n % 1 === 0;\n}\n\nexport function isPositiveInt(n) {\n    return isInt(n) && n > 0;\n}\n\nexport function isString(s) {\n    return typeOf(s) === \"string\";\n}\n\nexport function isNonEmptyString(s) {\n    return isString(s) && s.length > 0;\n}\n\nexport function arePositiveNumbers(numbers) {\n    return numbers.every(isPositiveNumber);\n}\n\nexport function round(number, decimals) {\n    return Math.round(number * (Math.pow(10, decimals))) / (Math.pow(10, decimals));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/preferences/PreferencesUtilities.js","import { log, logWarning, flush, isObject, isPositiveInt, arePositiveNumbers, round, distanceToDuration, randomFloat, MOUSE_BUTTONS, isMouseButton, isKeyList, anyInputBeingPressed } from \"./lib/utilities.js\";\nimport { Queue } from \"./lib/Queue.js\";\n\nexport class Player {\n    constructor(id, name = `Player ${id}`, color = \"white\", L_keys, R_keys, holeConfig) {\n        if (!isPositiveInt(id)) {\n            throw new TypeError(`Cannot create a player with ID ${id}. Only positive integers are accepted.`);\n        }\n        this.id = id;\n        this.name = name;\n        this.color = color;\n        this.alive = false;\n        this.holy = false;\n        this.x = null;\n        this.y = null;\n        this.direction = 0;\n        this.velocity = 0;\n        this.maxSpeed = undefined;\n        this.lastPosition = null;\n        this.queuedDraws = new Queue();\n        this.holeTimer = null;\n        this.holeConfig = null;\n\n        if (!this.constructor.isHoleConfig(holeConfig)) {\n            logWarning(`Creating player ${this.name} with no hole configuration because ${holeConfig} is not a valid hole configuration.`);\n        } else {\n            this.holeConfig = holeConfig;\n        }\n\n        if (isPositiveInt(L_keys)) {\n            this.L_keys = [L_keys];\n        } else if (isKeyList(L_keys)) {\n            this.L_keys = L_keys;\n        } else {\n            logWarning(`Creating player \"${this.name}\" without any LEFT key(s).`);\n            this.L_keys = [];\n        }\n\n        if (isPositiveInt(R_keys)) {\n            this.R_keys = [R_keys];\n        } else if (isKeyList(R_keys)) {\n            this.R_keys = R_keys;\n        } else {\n            logWarning(`Creating player \"${this.name}\" without any RIGHT key(s).`);\n            this.R_keys = [];\n        }\n    }\n\n    static isPlayer(player) {\n        return (player instanceof Player);\n    }\n\n    static isHoleConfig(holeConfig) {\n        return isObject(holeConfig)\n            && arePositiveNumbers([\n                                   holeConfig.minPaddedHoleSize,\n                                   holeConfig.maxPaddedHoleSize,\n                                   holeConfig.minPaddedHoleInterval,\n                                   holeConfig.maxPaddedHoleInterval\n                                  ]);\n    }\n\n\n    // CHECKERS\n\n    isAlive() {\n        return this.alive;\n    }\n\n    justWasAt(left, top) {\n        return this.lastPosition.left === left && this.lastPosition.top === top;\n    }\n\n    isHoly() {\n        return this.holy; \n    }\n\n    isPressingLeft() {\n        return anyInputBeingPressed(this.L_keys);\n    }\n\n    isPressingRight() {\n        return anyInputBeingPressed(this.R_keys);\n    }\n\n    hasID(id) {\n        return this.id === id;\n    }\n\n    hasMouseButton(button) {\n        return isMouseButton(button)\n            && (this.L_keys.includes(button)\n             || this.R_keys.includes(button));\n    }\n\n    usesAnyMouseButton() {\n        return MOUSE_BUTTONS.some((button) => this.hasMouseButton(button));\n    }\n\n    hasKey(key) {\n        return this.L_keys.includes(key)\n            || this.R_keys.includes(key);\n    }\n\n\n    // GETTERS\n\n    getID() {\n        return this.id;\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    getColor() {\n        return this.color;\n    }\n\n    toString() {\n        return this.name;\n    }\n\n    getLastPosition() {\n        return this.lastPosition;\n    }\n\n    getVelocity() {\n        return this.velocity;\n    }\n\n    getDirection() {\n        return this.direction;\n    }\n\n    randomPaddedHoleSize() {\n        return randomFloat(this.holeConfig.minPaddedHoleSize, this.holeConfig.maxPaddedHoleSize);\n    }\n\n    randomPaddedHoleInterval() {\n        return randomFloat(this.holeConfig.minPaddedHoleInterval, this.holeConfig.maxPaddedHoleInterval);\n    }\n\n    firstHoleDelay() {\n        return distanceToDuration(this.randomPaddedHoleInterval() - this.holeConfig.minPaddedHoleInterval, this.velocity);\n    }\n\n\n    // SETTERS\n\n    setMaxSpeed(speed) {\n        this.maxSpeed = speed;\n    }\n\n    setDirection(direction) {\n        this.direction = direction;\n    }\n\n\n    // DOERS\n\n    start() {\n        log(`${this} starting.`);\n        this.alive = true;\n        this.velocity = this.maxSpeed;\n        if (this.constructor.isHoleConfig(this.holeConfig)) {\n            this.holeTimer = setTimeout(this.startCreatingHoles.bind(this), this.firstHoleDelay());\n        }\n    }\n\n    stop() {\n        this.alive = false;\n        this.velocity = 0;\n        clearTimeout(this.holeTimer);\n    }\n\n    reset() {\n        this.holy = false;\n        this.lastPosition = null;\n        this.queuedDraws = new Queue();\n    }\n\n    /**\n     * Called when the player does something that causes it do die.\n     * @param {String} cause The cause of death.\n     */\n    die(cause) {\n        this.alive = false;\n        clearTimeout(this.holeTimer);\n        log(`${this} ${(cause || \"died\")} at (${round(this.x, 2)}, ${round(this.y, 2)}).` );\n    }\n\n    beAt(left, top) {\n        this.lastPosition = {\n            \"left\": left,\n            \"top\" : top\n        };\n    }\n\n    beginHole() {\n        this.holy = true;\n        const paddedHoleSize = this.randomPaddedHoleSize();\n        const paddedHoleDuration = distanceToDuration(paddedHoleSize, this.velocity);\n        this.holeTimer = setTimeout(this.endHole.bind(this), paddedHoleDuration);\n    }\n\n    endHole() {\n        this.holy = false;\n        const paddedHoleInterval = this.randomPaddedHoleInterval();\n        const paddedHoleIntervalDuration = distanceToDuration(paddedHoleInterval, this.velocity);\n        this.holeTimer = setTimeout(this.beginHole.bind(this), paddedHoleIntervalDuration);\n    }\n\n    startCreatingHoles() {\n        this.beginHole();\n    }\n\n    enqueueDraw() {\n        this.queuedDraws.enqueue({ \"x\": this.x, \"y\": this.y });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Player.js","import { Dialog } from \"./Dialog.js\";\n\nexport class ConfirmationDialog extends Dialog {\n    constructor(question, callback) {\n        if (!(callback instanceof Function)) {\n            throw new TypeError(`callback must be a function (found ${callback}).`);\n        }\n        super(question);\n        this.callback = callback;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/ConfirmationDialog.js","import { isString } from \"./utilities.js\";\n\nexport class Dialog {\n    constructor(text) {\n        if (!isString(text)) {\n            throw new TypeError(`text must be a string (found ${text}).`);\n        }\n        this.text = text;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/Dialog.js","export class Message {\n    constructor(text, styleClass) {\n        this.text = text;\n        this.class = styleClass;\n    }\n\n    toHTMLElement() {\n    \tconst p = document.createElement(\"p\");\n    \tp.innerHTML = this.text;\n    \tp.classList.add(this.class);\n    \tp.classList.add(\"message\");\n    \treturn p;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/Message.js","import { Preference } from \"./Preference.js\";\n\nexport class BooleanPreference extends Preference {\n    constructor(data) {\n        super(data);\n        if (!(data.default === true || data.default === false)) {\n            super.invalidValue(data.default);\n        }\n    }\n\n    isValidValue(value) {\n        return value === true || value === false;\n    }\n\n    static stringify(value) {\n        return value.toString();\n    }\n\n    static parse(stringifiedValue) {\n        return stringifiedValue === \"true\";\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/preferences/BooleanPreference.js","import { Preference } from \"./Preference.js\";\nimport { MultichoicePreferenceOption } from \"./MultichoicePreferenceOption.js\";\n\nexport class MultichoicePreference extends Preference {\n    constructor(data) {\n        if (!isArray(data.options)) {\n            throw new TypeError(`options must be an array (found ${data.options} for preference '${data.key}').`);\n        }\n        if (!hasMultipleEntries(data.options)) {\n            throw new TypeError(`options must have a length greater than 1 (was ${data.options.length} for preference '${data.key}').`);\n        }\n        super(data);\n\n        try {\n            this.options = data.options.map(option => new MultichoicePreferenceOption(option.key, option.label));\n        } catch(e) {\n            throw new TypeError(`The list of options for preference '${data.key}' was malformed: ${e.message}`);\n        }\n\n        if (!this.isValidValue(data.default)) {\n            super.invalidValue(data.default);\n        }\n\n        function isArray(options) {\n            return options instanceof Array;\n        }\n\n        function hasMultipleEntries(options) {\n            return options.length > 1;\n        }\n    }\n\n    isValidValue(value) {\n        return this.options.some(option => option.key === value);\n    }\n\n    static stringify(value) {\n        return value;\n    }\n\n    static parse(stringifiedValue) {\n        return stringifiedValue;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/preferences/MultichoicePreference.js","import { Preference } from \"./Preference.js\";\nimport { isNumber } from \"./PreferencesUtilities.js\";\n\nexport class RangePreference extends Preference {\n    constructor(data) {\n        if (!isNumber(data.min) || !isNumber(data.max)) {\n            throw new TypeError(`min and max must be numbers (found ${data.min} and ${data.max} for preference '${data.key}').`);\n        } else if (data.min > data.max) {\n            throw new TypeError(`min cannot be greater than max (found ${data.min} and ${data.max} for preference '${data.key}', respectively).`);\n        }\n        super(data);\n        this.min = data.min;\n        this.max = data.max;\n        if (!this.isValidValue(data.default)) {\n            super.invalidValue(data.default)\n        }\n    }\n\n    isValidValue(value) {\n        return isNumber(value) && value >= this.min && value <= this.max;\n    }\n\n    static stringify(value) {\n        return value.toString();\n    }\n\n    static parse(stringifiedValue) {\n        return parseFloat(stringifiedValue);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/preferences/RangePreference.js","import { Preference } from \"./lib/preferences/Preference.js\";\nimport { BooleanPreference } from \"./lib/preferences/BooleanPreference.js\";\nimport { RangePreference } from \"./lib/preferences/RangePreference.js\";\nimport { IntegerRangePreference } from \"./lib/preferences/IntegerRangePreference.js\";\nimport { MultichoicePreference } from \"./lib/preferences/MultichoicePreference.js\";\n\nimport { Dialog } from \"./lib/Dialog.js\";\nimport { ConfirmationDialog } from \"./lib/ConfirmationDialog.js\";\n\nimport { byID, flush, isHTMLElement, log, logWarning, logError, KEY, Keyboard } from \"./lib/utilities.js\";\nimport TEXT from \"./locales/Zatacka.en_US.js\";\nimport STRINGS from \"./strings.js\";\n\nexport function GUIController(cfg) {\n\n    const config = cfg;\n    const lobby = byID(\"lobby\");\n    const controls = byID(\"controls\");\n    const canvas_main = byID(\"canvas_main\");\n    const canvas_overlay = byID(\"canvas_overlay\");\n    const left = byID(\"left\");\n    const scoreboard = byID(\"scoreboard\");\n    const results = byID(\"results\");\n    const KONEC_HRY = byID(\"KONEC_HRY\");\n    const messagesContainer = byID(\"messages\");\n    // const settingsContainer = byID(\"settings\");\n    const dialogsOverlay = byID(\"dialogs\");\n    const settingsForm = byID(\"settings-form\");\n\n    const ORIGINAL_LEFT_WIDTH = left.offsetWidth;\n    const MULTICHOICE_LABEL_MAX_LENGTH_FOR_HALFWIDTH_FIELDSET = 20; // More characters than this will result in a full-width div/fieldset.\n    const FLOAT_RANGE_PREFERENCE_STEP = 0.01;\n\n    const BUTTON_TAG_NAME = \"button\";\n    const BUTTON_NODE_CLASS = HTMLButtonElement;\n\n    const LABEL_ALERT_OK = TEXT.label_button_alert_ok;\n    const LABEL_CONFIRM_YES = TEXT.label_button_confirm_yes;\n    const LABEL_CONFIRM_NO = TEXT.label_button_confirm_no;\n\n    let showingSettings = false;\n    let currentMessages = [];\n    let queuedDialogs = [];\n    let currentDialogWithBox = null;\n\n    class DialogWithBox {\n        constructor(dialog, box) {\n            this.dialog = dialog;\n            this.box = box;\n        }\n    }\n\n\n    // PRIVATE FUNCTIONS\n\n    function hideLobby() {\n        log(\"Hiding lobby.\");\n        lobby.classList.add(STRINGS.class_hidden);\n    }\n\n    function showLobby() {\n        log(\"Showing lobby.\");\n        lobby.classList.remove(STRINGS.class_hidden);\n    }\n\n    function showDialogsOverlay() {\n        dialogsOverlay.classList.remove(STRINGS.class_hidden);\n    }\n\n    function hideDialogsOverlay() {\n        dialogsOverlay.classList.add(STRINGS.class_hidden);\n    }\n\n    function isLobbyEntry(element) {\n        return isHTMLElement(element) && element.children.length >= 2;\n    }\n\n    function isButton(element) {\n        return element instanceof BUTTON_NODE_CLASS;\n    }\n\n    function showDialogRightAway(dialog) {\n        const dialogBox = dialogHTMLElement(dialog);\n        currentDialogWithBox = new DialogWithBox(dialog, dialogBox);\n        setTemporaryCursorVisibility(true);\n        showDialogsOverlay();\n        dialogsOverlay.appendChild(dialogBox);\n        // A dialog should have its last button focused:\n        dialogBox.querySelector(\"button:last-of-type\").focus();\n    }\n\n    function currentDialogClosed() {\n        currentDialogWithBox.box.remove();\n        currentDialogWithBox = null;\n        if (anyQueuedDialogs()) {\n            // There is at least one dialog waiting. Show it:\n            showDialogRightAway(queuedDialogs.shift());\n        } else {\n            // No more dialogs. Restore:\n            setTemporaryCursorVisibility(false);\n            hideDialogsOverlay();\n        }\n    }\n\n    function anyQueuedDialogs() {\n        return queuedDialogs.length > 0;\n    }\n\n    function escapeShouldCloseCurrentDialog() {\n        return currentDialogWithBox.dialog instanceof ConfirmationDialog;\n    }\n\n    function dialogHTMLElementBoilerplate(text) {\n        const dialogBox = document.createElement(\"div\");\n        dialogBox.classList.add(STRINGS.class_dialog);\n        const label = document.createElement(\"p\");\n        label.textContent = text;\n        dialogBox.appendChild(label);\n        return dialogBox;\n    }\n\n    function alertDialogHTMLElement(dialog) {\n        const alertDialogBox = dialogHTMLElementBoilerplate(dialog.text);\n        alertDialogBox.classList.add(STRINGS.class_dialog_alert);\n        const buttonOK = document.createElement(\"button\");\n        buttonOK.textContent = LABEL_ALERT_OK;\n        alertDialogBox.appendChild(buttonOK);\n\n        function alertDialogEventHandler() {\n            currentDialogClosed();\n        }\n        // Event listener:\n        buttonOK.addEventListener(\"click\", alertDialogEventHandler);\n\n        return alertDialogBox;\n    }\n\n    function confirmationDialogHTMLElement(confirmationDialog) {\n        const confirmationDialogBox = dialogHTMLElementBoilerplate(confirmationDialog.text);\n        confirmationDialogBox.classList.add(STRINGS.class_dialog_confirmation);\n        const buttonYes = document.createElement(\"button\");\n        buttonYes.textContent = LABEL_CONFIRM_YES;\n        const buttonNo  = document.createElement(\"button\");\n        buttonNo.textContent = LABEL_CONFIRM_NO;\n        confirmationDialogBox.appendChild(buttonYes);\n        confirmationDialogBox.appendChild(buttonNo);\n\n        function confirmationDialogEventHandler(response) {\n            return () => {\n                currentDialogClosed();\n                if (response === true) {\n                    confirmationDialog.callback();\n                }\n            };\n        }\n        // Event listeners:\n        buttonYes.addEventListener(\"click\", confirmationDialogEventHandler(true));\n        buttonNo.addEventListener(\"click\", confirmationDialogEventHandler(false));\n\n        return confirmationDialogBox;\n    }\n\n    function dialogHTMLElement(dialog) {\n        if (dialog instanceof ConfirmationDialog) {\n            return confirmationDialogHTMLElement(dialog);\n        } else if (dialog instanceof Dialog) {\n            return alertDialogHTMLElement(dialog);\n        }\n        throw new TypeError(`${dialog} is not a valid dialog.`);\n    }\n\n    function resetScoreboardEntry(entry) {\n        entry.classList.remove(\"active\");\n    }\n\n    function resetScoreboard() {\n        Array.from(scoreboard.children).forEach(resetScoreboardEntry);\n    }\n\n    function resetResults() {\n        Array.from(results.children).forEach(resetScoreboardEntry);\n    }\n\n    function setCursorBehavior(behavior) {\n        switch (behavior) {\n            case STRINGS.cursor_visible:\n                document.body.classList.remove(STRINGS.class_nocursor);\n                break;\n            case STRINGS.cursor_hidden:\n                document.body.classList.add(STRINGS.class_nocursor);\n                break;\n            default:\n                logError(`Cannot set cursor behavior to '${behavior}'.`);\n        }\n    }\n\n    function setTemporaryCursorVisibility(tempCursorActive) {\n        if (tempCursorActive) {\n            document.body.classList.add(STRINGS.class_tempcursor);\n        } else {\n            document.body.classList.remove(STRINGS.class_tempcursor);\n        }\n    }\n\n    function settingsEntryShouldBeHalfWidth(preference) {\n        if (preference instanceof MultichoicePreference) {\n            const labels = preference.options.map(option => option.label);\n            const longestValueLabel = labels.reduce((acc, current) => current.length > acc.length ? current : acc);\n            return longestValueLabel.length <= MULTICHOICE_LABEL_MAX_LENGTH_FOR_HALFWIDTH_FIELDSET;\n        } else {\n            return false;\n        }\n    }\n\n    function settingsEntryHTMLElement(preference, preferenceValue) {\n        if (!(preference instanceof Preference)) {\n            throw new TypeError(`${preference} is not a preference.`);\n        }\n\n        // Common\n        const div = document.createElement(\"div\");\n        const label = document.createElement(\"label\");\n        label.textContent = preference.label;\n        label.setAttribute(\"for\", `${STRINGS.html_name_preference_prefix}${preference.key}`);\n        const description = document.createElement(\"aside\");\n        description.textContent = preference.description;\n        description.classList.add(STRINGS.class_description);\n\n        // Boolean\n        if (preference instanceof BooleanPreference) {\n            const input = document.createElement(\"input\");\n            input.type = \"checkbox\";\n            input.dataset.key = preference.key;\n            input.id = STRINGS.html_name_preference_prefix + preference.key;\n            input.checked = preferenceValue === true;\n            div.appendChild(input);\n            div.appendChild(label);\n        }\n\n        // Multichoice\n        else if (preference instanceof MultichoicePreference) {\n            const fieldset = document.createElement(\"fieldset\");\n            const legend = document.createElement(\"legend\");\n            legend.textContent = preference.label;\n            fieldset.appendChild(legend);\n            preference.options.forEach(option => {\n                const id = STRINGS.html_name_preference_prefix + preference.key + \"-\" + option.key;\n                const radioButton = document.createElement(\"input\");\n                radioButton.type = \"radio\";\n                radioButton.id = id;\n                radioButton.name = STRINGS.html_name_preference_prefix + preference.key;\n                radioButton.value = option.key;\n                radioButton.dataset.key = preference.key;\n                radioButton.checked = preferenceValue === option.key;\n                const radioButtonLabel = document.createElement(\"label\");\n                radioButtonLabel.textContent = option.label;\n                radioButtonLabel.setAttribute(\"for\", id);\n                fieldset.appendChild(radioButton);\n                fieldset.appendChild(radioButtonLabel);\n            });\n            div.appendChild(fieldset);\n            if (settingsEntryShouldBeHalfWidth(preference)) {\n                div.classList.add(STRINGS.class_half_width);\n            }\n        }\n\n        // Range\n        else if (preference instanceof RangePreference) {\n            const isIntegerRange = preference instanceof IntegerRangePreference;\n            div.appendChild(label);\n            const input = document.createElement(\"input\");\n            input.type = \"number\";\n            input.dataset.key = preference.key;\n            input.dataset.numberType = isIntegerRange ? STRINGS.pref_number_type_integer : STRINGS.pref_number_type_float;\n            input.name = STRINGS.html_name_preference_prefix + preference.key;\n            input.setAttribute(\"step\", isIntegerRange ? 1 : FLOAT_RANGE_PREFERENCE_STEP);\n            input.setAttribute(\"min\", preference.min);\n            input.setAttribute(\"max\", preference.max);\n            input.value = preferenceValue;\n            div.appendChild(input);\n        }\n\n        div.appendChild(description);\n        return div;\n    }\n\n\n    // PUBLIC API\n\n    function keyPressed(event, callback) {\n        if (isShowingDialog()) {\n            const currentlyFocusedButton = currentDialogWithBox.box.querySelector(`${BUTTON_TAG_NAME}:focus`);\n            const shiftIsDown = Keyboard.isDown(KEY.SHIFT);\n            let previousButton, nextButton;\n            if (isButton(currentlyFocusedButton)) {\n                previousButton = isButton(currentlyFocusedButton.previousSibling) ? currentlyFocusedButton.previousSibling : null;\n                nextButton = isButton(currentlyFocusedButton.nextSibling) ? currentlyFocusedButton.nextSibling : null;\n            }\n            switch (event.keyCode) {\n                case KEY.SPACE:\n                case KEY.ENTER:\n                    // Necessary because buttons do not automatically react to Space until keyup, making them feel sluggish compared to when Enter is used.\n                    if (isButton(currentlyFocusedButton)) {\n                        currentlyFocusedButton.click();\n                    }\n                    break;\n                case KEY.ESCAPE:\n                    if (escapeShouldCloseCurrentDialog()) {\n                        currentDialogClosed();\n                    }\n                    break;\n                case KEY.TAB:\n                    event.preventDefault();\n                    if (shiftIsDown) {\n                        if (isButton(previousButton)) {\n                            previousButton.focus();\n                        }\n                    } else if (isButton(nextButton)) {\n                        nextButton.focus();\n                    }\n                    break;\n                case KEY.LEFT_ARROW:\n                    if (isButton(previousButton)) {\n                        previousButton.focus();\n                    }\n                    break;\n                case KEY.RIGHT_ARROW:\n                    if (isButton(nextButton)) {\n                        nextButton.focus();\n                    }\n                    break;\n                default:\n                    callback(event);\n            }\n        } else {\n            callback(event);\n        }\n    }\n\n    function showDialog(dialog) {\n        if (isShowingDialog()) {\n            queuedDialogs.push(dialog);\n        } else {\n            showDialogRightAway(dialog);\n        }\n    }\n\n    function isShowingDialog() {\n        return currentDialogWithBox !== null;\n    }\n\n    function setEdgePadding(padding) {\n        left.style.width = `${ORIGINAL_LEFT_WIDTH + padding}px`;\n    }\n\n    function setBlurryScaling(allowed) {\n        (document.body.classList[allowed === true ? \"add\" : \"remove\"])(STRINGS.class_blurry);\n    }\n\n    function playerReady(id) {\n        const index = id - 1;\n        const entry = controls.children[index];\n        if (!isLobbyEntry(entry)) {\n            logWarning(`Cannot mark player ${id} as ready because controls.children[${index}] (${controls.children[index]}) is not a valid lobby entry.`);\n        } else {\n            entry.children[1].classList.add(STRINGS.class_active);\n        }\n    }\n\n    function playerUnready(id) {\n        const index = id - 1;\n        const entry = controls.children[index];\n        if (!isLobbyEntry(entry)) {\n            logWarning(`Cannot mark player ${id} as unready because controls.children[${index}] (${controls.children[index]}) is not a valid lobby entry.`);\n        } else {\n            entry.children[1].classList.remove(STRINGS.class_active);\n        }\n    }\n\n    function allPlayersUnready() {\n        for (let id = 1; id <= controls.children.length; id++) {\n            playerUnready(id);\n        }\n    }\n\n    function gameStarted() {\n        hideLobby();\n    }\n\n    function gameQuit() {\n        hideKonecHry();\n        showLobby();\n        clearMessages();\n        resetScoreboard();\n        resetResults();\n        allPlayersUnready();\n        setCursorBehavior(STRINGS.cursor_visible);\n    }\n\n    function konecHry() {\n        showKonecHry();\n        resetScoreboard();\n    }\n\n    function showKonecHry() {\n        KONEC_HRY.classList.remove(STRINGS.class_hidden);\n    }\n\n    function hideKonecHry() {\n        KONEC_HRY.classList.add(STRINGS.class_hidden);\n    }\n\n    function showMessage(message) {\n        if (!currentMessages.includes(message)) {\n            currentMessages.push(message);\n        }\n        updateMessages(currentMessages);\n    }\n\n    function showSettings() {\n        showingSettings = true;\n        settings.classList.remove(STRINGS.class_hidden);\n    }\n\n    function hideSettings() {\n        showingSettings = false;\n        settings.classList.add(STRINGS.class_hidden);\n    }\n\n    function isShowingSettings() {\n        return showingSettings;\n    }\n\n    function updateSettingsForm(preferencesWithData) {\n        flush(settingsForm);\n        let settingsEntries = preferencesWithData.map((preferenceWithData) => settingsEntryHTMLElement(preferenceWithData.preference, preferenceWithData.value));\n        // Add special class to half-width divs on the right hand side:\n        let consecutiveHalfWidthDivs = 0;\n        for (let i = 0; i < settingsEntries.length; i++) {\n            const currentEntry = settingsEntries[i];\n            if (currentEntry.classList.contains(STRINGS.class_half_width)) {\n                consecutiveHalfWidthDivs++;\n                if (consecutiveHalfWidthDivs % 2 === 0) {\n                    // Even number of consecutive half-width divs, so this one will be on the right hand side.\n                    currentEntry.classList.add(STRINGS.class_right_hand_side);\n                }\n            } else {\n                consecutiveHalfWidthDivs = 0;\n            }\n        }\n        settingsEntries.forEach((settingsEntry) => {\n            settingsForm.appendChild(settingsEntry);\n        });\n    }\n\n    function parseSettingsForm() {\n        const newSettings = [];\n        // <input> elements:\n        const inputs = settingsForm.querySelectorAll(\"input\");\n        Array.from(inputs).forEach((input) => {\n            if (input.type === \"checkbox\") {\n                // checkbox\n                newSettings.push({ key: input.dataset.key, value: input.checked });\n            } else if (input.type === \"radio\") {\n                // radio\n                if (input.checked === true) {\n                    newSettings.push({ key: input.dataset.key, value: input.value });\n                }\n            } else if (input.type === \"number\") {\n                // number\n                newSettings.push({ key: input.dataset.key, value: (input.dataset.numberType === STRINGS.pref_number_type_integer ? parseInt : parseFloat)(input.value) });\n            } else {\n                // text\n                newSettings.push({ key: input.dataset.key, value: input.value.toString() });\n            }\n        });\n        // <select> elements:\n        const selects = settingsForm.querySelectorAll(\"select\");\n        Array.from(selects).forEach((select) => {\n            newSettings.push({ key: select.dataset.key, value: select.options[select.selectedIndex].value });\n        });\n        return newSettings;\n    }\n\n    function hideMessage(message) {\n        currentMessages = currentMessages.filter(msg => msg !== message);\n        updateMessages(currentMessages);\n    }\n\n    function updateMessages(messages) {\n        if (!isHTMLElement(messagesContainer)) {\n            logWarning(`Cannot update messages because ${messagesContainer} is not an HTML element.`);\n        } else {\n            flush(messagesContainer);\n            messages.forEach((message) => {\n                messagesContainer.insertBefore(message.toHTMLElement(), null);\n            });\n        }\n    }\n\n    function clearMessages() {\n        currentMessages = [];\n        updateMessages(currentMessages);\n    }\n\n    function setMessageMode(mode) {\n        log(`Setting message mode to ${mode}.`);\n        switch (mode) {\n            case STRINGS.pref_value_hints_warnings_only:\n                messagesContainer.classList.remove(STRINGS.class_hints_none);\n                messagesContainer.classList.add(STRINGS.class_hints_warnings_only);\n                break;\n            case STRINGS.pref_value_hints_none:\n                messagesContainer.classList.remove(STRINGS.class_hints_warnings_only);\n                messagesContainer.classList.add(STRINGS.class_hints_none);\n                break;\n            default:\n                messagesContainer.classList.remove(STRINGS.class_hints_warnings_only);\n                messagesContainer.classList.remove(STRINGS.class_hints_none);\n        }\n    }\n\n    function updateBoard(board, id, newScore) {\n        if (!isHTMLElement(board)) {\n            logWarning(`Cannot update any entry in ${board} because it is not an HTML element.`);\n        } else {\n            const entry = board.children[id-1];\n            if (!isHTMLElement(entry)) {\n                logWarning(`Cannot update score of player ${id} because ${entry} is not an HTML element.`);\n            } else {\n                // The entry is an HTML element; let's update it!\n                const digitClassFactory = digit => \"d\"+digit;\n                const createDigit = () => document.createElement(\"div\");\n                // Turn 528 into [\"d5\", \"d2\", \"d8\"]:\n                const newScoreDigitClasses = newScore.toString().split(\"\").map(digitClassFactory);\n                // Remove everything from the entry element before we insert new digits:\n                flush(entry);\n                entry.classList.add(\"active\");\n                newScoreDigitClasses.forEach((digitClass, index) => {\n                    let digitElement = createDigit(); // A completely clean element ...\n                    digitElement.classList.add(newScoreDigitClasses[index]); // ... that now has a digit class.\n                    entry.appendChild(digitElement);\n                });\n            }\n        }\n    }\n\n    function updateScoreOfPlayer(id, newScore) {\n        updateBoard(scoreboard, id, newScore);\n        updateBoard(results, id, newScore);\n    }\n\n    return {\n        keyPressed,\n        playerReady,\n        playerUnready,\n        gameStarted,\n        gameQuit,\n        konecHry,\n        showDialog,\n        isShowingDialog,\n        showSettings,\n        hideSettings,\n        isShowingSettings,\n        updateSettingsForm,\n        parseSettingsForm,\n        updateScoreOfPlayer,\n        updateMessages,\n        showMessage,\n        hideMessage,\n        clearMessages,\n        setMessageMode,\n        setCursorBehavior,\n        setBlurryScaling,\n        setEdgePadding\n    };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/GUIController.js","import MainLoop from \"./lib/mainloop.min.js\";\nimport { Player } from \"./Player.js\";\nimport { Round } from \"./Round.js\";\nimport { isInt, log, logWarning, logError, randomFloat, round, forfor, sameAbs, normalizeAngle } from \"./lib/utilities.js\";\n\nexport class Game {\n    constructor(config, renderer, guiController) {\n        // Class variables:\n        this.constructor.PRACTICE = \"practice\";\n        this.constructor.COMPETITIVE = \"competitive\";\n        this.constructor.DEFAULT_MODE = this.constructor.PRACTICE;\n        this.constructor.DEFAULT_TARGET_SCORE = 10;\n        this.constructor.MAX_TARGET_SCORE = 1000;\n        this.constructor.MAX_PLAYERS = 255; // since we use a Uint8Array\n        this.constructor.MAX_QUOTA_THAT_SPAWN_CIRCLES_MAY_FILL = 0.5; // out of available spawn area\n        this.constructor.DESIRED_MINIMUM_SPAWN_DISTANCE_TURNING_RADIUS_FACTOR = 1;\n        this.constructor.KONEC_HRY = \"KONEC HRY!\";\n\n        if (renderer === undefined) {\n            throw new TypeError(\"Cannot create a Game with no renderer.\");\n        } else if (!this.constructor.isRenderer(renderer)) {\n            throw new TypeError(`${renderer} is not a valid renderer.`);\n        }\n\n        if (guiController === undefined) {\n            throw new TypeError(\"Cannot create a Game with no GUI controller.\");\n        } else if (!this.constructor.isGUIController(guiController)) {\n            throw new TypeError(`${guiController} is not a valid GUI controller.`);\n        }\n\n        // Instance variables:\n        this.config = config;\n        this.width = config.canvas.width;\n        this.height = config.canvas.height;\n        this.pixels = null; // The actual array is created in start(), because the canvas width and height may have changed by then.\n        this.players = [];\n        this.rounds = [];\n        this.renderer = renderer;\n        this.guiController = guiController;\n        this.mode = this.constructor.DEFAULT_MODE;\n        this.preventSpawnkill = config.preventSpawnkill;\n        this.totalNumberOfTicks = 0;\n        this.targetScore = null;\n        this.initMainLoop();\n        this.started = false;\n        this.ended = false;\n        this.proceedHintTimer = null;\n        this.quitHintTimer = null;\n    }\n\n    static isRenderer(obj) {\n        // TODO\n        return obj !== undefined;\n    }\n\n    static isGUIController(obj) {\n        // TODO\n        return obj !== undefined;\n    }\n\n    static isAlive(player) {\n        return player.isAlive();\n    }\n\n    static calculateTargetScore(numberOfPlayers) {\n        // Default target score is (n-1) * 10 for n players:\n        return (numberOfPlayers - 1) * 10;\n    }\n\n    edgeOfSquare(coordinate) {\n        return Math.round(coordinate - this.config.thickness/2);\n    }\n\n    maxPlayers() {\n        return this.constructor.MAX_PLAYERS;\n    }\n\n    maxTicksBetweenDraws() {\n        return Math.max(Math.floor(this.config.tickrate/this.config.speed), 1);\n    }\n\n    // Computes the angle change for one tick when turning, in radians:\n    computeAngleChange() {\n        return this.config.speed / (this.config.tickrate * this.config.turningRadius);\n    }\n\n    computeSpawnArea() {\n        return {\n            x_min: this.config.spawnMargin,\n            y_min: this.config.spawnMargin,\n            x_max: this.width - this.config.spawnMargin,\n            y_max: this.height - this.config.spawnMargin\n        };\n    }\n\n    computeFrontCornerPixel(edge, dir) {\n        let t = this.config.thickness;\n        let cf = 100;\n        return (cf*edge + cf*(t-1)/2 + cf*dir*(t-1)/2) / cf;\n    }\n\n    computeFrontEdgePixel(edge, dir_parallel, dir_perpendicular, i) {\n        let t = this.config.thickness;\n        return edge + Math.abs(dir_parallel)*(t-1)/2 + dir_parallel*(t-1)/2 + Math.abs(dir_perpendicular)*i;\n    }\n\n    computeHitbox(player, left, top) {\n        let hitboxPixels = [];\n        let lastPosition = player.getLastPosition();\n        let dir_horizontal = left - lastPosition.left; // positive => going right; negative => going left\n        let dir_vertical   = top  - lastPosition.top;  // positive => going down;  negative => going up\n        if (sameAbs(dir_horizontal, dir_vertical)) {\n            // \"45 degree\" draw\n            let frontPixel_left = this.computeFrontCornerPixel(left, dir_horizontal);\n            let frontPixel_top  = this.computeFrontCornerPixel(top, dir_vertical);\n            hitboxPixels.push(this.pixelAddress(frontPixel_left, frontPixel_top));\n        } else {\n            // \"90 degree\" draw\n            for (let i = 0; i < this.config.thickness; i++) {\n                let frontPixel_left = this.computeFrontEdgePixel(left, dir_horizontal, dir_vertical, i);\n                let frontPixel_top = this.computeFrontEdgePixel(top, dir_vertical, dir_horizontal, i);\n                hitboxPixels.push(this.pixelAddress(frontPixel_left, frontPixel_top));\n            }\n        }\n        return hitboxPixels;\n    }\n\n    desiredMinimumSpawnDistance() { // to closest opponent\n        // This is calculated by multiplying the turning radius with a constant factor and then adding the Kurve thickness.\n        const turningRadiusPart = this.config.turningRadius * this.constructor.DESIRED_MINIMUM_SPAWN_DISTANCE_TURNING_RADIUS_FACTOR;\n        return round(this.config.thickness + turningRadiusPart, 2);\n    }\n\n    safeMinimumSpawnDistance() { // to closest opponent, without risking infinite or too much sampling\n        const spawnAreaCoordinates = this.computeSpawnArea();\n        const availableSpawnArea = (spawnAreaCoordinates.x_max - spawnAreaCoordinates.x_min) * (spawnAreaCoordinates.y_max - spawnAreaCoordinates.y_min);\n        const maximumSafeDistance = Math.sqrt( this.constructor.MAX_QUOTA_THAT_SPAWN_CIRCLES_MAY_FILL * availableSpawnArea / (this.getNumberOfPlayers() * Math.PI) );\n        return Math.min(\n            this.desiredMinimumSpawnDistance(),\n            round(maximumSafeDistance, 2)\n        );\n    }\n\n    isSafeSpawnPosition(pos) {\n        function distanceBetween(pos1, pos2) {\n            return Math.sqrt(Math.pow(pos2.x - pos1.x, 2) + Math.pow(pos2.y - pos1.y, 2));\n        }\n        for (let i = 0; i < this.players.length; i++) {\n            const playerPos = { x: this.players[i].x, y: this.players[i].y };\n            if (distanceBetween(playerPos, pos) < this.safeMinimumSpawnDistance()) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    safeSpawnPosition() {\n        let safePos;\n        do {\n            safePos = this.randomSpawnPosition();\n        } while (!this.isSafeSpawnPosition(safePos));\n        return safePos;\n    }\n\n    randomSpawnPosition() {\n        let spawnArea = this.computeSpawnArea();\n        return {\n            x: randomFloat(spawnArea.x_min, spawnArea.x_max),\n            y: randomFloat(spawnArea.y_min, spawnArea.y_max)\n        };\n    }\n\n    randomSpawnAngle() {\n        return randomFloat(this.config.minSpawnAngle, this.config.maxSpawnAngle);\n    }\n\n    pixelAddress(x, y) {\n        return y*this.width + x;\n    }\n\n    pixelAddressToCoordinates(addr) {\n        let x = addr % this.width;\n        let y = (addr - x) / this.width;\n        return \"(\"+x+\", \"+y+\")\";\n    }\n\n    \n    // GETTERS\n\n    getMode() {\n        return this.mode;\n    }\n\n    getTargetScore() {\n        return this.targetScore;\n    }\n\n    getPlayers() {\n        return this.players;\n    }\n\n    // Returns the player with the specified ID, or undefined if no such player exists:\n    getPlayerByID(id) {\n        return this.players.find((player) => player.hasID(id));\n    }\n\n    getLivePlayers() {\n        const isAlive = this.constructor.isAlive;\n        return this.players.filter(isAlive);\n    }\n\n    getNumberOfPlayers() {\n        return this.players.length;\n    }\n\n    getNumberOfLivePlayers() {\n        return this.getLivePlayers().length;\n    }\n\n    getScoreOfPlayer(id) {\n        const accumulateScore = (sum, round) => sum + round.getSuccessOfPlayer(id);\n        return this.rounds.reduce(accumulateScore, 0);\n    }\n\n    getCurrentRound() {\n        return this.rounds[this.rounds.length - 1];\n    }\n\n\n    // SETTERS\n\n    setMode(mode) {\n        if (mode === this.constructor.COMPETITIVE || mode === this.constructor.PRACTICE) {\n            log(`Setting game mode to ${mode}.`);\n            this.mode = mode;\n        } else {\n            logError(`${mode} is not a valid game mode. Keeping ${this.getMode()}.`);\n        }\n    }\n\n    setTargetScore(score) {\n        let ts = this.constructor.DEFAULT_TARGET_SCORE;\n        let mts = this.constructor.MAX_TARGET_SCORE;\n        // Neither floats nor negative numbers are allowed:\n        if (isInt(score) && score > 0) {\n            // Check if the desired target score is allowed:\n            if (score > mts) {\n                // It is too high. Fall back to max value:\n                logWarning(`${score} is larger than the maximum allowed target score of ${mts}. Falling back to ${mts}.`);\n                ts = mts;\n            } else {\n                // The desired target score is OK!\n                log(`Setting target score to ${score}.`);\n                ts = score;\n            }\n        } else {\n            logWarning(`${score} is not a valid target score. Defaulting to ${ts}.`);\n        }\n        this.targetScore = ts;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.renderer.setSize(width, height);\n    }\n\n    setPreventSpawnkill(mode) {\n        this.preventSpawnkill = mode;\n    }\n\n\n    // CHECKERS\n\n    isStarted() {\n        return this.started;\n    }\n\n    isEnded() {\n        return this.ended;\n    }\n\n    /** Returns true if a round is over (including when KONEC HRY is being shown). */\n    isPostRound() {\n        return this.getCurrentRound().getResults().length === this.getNumberOfPlayers();\n    }\n\n    isLive() {\n        if (this.isCompetitive()) {\n            return this.getNumberOfLivePlayers() > 1;\n        } else {\n            return this.getNumberOfLivePlayers() > 0;\n        }\n    }\n\n    // Caution: Returns true if called during the spawn procedure, since it only checks whether the game is live or not.\n    isRoundOver() {\n        return !this.isLive();\n    }\n\n    isGameOver() {\n        const hasReachedTargetScore = player => this.getScoreOfPlayer(player.getID()) >= this.getTargetScore();\n        return !this.isLive() && this.isCompetitive() && this.players.some(hasReachedTargetScore);\n    }\n\n    isCompetitive() {\n        return this.getMode() === this.constructor.COMPETITIVE;\n    }\n\n    isOccupiedPixelAddress(addr) {\n        return this.pixels[addr] > 0;\n    }\n\n    isCrashing(player, left, top) {\n        const hitboxPixels = this.computeHitbox(player, left, top);\n        return hitboxPixels.some(this.isOccupiedPixelAddress, this);\n    }\n\n    /**\n     * Checks whether a draw at the specified coordinates is inside the field.\n     * @param {Number} left The x coordinate of the left edge of the draw.\n     * @param {Number} top  The y coordinate of the top edge of the draw.\n     */\n    isOnField(left, top) {\n        return left >= 0\n            && top  >= 0\n            && left+this.config.thickness <= this.width\n            && top +this.config.thickness <= this.height;\n    }\n\n    /** \n     * Checks whether there is a player with a specific ID in the game.\n     * @param {Number} id The ID to check for.\n     */\n    hasPlayer(id) {\n        return Player.isPlayer(this.getPlayerByID(id));\n    }\n\n\n    // DOERS\n\n    /** \n     * Adds a player to the game.\n     * @param {Player} player The player to add.\n     */\n    addPlayer(player) {\n        const maxPlayers = this.maxPlayers();\n        if (!Player.isPlayer(player)) {\n            throw new TypeError(`Cannot add ${player} to the game because it is not a player.`);\n        } else if (player.getID() > maxPlayers) {\n            throw new RangeError(`Cannot add ${player} to the game because player IDs larger than ${maxPlayers} are not supported.`);\n        } else if (this.hasPlayer(player.getID())) {\n            logWarning(`Not adding ${player} to the game because there is already a player with ID ${player.getID()}.`);\n        } else {\n            log(`${player} ready!`);\n            this.players.push(player);\n            player.setMaxSpeed(this.config.speed);\n            this.GUI_playerReady(player.getID());\n        }\n    }\n\n    /** \n     * Removes a player from the game.\n     * @param {Number} id The ID of the player to remove.\n     */\n    removePlayer(id) {\n        const playerToRemove = this.getPlayerByID(id);\n        // Notify GUI iff the player exists:\n        if (Player.isPlayer(playerToRemove)) {\n            log(`${playerToRemove} unready!`);\n            this.GUI_playerUnready(id);\n        }\n        // Update this.players:\n        this.players = this.players.filter((player) => player !== playerToRemove);\n    }\n\n    /** Starts the game. */\n    start() {\n        if (this.isCompetitive()) {\n            this.setTargetScore(this.constructor.calculateTargetScore(this.getNumberOfPlayers()));\n            this.players.forEach((player) => {\n                this.GUI_updateScoreOfPlayer(player.getID(), 0);\n            });\n        }\n        log(\"Starting game!\");\n        this.GUI_gameStarted();\n        MainLoop.start();\n        this.started = true;\n        this.pixels = new Uint8Array(this.width * this.height);\n        this.beginNewRound();\n    }\n\n    pause() {\n        MainLoop.stop();\n    }\n\n    isPaused() {\n        return !MainLoop.isRunning();\n    }\n\n    resume() {\n        MainLoop.start();\n    }\n\n    /** Announce KONEC HRY, show results etc. */\n    konecHry() {\n        log(this.constructor.KONEC_HRY);\n        this.ended = true;\n        this.GUI_konecHry();\n        this.quitHintTimer = setTimeout(this.showQuitHint.bind(this), this.config.hintDelay);\n    }\n\n    quit() {\n        clearTimeout(this.quitHintTimer);\n        clearTimeout(this.proceedHintTimer);\n    }\n\n    clearField() {\n        this.pixels.fill(0);\n        this.Render_clearField();\n    }\n\n    showProceedHint() {\n        this.GUI_showMessage(this.config.messages.next);\n    }\n\n    hideProceedHint() {\n        clearTimeout(this.proceedHintTimer);\n        this.GUI_hideMessage(this.config.messages.next);\n    }\n\n    showQuitHint() {\n        this.GUI_showMessage(this.config.messages.quit);\n    }\n\n    hideQuitHint() {\n        clearTimeout(this.quitHintTimer);\n        this.GUI_hideMessage(this.config.messages.quit);\n    }\n\n    beginNewRound() {\n        this.rounds.push(new Round());\n        log(`======== ROUND ${this.rounds.length} ========`);\n        this.resetPlayers();\n        this.clearField();\n        // Sort the players by their IDs so they spawn in the correct order:\n        this.sortPlayers();\n        this.spawnAndStartPlayers();\n    }\n\n    endRound() {\n        this.stopPlayers();\n        this.proceedHintTimer = setTimeout(this.showProceedHint.bind(this), this.config.hintDelay);\n    }\n\n    sortPlayers() {\n        this.players.sort((a, b) => (a.getID() - b.getID()));\n    }\n\n    startPlayer(player) {\n        player.start();\n    }\n\n    stopPlayer(player) {\n        player.stop();\n    }\n\n    resetPlayer(player) {\n        player.reset();\n    }\n\n    /** Starts all players. */\n    startPlayers() {\n        this.players.forEach(this.startPlayer);\n    }\n\n    stopPlayers() {\n        this.players.forEach(this.stopPlayer);\n    }\n\n    resetPlayers() {\n        this.players.forEach(this.resetPlayer);\n    }\n\n    occupyPixel(x, y, id) {\n        this.pixels[this.pixelAddress(x, y)] = id;\n    }\n\n    occupy(player, left, top) {\n        let right = left + this.config.thickness;\n        let bottom = top + this.config.thickness;\n        let id = player.getID();\n        forfor(top, bottom, left, right, this.occupyPixel.bind(this), id);\n        this.Render_drawSquare(left, top, player.getColor());\n    }\n\n    flicker(player) {\n        const stopFlickering = () => {\n            clearInterval(flickerTicker);\n            let left = this.edgeOfSquare(player.x);\n            let top  = this.edgeOfSquare(player.y);\n            this.Render_drawSquare(left, top, player.getColor());\n        }\n        const self = this;\n        const left = this.edgeOfSquare(player.x);\n        const top  = this.edgeOfSquare(player.y);\n        const color = player.getColor();\n        let isVisible = false;\n        let flickerTicker = setInterval(() => {\n            if (isVisible) {\n                this.Render_clearSquare(left, top);\n            } else {\n                this.Render_drawSquare(left, top, color);\n            }\n            isVisible = !isVisible;\n        }, 1000/this.config.flickerFrequency);\n        setTimeout(stopFlickering, self.config.flickerDuration);\n    }\n\n    spawn(player, position, direction) {\n        log(`${player} spawning at (${round(position.x, 2)}, ${round(position.y, 2)}).`);\n        player.x = position.x;\n        player.y = position.y;\n        player.direction = direction;\n        const left = this.edgeOfSquare(player.x);\n        const top  = this.edgeOfSquare(player.y);\n        player.beAt(left, top);\n        this.occupy(player, left, top);\n        this.flicker(player);\n    }\n\n    /** Spawns and then starts all players. */\n    spawnAndStartPlayers() {\n        const self = this;\n        log(`Spawnkill prevention is ` + (this.preventSpawnkill\n                                       ? `enabled. No two players will spawn within ${self.safeMinimumSpawnDistance()} Kuxels of each other.`\n                                       : `disabled. Players may spawn arbitrarily close to each other.`));\n        // Spawn each player, then wait for it to finish flickering before spawning the next one:\n        (function spawnPlayer(i) {\n            if (i < self.players.length) {\n                const spawnPosition = self.preventSpawnkill ? self.safeSpawnPosition() : self.randomSpawnPosition();\n                self.spawn(self.players[i], spawnPosition, self.randomSpawnAngle());\n                setTimeout(() => spawnPlayer(++i), self.config.flickerDuration);\n            } else {\n                // All players have spawned. Start them!\n                self.startPlayers();\n            }\n        })(0);\n    }\n\n    /**\n     * Draws a specific player.\n     */\n    drawPlayer(player) {\n        const thickness = this.config.thickness;\n        while (player.isAlive() && !player.queuedDraws.isEmpty()) {\n            let color = player.getColor();\n            let lastPosition = player.getLastPosition();\n            let currentDraw = player.queuedDraws.dequeue();\n            let left = this.edgeOfSquare(currentDraw.x);\n            let top  = this.edgeOfSquare(currentDraw.y);\n            if (!player.justWasAt(left, top)) {\n                // The new position is not identical to the last one.\n                let diff_left = left - player.getLastPosition().left;\n                let diff_top  = top  - player.getLastPosition().top;\n                if (!this.isOnField(left, top)) {\n                    // The player wants to draw outside the playing field => DIE.\n                    this.death(player, \"crashed into the wall\");\n                    this.occupy(player, lastPosition.left, lastPosition.top);\n                } else if (this.isCrashing(player, left, top)) {\n                    // The player wants to draw on a spot occupied by a Kurve => DIE.\n                    this.death(player, \"crashed\");\n                    this.occupy(player, lastPosition.left, lastPosition.top);\n                } else {\n                    // The player is not dying.\n                    player.beAt(left, top);\n                    if (!player.isHoly()) {\n                        // The player is not holy, so it should draw.\n                        this.occupy(player, left, top);\n                    }\n                }\n            }\n        }\n    }\n\n    drawHead(player) {\n        if (player.isAlive()) {\n            const lastPosition = player.getLastPosition();\n            const left = lastPosition.left;\n            const top  = lastPosition.top;\n            const color = player.getColor();\n            this.Render_drawHead(left, top, color);\n        }\n    }\n\n    updateGUIScoreboard() {\n        const updateScore = (player) => {\n            const id = player.getID();\n            this.GUI_updateScoreOfPlayer(id, this.getScoreOfPlayer(id));\n        }\n        this.getLivePlayers().forEach(updateScore);\n    }\n\n    death(player, cause) {\n        player.die(cause);\n        this.getCurrentRound().add(player);\n        this.updateGUIScoreboard();\n        if (this.isRoundOver()) {\n            if (this.isCompetitive()) {\n                const isAlive = this.constructor.isAlive;\n                const winner = this.players.find(isAlive);\n                this.winRound(winner);\n            }\n            this.endRound();\n        }\n    }\n\n    winRound(player) {\n        log(`${player} won the round.`);\n        // Ugly fix for the bug where the winner's head disappears when the round ends:\n        this.occupy(player, this.edgeOfSquare(player.x), this.edgeOfSquare(player.y));\n        this.getCurrentRound().add(player);\n    }\n\n    proceedKeyPressed() {\n        this.hideProceedHint();\n        this.hideQuitHint();\n        if (this.isGameOver()) {\n            // The game is over, so we should show KONEC HRY:\n            this.konecHry();\n        } else if (this.isPostRound()) {\n            // We are post round and the game is not over, so we should proceed to the next round:\n            this.beginNewRound();\n        }\n    }\n\n    shouldShowReloadConfirmationOnReloadKey() {\n        return this.isPostRound();\n    }\n\n    shouldQuitOnQuitKey() {\n        return this.isPostRound() && !this.isGameOver();\n    }\n\n    shouldQuitOnProceedKey() {\n        return this.isEnded();\n    }\n\n\n    // RENDERER AND GUI CONTROLLER COMMUNICATION\n\n    GUI_playerReady(id) {\n        this.guiController.playerReady(id);\n    }\n    GUI_playerUnready(id) {\n        this.guiController.playerUnready(id);\n    }\n    GUI_updateScoreOfPlayer(id, newScore) {\n        this.guiController.updateScoreOfPlayer(id, newScore);\n    }\n    GUI_gameStarted() {\n        this.guiController.gameStarted();\n    }\n    GUI_konecHry() {\n        this.guiController.konecHry();\n    }\n    GUI_showMessage(message) {\n        this.guiController.showMessage(message);\n    }\n    GUI_hideMessage(message) {\n        this.guiController.hideMessage(message);\n    }\n\n    Render_drawSquare(left, top, color) {\n        this.renderer.drawSquare(left, top, this.config.thickness, color);\n    }\n    Render_drawHead(left, top, color) {\n        this.renderer.drawSquare_overlay(left, top, this.config.thickness, color);\n    }\n    Render_clearSquare(left, top) {\n        this.renderer.clearSquare(left, top, this.config.thickness);\n    }\n    Render_clearHeads() {\n        this.renderer.clearRectangle_overlay(0, 0, this.width, this.height);\n    }\n    Render_clearField() {\n        this.renderer.clearRectangle(0, 0, this.width, this.height);\n        this.renderer.clearRectangle_overlay(0, 0, this.width, this.height);\n    }\n\n\n    // MAIN LOOP\n\n\n\n    updatePlayer(player, delta) {\n        if (player.isAlive()) {\n            const angleChange = this.computeAngleChange();\n            let direction = player.getDirection();\n            if (player.isPressingLeft()) {\n                direction = direction + angleChange; // let compound assignment not optimizable in V8\n            }\n            if (player.isPressingRight()) {\n                direction = direction - angleChange; // let compound assignment not optimizable in V8\n            }\n            // We use normalizeAngle so the angle stays in the interval -pi < dir <= pi:\n            player.setDirection(normalizeAngle(direction));\n            const theta = player.getVelocity() * delta / 1000;\n            player.x += theta * Math.cos(player.direction);\n            player.y -= theta * Math.sin(player.direction);\n        }\n    }\n\n    /**\n     * Updates everything on each tick.\n     * @param {Number} delta\n     *   The amount of time since the last update, in seconds.\n     */\n    update(delta) {\n        this.players.forEach((player) => { this.updatePlayer(player, delta); });\n        if (this.totalNumberOfTicks % this.maxTicksBetweenDraws() === 0) {\n            this.getLivePlayers().forEach((player) => {\n                player.enqueueDraw();\n            });\n        }\n        this.totalNumberOfTicks++;\n    }\n\n    /**\n     * Draws all players.\n     */\n    draw() {\n        this.Render_clearHeads();\n        this.players.forEach(this.drawPlayer, this);\n        this.players.forEach(this.drawHead, this);\n    }\n\n    /**\n     * Updates the FPS counter etc.\n     * @param {Number} framerate\n     *   The smoothed frames per second.\n     * @param {Boolean} panic\n     *   Whether the main loop panicked because the simulation fell too far behind real time.\n     */\n    end(framerate, panic) {\n        if (panic) {\n            let discardedTime = Math.round(MainLoop.resetFrameDelta());\n            console.warn(\"Main loop panicked. Discarding \" + discardedTime + \"ms.\");\n        }\n    }\n\n\n    /**\n     * Initiates the main loop.\n     */\n    initMainLoop() {\n        this.MainLoop = MainLoop;\n        this.MainLoop\n            .setUpdate(this.update.bind(this))\n            .setDraw(this.draw.bind(this))\n            .setEnd(this.end.bind(this))\n            .setSimulationTimestep(1000/this.config.tickrate)\n            .setMaxAllowedFPS(this.config.maxFramerate);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Game.js","export function Renderer(mainCanvas, overlayCanvas) {\n\n    const context_main = mainCanvas.getContext(\"2d\");\n    const context_overlay = overlayCanvas.getContext(\"2d\");\n\n\n    // PRIVATE FUNCTIONS:\n\n    function _drawRectangle(context, left, top, width, height, color) {\n        context.fillStyle = color;\n        context.fillRect(left, top, width, height);\n    }\n\n    function _clearRectangle(context, left, top, width, height) {\n        context.clearRect(left, top, width, height);\n    }\n\n    function _setSize(canvas, width, height) {\n        canvas.width = width;\n        canvas.height = height;\n    }\n\n\n    // PUBLIC API:\n\n    function setSize(width, height) {\n        _setSize(mainCanvas   , width, height);\n        _setSize(overlayCanvas, width, height);\n    }\n\n    // Main canvas:\n\n    function drawSquare(left, top, size, color) {\n        _drawRectangle(context_main, left, top, size, size, color);\n    }\n\n    function clearSquare(left, top, size) {\n        _clearRectangle(context_main, left, top, size, size);\n    }\n\n    function clearRectangle(left, top, width, height) {\n        _clearRectangle(context_main, left, top, width, height);\n    }\n\n    // Overlay canvas:\n\n    function drawSquare_overlay(left, top, size, color) {\n        _drawRectangle(context_overlay, left, top, size, size, color);\n    }\n\n    function clearSquare_overlay(left, top, size) {\n        _clearRectangle(context_overlay, left, top, size, size);\n    }\n\n    function clearRectangle_overlay(left, top, width, height) {\n        _clearRectangle(context_overlay, left, top, width, height);\n    }\n\n    return {\n        drawSquare,\n        clearSquare,\n        clearRectangle,\n        drawSquare_overlay,\n        clearSquare_overlay,\n        clearRectangle_overlay,\n        setSize\n    };\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Renderer.js","import { Message } from \"./Message.js\";\n\nexport class InfoMessage extends Message {\n    constructor(text) {\n        super(text, \"info\");\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/InfoMessage.js","import { Message } from \"./Message.js\";\n\nexport class WarningMessage extends Message {\n    constructor(text) {\n        super(text, \"warning\");\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/WarningMessage.js","import { isString, log, logWarning, logError } from \"./PreferencesUtilities.js\";\nimport { Preference } from \"./Preference.js\";\nimport { PreferenceWithValue } from \"./PreferenceWithValue.js\";\n\nexport function PreferenceManager(preferencesData) {\n    const LOCALSTORAGE_PREFIX = \"pref_key_\";\n\n    // Parse and validate preferences:\n    log(\"Validating preferences ...\");\n    const PREFERENCES = parsePreferences(preferencesData);\n    log(\"Done.\");\n\n    // Initialize cached preference database:\n    let CACHED_PREFERENCES_WITH_VALUES = getAllPreferencesWithDefaultValues();\n    CACHED_PREFERENCES_WITH_VALUES.forEach((preferenceWithValue) => {\n        const key = preferenceWithValue.preference.key;\n        const defaultValue = preferenceWithValue.preference.getDefaultValue();\n        try {\n            const savedValue = getSaved(key);\n            if (savedValue === null) {\n                log(`Using default value '${defaultValue}' for preference '${key}' since there was no saved value.`);\n            }\n            preferenceWithValue.value = savedValue !== null ? savedValue : defaultValue;\n        } catch(e) {\n            if (e instanceof TypeError) {\n                logWarning(`Using default value '${defaultValue}' for preference '${key}' since the saved value in localStorage was not a valid one.`);\n            } else {\n                logWarning(`Using default value '${defaultValue}' for preference '${key}' since no saved value could be loaded from localStorage.`);\n            }\n        }\n    });\n\n    function parsePreferences(preferencesData) {\n        return preferencesData.map(parsePreference);\n    }\n\n    function parsePreference(pref, index) {\n        if (!isString(pref.key)) {\n            throw new TypeError(`'The preference at index ${index} does not have a valid key (found ${pref.key}).`);\n        } else if (pref.type === undefined || !(pref.type.prototype instanceof Preference)) {\n            throw new TypeError(`Preference '${pref.key}' does not use a valid preference type (found ${pref.type}).`);\n        } else if (pref.default === undefined) {\n            throw new TypeError(`Preference '${pref.key}' has no default value.`);\n        }\n        return new (pref.type)(pref);\n    }\n\n    function preferenceExists(key) {\n        return getPreference(key) !== undefined;\n    }\n\n    function getPreference(key) {\n        return PREFERENCES.find((pref) => pref.key === key);\n    }\n\n    function getCachedPreference(key) {\n        return CACHED_PREFERENCES_WITH_VALUES.find((preferenceWithValue) => preferenceWithValue.preference.key === key);\n    }\n\n    function getAllPreferencesWithValues_saved() { // throws SecurityError etc\n        return PREFERENCES.map((preference) => new PreferenceWithValue(preference, getSaved(preference.key)));\n    }\n\n    function getAllPreferencesWithValues_cached() {\n        return PREFERENCES.map((preference) => new PreferenceWithValue(preference, getCached(preference.key)));\n    }\n\n    function getAllPreferencesWithDefaultValues() {\n        return PREFERENCES.map((preference) => new PreferenceWithValue(preference, preference.getDefaultValue()));\n    }\n\n    function getKey(pref) {\n        return pref.key;\n    }\n\n    function isValidPreferenceValue(key, value) {\n        return getPreference(key).isValidValue(value);\n    }\n\n    function setToDefaultValue(key) { // throws SecurityError etc\n        set(key, getDefaultValue(key));\n    }\n\n    function getDefaultValue(key) {\n        if (!preferenceExists(key)) {\n            throw new Error(`Preference '${key}' does not exist.`);\n        }\n        return getPreference(key).getDefaultValue();\n    }\n\n    function LS_prefix(key) {\n        return LOCALSTORAGE_PREFIX + key;\n    }\n\n    function set(key, value) { // throws SecurityError etc\n        if (!preferenceExists(key)) {\n            throw new Error(`There is no preference with key '${key}'.`);\n        }\n        const pref = getPreference(key);\n        if (!isValidPreferenceValue(key, value)) {\n            pref.invalidValue(value);\n        } else {\n            log(`Setting preference '${key}' to '${value}'.`);\n            getCachedPreference(key).value = value;\n            try {\n                localStorage.setItem(LS_prefix(key), pref.constructor.stringify(value));\n            } catch(e) {\n                logError(`Failed to save value for preference '${key}' to localStorage. The following error was thrown:\\n${e}`);\n                throw e; // likely a SecurityError, but could be others as well\n            }\n        }\n    }\n\n    function getSaved(key) { // throws SecurityError, TypeError etc\n        if (!preferenceExists(key)) {\n            throw new Error(`There is no preference with key '${key}'.`);\n        }\n        const pref = getPreference(key);\n        let savedValue;\n        try {\n            savedValue = localStorage.getItem(LS_prefix(key));\n        } catch(e) {\n            logError(`Failed to load saved value for preference '${key}' from localStorage. The following error was thrown:\\n${e}`);\n            throw e; // likely a SecurityError, but could be others as well\n        }\n        if (savedValue === null) {\n            // There was no saved value.\n            return null;\n        } else if (isValidPreferenceValue(key, pref.constructor.parse(savedValue))) {\n            return pref.constructor.parse(savedValue);\n        } else {\n            throw new TypeError(`'${savedValue}' could not be parsed to a valid value for preference '${pref}'.`);\n        }\n    }\n\n    function getCached(key) {\n        if (!preferenceExists(key)) {\n            throw new Error(`There is no preference with key '${key}'.`);\n        }\n        return getCachedPreference(key).value;\n    }\n\n    function setAllToDefault() {\n        log(\"Resetting all preferences ...\");\n        PREFERENCES.map(getKey).forEach(setToDefaultValue);\n        log(\"Done.\");\n    }\n\n    return {\n        isValidPreferenceValue,\n        set,\n        getSaved,\n        getCached,\n        setToDefaultValue,\n        getDefaultValue,\n        getAllPreferencesWithValues_saved,\n        getAllPreferencesWithValues_cached,\n        getAllPreferencesWithDefaultValues,\n        setAllToDefault\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/preferences/PreferenceManager.js","import { BooleanPreference } from \"./lib/preferences/BooleanPreference.js\";\nimport { MultichoicePreference } from \"./lib/preferences/MultichoicePreference.js\";\n\nimport TEXT from \"./locales/Zatacka.en_US.js\";\nimport STRINGS from \"./strings.js\";\n\nexport default Object.freeze([\n    {\n        type: BooleanPreference,\n        key: STRINGS.pref_key_prevent_spawnkill,\n        label: TEXT.pref_label_prevent_spawnkill,\n        description: TEXT.pref_label_description_prevent_spawnkill,\n        default: false,\n    },\n    {\n        type: BooleanPreference,\n        key: STRINGS.pref_key_confirm_quit,\n        label: TEXT.pref_label_confirm_quit,\n        description: TEXT.pref_label_description_confirm_quit,\n        default: true,\n    },\n    {\n        type: MultichoicePreference,\n        key: STRINGS.pref_key_scaling,\n        label: TEXT.pref_label_scaling,\n        description: TEXT.pref_label_description_scaling,\n        options: [\n            {\n                key: STRINGS.pref_value_scaling_prefer_quality,\n                label: TEXT.pref_label_scaling_prefer_quality,\n            },\n            {\n                key: STRINGS.pref_value_scaling_prefer_size,\n                label: TEXT.pref_label_scaling_prefer_size,\n            },\n        ],\n        default: STRINGS.pref_value_scaling_prefer_quality,\n    },\n    {\n        type: MultichoicePreference,\n        key: STRINGS.pref_key_cursor,\n        label: TEXT.pref_label_cursor,\n        description: TEXT.pref_label_description_cursor,\n        options: [\n            {\n                key: STRINGS.pref_value_cursor_always_visible,\n                label: TEXT.pref_label_cursor_always_visible,\n            },\n            {\n                key: STRINGS.pref_value_cursor_hidden_when_mouse_used_by_player,\n                label: TEXT.pref_label_cursor_hidden_when_mouse_used_by_player,\n            },\n            {\n                key: STRINGS.pref_value_cursor_always_hidden,\n                label: TEXT.pref_label_cursor_always_hidden,\n            },\n        ],\n        default: STRINGS.pref_value_cursor_hidden_when_mouse_used_by_player,\n    },\n    {\n        type: MultichoicePreference,\n        key: STRINGS.pref_key_edge_fix,\n        label: TEXT.pref_label_edge_fix,\n        description: TEXT.pref_label_description_edge_fix,\n        options: [\n            {\n                key: STRINGS.pref_value_edge_fix_off,\n                label: TEXT.pref_label_edge_fix_off,\n            },\n            {\n                key: STRINGS.pref_value_edge_fix_minimal,\n                label: TEXT.pref_label_edge_fix_minimal,\n            },\n            {\n                key: STRINGS.pref_value_edge_fix_full,\n                label: TEXT.pref_label_edge_fix_full,\n            },\n        ],\n        default: STRINGS.pref_value_edge_fix_off,\n    },\n    {\n        type: MultichoicePreference,\n        key: STRINGS.pref_key_hints,\n        label: TEXT.pref_label_hints,\n        description: TEXT.pref_label_description_hints,\n        options: [\n            {\n                key: STRINGS.pref_value_hints_all,\n                label: TEXT.pref_label_hints_all,\n            },\n            {\n                key: STRINGS.pref_value_hints_warnings_only,\n                label: TEXT.pref_label_hints_warnings_only,\n            },\n            {\n                key: STRINGS.pref_value_hints_none,\n                label: TEXT.pref_label_hints_none,\n            },\n        ],\n        default: STRINGS.pref_value_hints_all,\n    }\n]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/preferences.js","import { byID, KEY, MOUSE, Keyboard, Mouse, log, logWarning, logError } from \"./lib/utilities.js\";\n\nimport { Game } from \"./Game.js\";\nimport { Player } from \"./Player.js\";\nimport { Renderer } from \"./Renderer.js\";\nimport { GUIController } from \"./GUIController.js\";\n\nimport PREFERENCES from \"./preferences.js\";\nimport { PreferenceManager } from \"./lib/preferences/PreferenceManager.js\";\n\nimport { InfoMessage } from \"./lib/InfoMessage.js\";\nimport { WarningMessage } from \"./lib/WarningMessage.js\";\nimport { ConfirmationDialog } from \"./lib/ConfirmationDialog.js\";\n\nimport TEXT from \"./locales/Zatacka.en_US.js\";\nimport STRINGS from \"./strings.js\";\n\nconst Zatacka = (() => {\n\n    const canvas_main = byID(\"canvas_main\");\n    const canvas_overlay = byID(\"canvas_overlay\");\n    const ORIGINAL_WIDTH = canvas_main.width;\n    const ORIGINAL_HEIGHT = canvas_main.height;\n    const TOTAL_BORDER_THICKNESS = 4;\n    const KEY_RELOAD = KEY.F5;\n    const KEY_FULLSCREEN = KEY.F11;\n    const KEY_DEVTOOLS = KEY.F12;\n    const ALLOWED_KEYS = [KEY_FULLSCREEN, KEY_DEVTOOLS]; // not to be intercepted by our event handler\n\n    const config = Object.freeze({\n        tickrate: 600, // Hz\n        maxFramerate: 300, // Hz\n        canvas: canvas_main,\n        thickness: 3, // Kuxels\n        speed: 60, // Kuxels per second\n        turningRadius: 28.5, // Kuxels (NB: _radius_)\n        minSpawnAngle: -Math.PI/2, // radians\n        maxSpawnAngle:  Math.PI/2, // radians\n        spawnMargin: 100, // Kuxels\n        preventSpawnkill: false,\n        flickerFrequency: 20, // Hz, when spawning\n        flickerDuration: 830, // ms, when spawning\n        minHoleInterval: 90, // Kuxels\n        maxHoleInterval: 300, // Kuxels\n        minHoleSize: 5, // Kuxels\n        maxHoleSize: 9, // Kuxels\n        hintDelay: 3000, // ms\n        keys: {\n            \"proceed\": [KEY.SPACE, KEY.ENTER],\n            \"quit\":    [KEY.ESCAPE]\n        },\n        messages: Object.freeze({\n            pick:    new InfoMessage(TEXT.hint_pick),\n            proceed: new InfoMessage(TEXT.hint_proceed),\n            next:    new InfoMessage(TEXT.hint_next),\n            quit:    new InfoMessage(TEXT.hint_quit),\n            popup:   new WarningMessage(`<a href=\"${STRINGS.game_url}\" target=\"_blank\">` + TEXT.hint_popup + `</a>`),\n            alt:     new WarningMessage(TEXT.hint_alt),\n            ctrl:    new WarningMessage(TEXT.hint_ctrl),\n            mouse:   new WarningMessage(TEXT.hint_mouse),\n            preferences_access_denied: new WarningMessage(TEXT.hint_preferences_access_denied),\n        }),\n        dialogs: Object.freeze({\n            confirmation_quit: new ConfirmationDialog(TEXT.label_text_confirm_quit, quitGame),\n            confirmation_reload: new ConfirmationDialog(TEXT.label_text_confirm_reload, reload),\n        }),\n        defaultPlayers: Object.freeze([\n            { id: 1, name: \"Red\"   , color: \"#FF2800\", keyL: KEY[\"1\"]                              , keyR: KEY.Q                         },\n            { id: 2, name: \"Yellow\", color: \"#C3C300\", keyL: [ KEY.CTRL, KEY.Z ]                   , keyR: [ KEY.ALT, KEY.X ]            },\n            { id: 3, name: \"Orange\", color: \"#FF7900\", keyL: KEY.M                                 , keyR: KEY.COMMA                     },\n            { id: 4, name: \"Green\" , color: \"#00CB00\", keyL: KEY.LEFT_ARROW                        , keyR: KEY.DOWN_ARROW                },\n            { id: 5, name: \"Pink\"  , color: \"#DF51B6\", keyL: [ KEY.DIVIDE, KEY.END, KEY.PAGE_DOWN ], keyR: [ KEY.MULTIPLY, KEY.PAGE_UP ] },\n            { id: 6, name: \"Blue\"  , color: \"#00A2CB\", keyL: MOUSE.LEFT                            , keyR: MOUSE.RIGHT                   }\n        ])\n    });\n\n    const preferenceManager = new PreferenceManager(PREFERENCES);\n\n    function isProceedKey(key) {\n        return config.keys.proceed.includes(key);\n    }\n\n    function isQuitKey(key) {\n        return config.keys.quit.includes(key);\n    }\n\n    function shouldPreventDefault(key) {\n        return !(ALLOWED_KEYS.includes(key));\n    }\n\n    function setEdgePadding(padding) {\n        if (game.isStarted()) {\n            throw new Error(\"Cannot change edge padding when the game is running.\");\n        } else {\n            const newCanvasWidth = ORIGINAL_WIDTH - padding;\n            const newCanvasHeight = ORIGINAL_HEIGHT - 2*padding;\n            game.setSize(newCanvasWidth, newCanvasHeight);\n            guiController.setEdgePadding(padding);\n        }\n    }\n\n    function setEdgeMode(mode) {\n        let padding = 0;\n        if (mode === \"minimal\") {\n            padding = 1;\n        } else if (mode === \"full\") {\n            padding = TOTAL_BORDER_THICKNESS;\n        }\n        try {\n            setEdgePadding(padding);\n        } catch(e) {\n            logError(e);\n        }\n    }\n\n    function setScalingMode(mode) {\n        guiController.setBlurryScaling(mode === STRINGS.pref_value_scaling_prefer_size);\n    }\n\n    function setPreventSpawnkill(mode) {\n        if (game.isStarted()) {\n            throw new Error(\"Cannot change edge padding when the game is running.\");\n        } else {\n            game.setPreventSpawnkill(mode);\n        }\n    }\n\n    function getHoleConfig() {\n        return {\n            minHoleSize: config.minHoleSize,\n            maxHoleSize: config.maxHoleSize,\n            minHoleInterval: config.minHoleInterval,\n            maxHoleInterval: config.maxHoleInterval\n        };\n    }\n\n    function getPaddedHoleConfig() {\n        const thickness = config.thickness;\n        const holeConfig = getHoleConfig();\n        const paddedHoleConfig = {};\n        paddedHoleConfig.minPaddedHoleSize = holeConfig.minHoleSize + thickness;\n        paddedHoleConfig.maxPaddedHoleSize = holeConfig.maxHoleSize + thickness;\n        paddedHoleConfig.minPaddedHoleInterval = Math.max(0, holeConfig.minHoleInterval - thickness);\n        paddedHoleConfig.maxPaddedHoleInterval = Math.max(0, holeConfig.maxHoleInterval - thickness);\n        return paddedHoleConfig;\n    }\n\n    function defaultPlayerData(id) {\n        return config.defaultPlayers.find(defaultPlayer => defaultPlayer.id === id);\n    }\n\n    function defaultPlayer(id) {\n        const playerData = defaultPlayerData(id);\n        if (playerData === undefined) {\n            throw new TypeError(`There is no default player with ID ${id}.`);\n        }\n        return new Player(playerData.id,\n                          playerData.name,\n                          playerData.color,\n                          playerData.keyL,\n                          playerData.keyR,\n                          getPaddedHoleConfig());\n    }\n\n    function applyCursorBehavior() {\n        const mouseIsBeingUsed = game.getPlayers().some(hasMouseButton);\n        let behavior;\n        switch (preferenceManager.getCached(STRINGS.pref_key_cursor)) {\n            case STRINGS.pref_value_cursor_hidden_when_mouse_used_by_player:\n                behavior = mouseIsBeingUsed ? STRINGS.cursor_hidden : STRINGS.cursor_visible;\n                break;\n            case STRINGS.pref_value_cursor_always_hidden:\n                behavior = STRINGS.cursor_hidden;\n                break;\n            default:\n                behavior = STRINGS.cursor_visible;\n        }\n        log(`Setting cursor behavior to ${behavior}.`);\n        guiController.setCursorBehavior(behavior);\n    }\n\n    function proceedKeyPressedInLobby() {\n        const numberOfReadyPlayers = game.getNumberOfPlayers();\n        if (numberOfReadyPlayers > 0) {\n            clearMessages();\n            applyCursorBehavior();\n            game.setMode(numberOfReadyPlayers === 1 ? Game.PRACTICE : Game.COMPETITIVE);\n            game.start();\n        }\n    }\n\n    function hasMouseButton(player) {\n        return player.usesAnyMouseButton();\n    }\n\n    function checkForDangerousInput() {\n        if (game.getPlayers().some((player) => player.hasKey(KEY.CTRL))) {\n            guiController.showMessage(config.messages.ctrl);\n        } else {\n            guiController.hideMessage(config.messages.ctrl);\n        }\n\n        if (game.getPlayers().some((player) => player.hasKey(KEY.ALT))) {\n            guiController.showMessage(config.messages.alt);\n        } else {\n            guiController.hideMessage(config.messages.alt);\n        }\n\n        if (game.getPlayers().some(hasMouseButton)) {\n            guiController.showMessage(config.messages.mouse);\n        } else {\n            guiController.hideMessage(config.messages.mouse);\n        }\n    }\n\n    function addPlayer(id) {\n        game.addPlayer(defaultPlayer(id));\n        checkForDangerousInput();\n        clearTimeout(hintPickTimer);\n        guiController.hideMessage(config.messages.pick);\n        clearTimeout(hintProceedTimer);\n        hintProceedTimer = setTimeout(() => {\n            guiController.showMessage(config.messages.proceed);\n        }, config.hintDelay);\n    }\n\n    function removePlayer(id) {\n        game.removePlayer(id);\n        checkForDangerousInput();\n        clearTimeout(hintProceedTimer);\n        if (game.getNumberOfPlayers() === 0) {\n            guiController.hideMessage(config.messages.proceed);\n        } else {\n            hintProceedTimer = setTimeout(() => {\n                guiController.showMessage(config.messages.proceed);\n            }, config.hintDelay);\n        }\n    }\n\n    function defaultPlayerHasLeftKey(playerData, pressedKey) {\n        return pressedKey === playerData.keyL || (playerData.keyL instanceof Array && playerData.keyL.includes(pressedKey));\n    }\n\n    function defaultPlayerHasRightKey(playerData, pressedKey) {\n        return pressedKey === playerData.keyR || (playerData.keyR instanceof Array && playerData.keyR.includes(pressedKey));\n    }\n\n    function addOrRemovePlayer(playerData, pressedKey) {\n        if (defaultPlayerHasLeftKey(playerData, pressedKey)) {\n            addPlayer(playerData.id);\n        } else if (defaultPlayerHasRightKey(playerData, pressedKey)) {\n            removePlayer(playerData.id);\n        }\n    }\n\n    function eventConsumer(event) {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n\n    function keyPressedInLobby(pressedKey) {\n        config.defaultPlayers.forEach((playerData) => {\n            addOrRemovePlayer(playerData, pressedKey);\n        });\n    }\n\n    function mouseClickedInLobby(button) {\n        config.defaultPlayers.forEach((playerData) => {\n            addOrRemovePlayer(playerData, MOUSE.pack(button));\n        });\n    }\n\n    function keyHandler(event) {\n        const callback = game.isStarted() ? gameKeyHandler\n                                          : guiController.isShowingSettings() ? settingsKeyHandler\n                                                                              : lobbyKeyHandler;\n        guiController.keyPressed(event, callback);\n    }\n\n    function mouseHandler(event) {\n        const handle = (\n            game.isStarted() ? gameMouseHandler :\n            guiController.isShowingSettings() ? settingsMouseHandler :\n            guiController.isShowingDialog() ? eventConsumer :\n            event.target instanceof HTMLAnchorElement ? () => {} :\n            lobbyMouseHandler\n        );\n        handle(event);\n    }\n\n    function unloadHandler(event) {\n        if (game.isStarted()) {\n            gameUnloadHandler(event);\n        }\n    }\n\n    function lobbyKeyHandler(event) {\n        if (shouldPreventDefault(event.keyCode)) {\n            event.preventDefault();\n        }\n        const pressedKey = event.keyCode;\n        if (pressedKey === KEY_RELOAD) {\n            reload();\n        } else if (isProceedKey(pressedKey)) {\n            proceedKeyPressedInLobby();\n        } else {\n            keyPressedInLobby(pressedKey);\n        }\n    }\n\n    function lobbyMouseHandler(event) {\n        mouseClickedInLobby(event.button);\n    }\n\n    function reload() {\n        window.removeEventListener(\"beforeunload\", unloadHandler);\n        window.location.reload();\n    }\n\n    function quitGame() {\n        game.quit();\n        guiController.gameQuit();\n        game = newGame();\n        applySettings();\n    }\n\n    function gameKeyHandler(event) {\n        if (shouldPreventDefault(event.keyCode)) {\n            event.preventDefault();\n        }\n        const pressedKey = event.keyCode;\n        if (isProceedKey(pressedKey)) {\n            if (game.isPaused()) {\n                game.resume();\n            } else if (game.shouldQuitOnProceedKey()) {\n                quitGame();\n            } else {\n                game.proceedKeyPressed();\n            }\n        } else if (isQuitKey(pressedKey) && game.shouldQuitOnQuitKey()) {\n            if (preferenceManager.getCached(STRINGS.pref_key_confirm_quit) === true && !(guiController.isShowingDialog())) {\n                guiController.showDialog(config.dialogs.confirmation_quit);\n            } else {\n                quitGame();\n            }\n        } else if (pressedKey === KEY_RELOAD) {\n            if (preferenceManager.getCached(STRINGS.pref_key_confirm_quit) === true) {\n                if (game.shouldShowReloadConfirmationOnReloadKey() && !(guiController.isShowingDialog())) {\n                    guiController.showDialog(config.dialogs.confirmation_reload, reload);\n                }\n            } else {\n                reload();\n            }\n        }\n    }\n\n    function gameMouseHandler(event) {\n        event.preventDefault();\n    }\n\n    function gameUnloadHandler(event) {\n        // A simple trick to prevent accidental unloading of the entire game.\n        return event.returnValue = true;\n    }\n\n    function settingsKeyHandler(event) {\n        const pressedKey = event.keyCode;\n        if (isQuitKey(pressedKey)) {\n            hideSettings();\n        } else if (pressedKey === KEY_RELOAD) {\n            reload();\n        }\n    }\n\n    function settingsMouseHandler(event) {\n        // Intentionally empty.\n    }\n\n    function showSettings() {\n        clearTimeout(hintPickTimer);\n        clearTimeout(hintProceedTimer);\n        try {\n            guiController.updateSettingsForm(preferenceManager.getAllPreferencesWithValues_saved());\n        } catch(e) {\n            logWarning(\"Could not load settings from localStorage. Using cached settings instead.\");\n            guiController.updateSettingsForm(preferenceManager.getAllPreferencesWithValues_cached());\n            handleSettingsAccessError(e);\n        }\n        guiController.showSettings();\n    }\n\n    function hideSettings() {\n        guiController.parseSettingsForm().forEach((newSetting) => {\n            try {\n                preferenceManager.set(newSetting.key, newSetting.value);\n            } catch(e) {\n                logWarning(`Could not save setting '${newSetting.key}' to localStorage.`);\n                handleSettingsAccessError(e);\n            }\n        });\n        applySettings();\n        guiController.hideSettings();\n    }\n\n    function applySettings() {\n        let preference_value_edge_fix;\n        let preference_value_hints;\n        let preference_value_prevent_spawnkill;\n        let preference_value_scaling;\n        try {\n            preference_value_edge_fix = preferenceManager.getSaved(STRINGS.pref_key_edge_fix);\n            preference_value_hints = preferenceManager.getSaved(STRINGS.pref_key_hints);\n            preference_value_prevent_spawnkill = preferenceManager.getSaved(STRINGS.pref_key_prevent_spawnkill);\n            preference_value_scaling = preferenceManager.getSaved(STRINGS.pref_key_scaling);\n        } catch(e) {\n            logWarning(\"Could not load settings from localStorage. Using cached settings instead.\");\n            preference_value_edge_fix = preferenceManager.getCached(STRINGS.pref_key_edge_fix);\n            preference_value_hints = preferenceManager.getCached(STRINGS.pref_key_hints);\n            preference_value_prevent_spawnkill = preferenceManager.getCached(STRINGS.pref_key_prevent_spawnkill);\n            preference_value_scaling = preferenceManager.getCached(STRINGS.pref_key_scaling);\n            handleSettingsAccessError(e);\n        }\n\n        // Edge fix:\n        setEdgeMode(preference_value_edge_fix);\n        // Hints:\n        guiController.setMessageMode(preference_value_hints);\n        // Prevent spawnkill:\n        game.setPreventSpawnkill(preference_value_prevent_spawnkill);\n        // Blurry scaling:\n        setScalingMode(preference_value_scaling);\n    }\n\n    function handleSettingsAccessError(error) {\n        if (error.name === STRINGS.error_name_security) {\n            guiController.showMessage(config.messages.preferences_access_denied);\n        }\n    }\n\n    function clearMessages() {\n        clearTimeout(hintPickTimer);\n        clearTimeout(hintProceedTimer);\n        guiController.clearMessages();\n    }\n\n    function blurHandler() {\n        logWarning(\"Application lost focus.\");\n        if (game.isLive()) {\n            game.pause();\n        }\n        Keyboard.reset();\n        Mouse.reset();\n    }\n\n    function addShowSettingsButtonEventListener() {\n        const showSettingsButton = byID(STRINGS.id_button_show_settings);\n        if (showSettingsButton instanceof HTMLElement) {\n            showSettingsButton.addEventListener(\"mousedown\", eventConsumer);\n            showSettingsButton.addEventListener(\"click\", showSettings);\n        }\n    }\n\n    function addHideSettingsButtonEventListener() {\n        const hideSettingsButton = byID(STRINGS.id_button_hide_settings);\n        if (hideSettingsButton instanceof HTMLElement) {\n            hideSettingsButton.addEventListener(\"mousedown\", eventConsumer);\n            hideSettingsButton.addEventListener(\"click\", hideSettings);\n        }\n    }\n\n    function handleHistoryHazards() {\n        if (history && history.length > 1) {\n            guiController.showMessage(config.messages.popup);\n        }\n    }\n\n    function addEventListeners() {\n        log(\"Adding event listeners ...\");\n\n        // Hide/show settings:\n        addShowSettingsButtonEventListener();\n        addHideSettingsButtonEventListener();\n\n        // General event handlers:\n        document.addEventListener(\"keydown\", keyHandler);\n        document.addEventListener(\"mousedown\", mouseHandler);\n        document.addEventListener(\"contextmenu\", eventConsumer);\n        window.addEventListener(\"beforeunload\", unloadHandler);\n        window.addEventListener(\"blur\", blurHandler);\n\n        // Player input:\n        document.addEventListener(\"keydown\", Keyboard.onKeydown.bind(Keyboard));\n        document.addEventListener(\"keyup\", Keyboard.onKeyup.bind(Keyboard));\n        document.addEventListener(\"mousedown\", Mouse.onMousedown.bind(Mouse));\n        document.addEventListener(\"mouseup\", Mouse.onMouseup.bind(Mouse));\n\n        log(\"Done.\");\n    }\n\n    addEventListeners();\n\n    function newGame() {\n        return new Game(config, Renderer(canvas_main, canvas_overlay), guiController);\n    }\n\n    const guiController = GUIController(config);\n    let game = newGame();\n\n    let hintProceedTimer;\n    let hintPickTimer = setTimeout(() => {\n        guiController.showMessage(config.messages.pick);\n    }, config.hintDelay);\n\n    applySettings();\n    handleHistoryHazards();\n\n    return {\n        getConfig: () => config,\n        getGame: () => game,\n        addPlayer: (playerOrID) => {\n            const player = Player.isPlayer(playerOrID) ? playerOrID : new Player(playerOrID);\n            game.addPlayer(player);\n        }\n    };\n\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Main.js","export class Round {\n    constructor(players) {\n        // A list of the players in the order they died (winner also included):\n        this.results = [];\n    }\n\n    add(player) {\n        this.results.push(player);\n    }\n\n    getSuccessOfPlayer(id) {\n        for (let i = 0; i < this.results.length; i++) {\n            if (this.results[i].hasID(id)) {\n                return i;\n            }\n        }\n        return this.results.length;\n    }\n\n    getResults() {\n        return this.results;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Round.js","//code.stephenmorley.org\nexport function Queue(){var a=[],b=0;this.getLength=function(){return a.length-b};this.hasItem=function(i){return a.indexOf(i)!==-1};this.isEmpty=function(){return 0===a.length};this.enqueue=function(b){a.push(b)};this.dequeue=function(){if(0!==a.length){var c=a[b];2*++b>=a.length&&(a=a.slice(b),b=0);return c}};this.peek=function(){return 0<a.length?a[b]:void 0}};\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/Queue.js","/**\n * mainloop.js 1.0.1-20150816\n *\n * @author Isaac Sukin (http://www.isaacsukin.com/)\n * @license MIT\n */\n\nexport default !function(a){function b(a){if(e+j>a)return u=n(b),void 0;for(d+=a-e,e=a,q(a,d),a>g+1e3&&(f=.25*h+.75*f,g=a,h=0),h++,i=0;d>=c;)if(r(c),d-=c,++i>=240){m=!0;break}s(d/c),t(f,m),m=!1,u=n(b)}var c=1e3/60,d=0,e=0,f=60,g=0,h=0,i=0,j=0,k=!1,l=!1,m=!1,n=a.requestAnimationFrame||function(){var a=Date.now(),b,d;return function(e){return b=Date.now(),d=Math.max(0,c-(b-a)),a=b+d,setTimeout(function(){e(b+d)},d)}}(),o=a.cancelAnimationFrame||clearTimeout,p=function(){},q=p,r=p,s=p,t=p,u;a.MainLoop={getSimulationTimestep:function(){return c},setSimulationTimestep:function(a){return c=a,this},getFPS:function(){return f},getMaxAllowedFPS:function(){return 1e3/j},setMaxAllowedFPS:function(a){return\"undefined\"==typeof a&&(a=1/0),0===a?this.stop():j=1e3/a,this},resetFrameDelta:function(){var a=d;return d=0,a},setBegin:function(a){return q=a||q,this},setUpdate:function(a){return r=a||r,this},setDraw:function(a){return s=a||s,this},setEnd:function(a){return t=a||t,this},start:function(){return l||(l=!0,u=n(function(a){s(1),k=!0,e=a,g=a,h=0,u=n(b)})),this},stop:function(){return k=!1,l=!1,o(u),this},isRunning:function(){return k}},\"function\"==typeof define&&define.amd?define(a.MainLoop):\"object\"==typeof exports&&(module.exports=a.MainLoop)}(window);\n//# sourceMappingURL=mainloop.min.js.map\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/mainloop.min.js","import { Preference } from \"./Preference.js\";\nimport { RangePreference } from \"./RangePreference.js\";\n\nimport { isInt } from \"./PreferencesUtilities.js\";\n\nexport class IntegerRangePreference extends RangePreference {\n    constructor(data) {\n        if (!isInt(data.min) || !isInt(data.max)) {\n            throw new TypeError(`min and max must be integers (found ${data.min} and ${data.max} for preference '${data.key}').`);\n        }\n        super(data);\n        this.min = data.min;\n        this.max = data.max;\n        if (!this.isValidValue(data.default)) {\n            super.invalidValue(data.default);\n        }\n    }\n\n    isValidValue(value) {\n        return isInt(value) && value >= this.min && value <= this.max;\n    }\n\n    static stringify(value) {\n        return value.toString();\n    }\n\n    static parse(stringifiedValue) {\n        return parseInt(stringifiedValue);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/preferences/IntegerRangePreference.js","import { isString, isNonEmptyString } from \"./PreferencesUtilities.js\";\n\nexport class MultichoicePreferenceOption {\n    constructor(key, label) {\n        const CLASS_MULTICHOICE_PREFERENCE = \"MultichoicePreference\";\n        if (!isValidKey(key)) {\n            throw new TypeError(`The key of a ${CLASS_MULTICHOICE_PREFERENCE} option must be a non-empty string (found ${key}).`);\n        }\n        if (!isValidLabel(label)) {\n            throw new TypeError(`The label of a ${CLASS_MULTICHOICE_PREFERENCE} option must be a string (found ${label} for option '${key}').`);\n        }\n\n        this.key = key;\n        this.label = label;\n\n        function isValidKey(key) {\n            return isNonEmptyString(key);\n        }\n\n        function isValidLabel(label) {\n            return isString(label);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/preferences/MultichoicePreferenceOption.js","export class PreferenceWithValue {\n    constructor(preference, value) {\n        if (!preference.isValidValue(value)) {\n            throw new TypeError(`${value} is not a valid value for preference ${preference.key}.`);\n        }\n        this.preference = preference;\n        this.value = value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/lib/preferences/PreferenceWithValue.js"],"sourceRoot":""}